[
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Retrieve the access token used in the APIs",
    "isInternal": false,
    "name": "access_token",
    "parameters": {
     "properties": {
      "Validate": {
       "description": "Validate the token, refreshing if needed",
       "type": "boolean"
      }
     },
     "type": "object"
    },
    "result": {
     "properties": {
      "access_token": {
       "type": "string"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Log in to your Magalu Cloud account. When you login with this command,\nthe current Tenant will always be set to the default one. To see more details\nabout a successful login, use the '--show' flag when logging in",
    "isInternal": false,
    "name": "login",
    "parameters": {
     "properties": {
      "qrcode": {
       "default": false,
       "description": "Generate a qrcode for the login URL",
       "type": "boolean"
      },
      "scopes": {
       "description": "All desired scopes for the resulting access token",
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "show": {
       "description": "Show the access token after the login completes",
       "type": "boolean"
      }
     },
     "type": "object"
    },
    "result": {
     "properties": {
      "access_token": {
       "type": "string"
      },
      "selected_tenant": {
       "properties": {
        "email": {
         "type": "string"
        },
        "is_delegated": {
         "type": "boolean"
        },
        "is_managed": {
         "type": "boolean"
        },
        "legal_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "legal_name",
        "email",
        "is_managed",
        "is_delegated"
       ],
       "type": "object"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "Get the current Object Storage credentials",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "access_key_id": {
         "description": "Access key id value",
         "type": "string"
        },
        "secret_access_key": {
         "description": "Secret access key value",
         "type": "string"
        }
       },
       "required": [
        "access_key_id",
        "secret_access_key"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Set the credentials values used for Object Storage requests",
      "isInternal": false,
      "name": "set",
      "parameters": {
       "properties": {
        "access_key_id": {
         "description": "Access key id value",
         "type": "string"
        },
        "secret_access_key": {
         "description": "Secret access key value",
         "type": "string"
        }
       },
       "required": [
        "access_key_id",
        "secret_access_key"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "access_key_id": {
         "description": "Access key id value",
         "type": "string"
        },
        "secret_access_key": {
         "description": "Secret access key value",
         "type": "string"
        }
       },
       "required": [
        "access_key_id",
        "secret_access_key"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Object Storage uses a different set of credentials when compared\nto normal HTTP requests. Two keys are needed, the 'SecretKey' and\n'AccessKeyId'. Instructions on how to create these can be found\nhere: https://id.magalu.com/api-keys",
    "isInternal": false,
    "name": "object-storage",
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "Add new scopes to the current access token. Run 'auth scopes list-all'\nto see all available scopes to be added",
      "isInternal": false,
      "name": "add",
      "parameters": {
       "properties": {
        "scopes": {
         "description": "Scopes to be added to the current access token",
         "items": {
          "type": "string"
         },
         "type": "array"
        }
       },
       "required": [
        "scopes"
       ],
       "type": "object"
      },
      "result": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List all available scopes for all commands",
      "isInternal": false,
      "name": "list-all",
      "parameters": {
       "properties": {
        "target": {
         "description": "If specified, only scopes from the target operations will be listed",
         "items": {
          "type": "string"
         },
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List scopes present in the current access token",
      "isInternal": false,
      "name": "list-current",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Remove scopes from the current scopes in the access token.\nRun 'auth scopes list-current' to see current scopes",
      "isInternal": false,
      "name": "remove",
      "parameters": {
       "properties": {
        "scopes": {
         "description": "Scopes to be removed from the current access token",
         "items": {
          "type": "string"
         },
         "type": "array"
        }
       },
       "required": [
        "scopes"
       ],
       "type": "object"
      },
      "result": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Set the scopes for the current scopes in the access token.\nRun 'auth scopes list-all' to see all available scopes",
      "isInternal": false,
      "name": "set",
      "parameters": {
       "properties": {
        "scopes": {
         "description": "The new scopes to be saved in the current access token",
         "items": {
          "type": "string"
         },
         "type": "array"
        }
       },
       "required": [
        "scopes"
       ],
       "type": "object"
      },
      "result": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "version": ""
     }
    ],
    "description": "Some operations require scopes to be executed. These scopes\ncan be managed here, with operations that change the current\naccess token used in all other operations.",
    "isInternal": false,
    "name": "scopes",
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "The current Tenant is used for all Magalu HTTP requests",
      "isInternal": false,
      "name": "current",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "email": {
         "type": "string"
        },
        "is_delegated": {
         "type": "boolean"
        },
        "is_managed": {
         "type": "boolean"
        },
        "legal_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "legal_name",
        "email",
        "is_managed",
        "is_delegated"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List all available tenants for current login",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "email": {
          "type": "string"
         },
         "is_delegated": {
          "type": "boolean"
         },
         "is_managed": {
          "type": "boolean"
         },
         "legal_name": {
          "type": "string"
         },
         "uuid": {
          "type": "string"
         }
        },
        "required": [
         "uuid",
         "legal_name",
         "email",
         "is_managed",
         "is_delegated"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Set the active Tenant to be used for all subsequential requests",
      "isInternal": false,
      "name": "select",
      "parameters": {
       "properties": {
        "id": {
         "description": "The UUID of the desired Tenant. To list all possible IDs, run auth tenant list",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "access_token": {
         "type": "string"
        },
        "created_at": {
         "type": "object"
        },
        "id": {
         "type": "string"
        },
        "refresh_token": {
         "type": "string"
        },
        "scope": {
         "items": {
          "type": "string"
         },
         "type": "array"
        }
       },
       "required": [
        "id",
        "created_at",
        "access_token",
        "refresh_token",
        "scope"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Tenants work like sub-accounts. You may have more than one Tenant under your\nMagalu Cloud account and they each store their data separately, but are billed\nunder the same account",
    "isInternal": false,
    "name": "tenant",
    "version": ""
   }
  ],
  "description": "The authentication credentials set here will be used as a basis for a variety\nof HTTP requests using the MgcSDK. Authentication is done via Magalu Cloud account\n(Object Storage requires special keys, refer to it for more info)",
  "isInternal": false,
  "name": "auth",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously create a Snapshot for the currently authenticated tenant.\n\nThe Snapshot can be used when it reaches the \"available\" state and the\n \"completed\" status.\n\n#### Rules\n- The Snapshot name must be unique; otherwise, the creation will be disallowed.\n- Creating Snapshots from restored Volumes may lead to future conflicts as\n you can't delete a volume with an snapshot and can't delete a snapshot with a\n restored volume, so we recommend avoiding it.\n\n#### Notes\n- Use the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the volume that will be used to create the\n Snapshot.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "volume": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Volume",
         "type": "object"
        }
       },
       "required": [
        "description",
        "name",
        "volume"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "minLength": 1,
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "IdResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously delete a Snapshot for the currently authenticated tenant.\n\n#### Rules\n- The Snapshot's status must be \"completed\".\n- The Snapshot's state must be \"available\".\n- Deleting a Snapshot that has been restored is not possible. If necessary,\n delete the restored Volume first and then proceed to delete the Snapshot.\n\n#### Notes\n- Utilize the **block-storage snapshots** list command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot you wish to delete.\n- If needed, you can use the **block-storage volume list** command to retrieve\n a list of all Volumes and obtain the ID of the restored Volume.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve details of a Snapshot for the currently authenticated tenant.\n\n#### Notes\n- Use the **expand** argument to obtain additional details about the Volume\n used to create the Snapshot.\n- Utilize the **block-storage snapshots list** command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot for which you want to retrieve\n details.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "items": {
          "enum": [
           "volume"
          ],
          "title": "ExpandSnapshots",
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01T00:00:10Z",
        "description": "my snapshot for testing",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "name": "My snapshot",
        "size": 10,
        "state": "available",
        "status": "completed",
        "updated_at": "2022-01-01T00:00:10Z",
        "volume": {
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        }
       },
       "properties": {
        "created_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "size": {
         "title": "Size",
         "type": "integer"
        },
        "state": {
         "enum": [
          "new",
          "available",
          "deleted"
         ],
         "title": "SnapshotStateV1",
         "type": "string"
        },
        "status": {
         "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_error_quota",
          "completed",
          "deleting",
          "deleted",
          "deleted_error"
         ],
         "title": "SnapshotStatusV1",
         "type": "string"
        },
        "updated_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdResponse",
           "type": "object"
          },
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "My volume",
            "size": 10,
            "type": {
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "name": "My volume type"
            }
           },
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "size": {
             "title": "Size",
             "type": "integer"
            },
            "type": {
             "example": {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "My volume type"
             },
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "id",
              "name"
             ],
             "title": "SnapshotVolumeType",
             "type": "object"
            }
           },
           "required": [
            "id",
            "name",
            "size",
            "type"
           ],
           "title": "SnapshotVolume",
           "type": "object"
          }
         ],
         "title": "Volume",
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "size",
        "description",
        "state",
        "status",
        "created_at",
        "updated_at",
        "volume"
       ],
       "title": "SnapshotResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve a list of Snapshots for the currently authenticated tenant.\n\n#### Notes\n- Use the expand argument to obtain additional details about the Volume used to\n create each Snapshot.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "items": {
          "enum": [
           "volume"
          ],
          "title": "ExpandSnapshots",
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "snapshots": [
         {
          "created_at": "2022-01-01T00:00:10Z",
          "description": "my snapshot for testing",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "My snapshot",
          "size": 10,
          "state": "available",
          "status": "completed",
          "updated_at": "2022-01-01T00:00:10Z",
          "volume": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         }
        ]
       },
       "properties": {
        "snapshots": {
         "items": {
          "example": {
           "created_at": "2022-01-01T00:00:10Z",
           "description": "my snapshot for testing",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "name": "My snapshot",
           "size": 10,
           "state": "available",
           "status": "completed",
           "updated_at": "2022-01-01T00:00:10Z",
           "volume": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          },
          "properties": {
           "created_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "size": {
            "title": "Size",
            "type": "integer"
           },
           "state": {
            "enum": [
             "new",
             "available",
             "deleted"
            ],
            "title": "SnapshotStateV1",
            "type": "string"
           },
           "status": {
            "enum": [
             "provisioning",
             "creating",
             "creating_error",
             "creating_error_quota",
             "completed",
             "deleting",
             "deleted",
             "deleted_error"
            ],
            "title": "SnapshotStatusV1",
            "type": "string"
           },
           "updated_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "anyOf": [
             {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "properties": {
               "id": {
                "minLength": 1,
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "IdResponse",
              "type": "object"
             },
             {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "name": "My volume",
               "size": 10,
               "type": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "name": "My volume type"
               }
              },
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "size": {
                "title": "Size",
                "type": "integer"
               },
               "type": {
                "example": {
                 "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                 "name": "My volume type"
                },
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 }
                },
                "required": [
                 "id",
                 "name"
                ],
                "title": "SnapshotVolumeType",
                "type": "object"
               }
              },
              "required": [
               "id",
               "name",
               "size",
               "type"
              ],
              "title": "SnapshotVolume",
              "type": "object"
             }
            ],
            "title": "Volume",
            "type": "object"
           }
          },
          "required": [
           "id",
           "name",
           "size",
           "description",
           "state",
           "status",
           "created_at",
           "updated_at",
           "volume"
          ],
          "title": "SnapshotResponse",
          "type": "object"
         },
         "title": "Snapshots",
         "type": "array"
        }
       },
       "required": [
        "snapshots"
       ],
       "title": "SnapshotListResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Rename a Snapshot for the currently authenticated tenant.\n\n#### Rules\n- The Snapshot name must be unique; otherwise, renaming will not be allowed.\n\n#### Notes\n- Utilize the **block-storage snapshots list** command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot you wish to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously restore a Snapshot on a new Volume to the currently\n authenticated tenant.\n\nThe restored Volume can be used when it reaches the \"available\" state and the\n \"completed\" status.\n\n#### Notes\n- To obtain the ID of the Snapshot you wish to restore, you can use the\n **block-storage snapshots list** command to list all Snapshots.\n- Check the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.",
      "isInternal": false,
      "name": "restore",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "title": "Name",
         "type": "string"
        },
        "snapshot_id": {
         "format": "uuid",
         "title": "Snapshot Id",
         "type": "string"
        }
       },
       "required": [
        "name",
        "snapshot_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "minLength": 1,
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "IdResponse",
       "type": "object"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with snapshots for volumes.",
    "isInternal": false,
    "name": "snapshots",
    "version": "v1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Attach a volume to a virtual machine instance",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Detach a volume from a virtual machine instance",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Check if a volume is attached to a virtual machine instance",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Update a block storage volume attachment",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Block Storage Volume Attachment",
    "isInternal": false,
    "name": "volume-attachment",
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List Volume Types allowed in the current region.\n\n#### Notes\n\n- Volume types are managed internally. If you wish to use a Volume Type that\n is not yet available, please contact our support team for assistance.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "types": [
         {
          "disk_type": "nvme",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "iops": {
           "read": 1000,
           "write": 1000
          },
          "name": "my_volume_type",
          "status": "active"
         }
        ]
       },
       "properties": {
        "types": {
         "items": {
          "example": {
           "disk_type": "nvme",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "iops": {
            "read": 1000,
            "write": 1000
           },
           "name": "my_volume_type",
           "status": "active"
          },
          "properties": {
           "disk_type": {
            "enum": [
             "nvme",
             "hdd"
            ],
            "title": "DiskType",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "iops": {
            "properties": {
             "read": {
              "title": "Read",
              "type": "integer"
             },
             "write": {
              "title": "Write",
              "type": "integer"
             }
            },
            "required": [
             "read",
             "write"
            ],
            "title": "VolumeTypeSpec",
            "type": "object"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "status": {
            "enum": [
             "active",
             "deprecated",
             "deleted"
            ],
            "title": "VolumeTypeStatus",
            "type": "string"
           }
          },
          "required": [
           "iops",
           "id",
           "name",
           "disk_type",
           "status"
          ],
          "title": "VolumeTypeResponse",
          "type": "object"
         },
         "title": "Types",
         "type": "array"
        }
       },
       "required": [
        "types"
       ],
       "title": "GenericVolumeTypeList[VolumeTypeResponse]",
       "type": "object"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with volume types for volumes.",
    "isInternal": false,
    "name": "volume-types",
    "version": "v1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously attach a Volume to a Virtual Machine instance for the currently\n authenticated tenant.\n\nThe Volume attachment will be completed when the volume status returns to\n\"completed\", and the state becomes \"in-use\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"available\".\n- The Virtual Machine's state must be \"stopped\" or \"running\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n**virtual-machine instances get --id [uuid]** command\".",
      "isInternal": false,
      "name": "attach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "required": [
        "id",
        "virtual_machine_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously create a Volume for the currently authenticated tenant.\n\nThe Volume can be used when it reaches the \"available\" state and \"completed\"\n status.\n\n#### Rules\n- The Volume name must be unique; otherwise, the creation will be disallowed.\n- The Volume type must be available to use.\n\n#### Notes\n- Utilize the **block-storage volume-types list** command to retrieve a list\n of all available Volume Types.\n- Verify the state and status of your Volume using the\n**block-storage volume get --id [uuid]** command\".",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "size": {
         "description": "Gibibytes (GiB)",
         "maximum": 2147483648,
         "minimum": 1,
         "title": "Size",
         "type": "integer"
        },
        "type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Type",
         "type": "object"
        }
       },
       "required": [
        "name",
        "size",
        "type"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "minLength": 1,
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "IdResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously delete a Volume for the currently authenticated tenant.\n\n#### Rules\n- The Volume cannot be attached to a Virtual Machine, i.e., its state cannot\n be \"in-use\". If necessary, detach the Volume from the Virtual Machine before\n proceeding with deletion.\n- The Volume must not have any snapshots. If necessary, delete the Volume's\n  snapshots before proceeding with deletion.\n- The volume must have the status \"completed\", i.e., must not have any\n  actions in progress.\n\n\n#### Notes\n- Check the state and status of your Volume using the\n**block-storage volume get --id [uuid]** command\".",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously detach a Volume from a Virtual Machine instance for the\n currently authenticated tenant.\n\nThe Volume detachment will be completed when the volume state returns to\n \"available,\" and the status becomes \"completed\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"in-use\".\n- The Virtual Machine's state must be \"stopped\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n **virtual-machine instances get --id [uuid]** command.\n- Ensure that any file systems on the device within your operating system are\n unmounted before detaching the volume.\n\n#### Troubleshooting\n- A failure during detachment can result in the volume becoming stuck in the\n busy state. If this occurs, detachment may be delayed indefinitely until you\n unmount the volume, force detachment, reboot the instance, or perform all\n three.",
      "isInternal": false,
      "name": "detach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "required": [
        "id",
        "virtual_machine_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously extend the size of an existing Volume for the currently\n authenticated tenant.\n\nThe Volume extension will be completed when the Volume status returns to\n \"completed\".\n\n#### Rules\n- The Volume status must be \"available\".\n- The Volume status must be \"completed\" or \"extend_error\".\n- The new Volume size must be larger than the current size.\n\n#### Notes\n- Utilize the block-storage volume list command to retrieve a list of all\n Volumes and obtain the ID of the volume you want to extend.\n- Storage quotas are managed internally. If the operation fails due to quota\n restrictions, please contact our support team for assistance.",
      "isInternal": false,
      "name": "extend",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "size": {
         "description": "New volume size in GB",
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Size",
         "type": "integer"
        }
       },
       "required": [
        "id",
        "size"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve details of a Volume for the currently authenticated tenant.\n\n#### Notes\n- Use the **expand** argument to obtain additional details about the Volume\n Type.\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume for which you want to retrieve\n details.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['volume_type', 'attachment']",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "attachment": {
         "attached_at": "2022-01-01T00:00:10Z",
         "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "created_at": "2022-01-01T00:00:10Z",
        "error": {
         "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
         "slug": "creating_error_quota"
        },
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "name": "volume name",
        "size": 10,
        "state": "in-use",
        "status": "completed",
        "type": {
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "updated_at": "2022-01-01T00:00:10Z"
       },
       "properties": {
        "attachment": {
         "anyOf": [
          {
           "example": {
            "attached_at": "2022-01-01T00:00:10Z",
            "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "attached_at": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "format": "date-time",
               "type": "string"
              }
             ],
             "example": "2022-01-01T00:00:10Z",
             "title": "Attached At",
             "type": "string"
            },
            "machine_id": {
             "title": "Machine Id",
             "type": "string"
            }
           },
           "required": [
            "machine_id",
            "attached_at"
           ],
           "title": "AttachmentResponse",
           "type": "object"
          },
          {
           "example": {
            "machine": {
             "created_at": "2022-01-01T00:00:10Z",
             "name": "machine name",
             "state": "running",
             "status": "completed",
             "updated_at": "2022-01-01T00:00:10Z"
            }
           },
           "properties": {
            "attached_at": {
             "anyOf": [
              {
               "type": "string"
              },
              {
               "format": "date-time",
               "type": "string"
              }
             ],
             "example": "2022-01-01T00:00:10Z",
             "title": "Attached At",
             "type": "string"
            },
            "machine": {
             "example": {
              "created_at": "2022-01-01T00:00:10Z",
              "name": "machine name",
              "state": "running",
              "status": "completed",
              "updated_at": "2022-01-01T00:00:10Z"
             },
             "properties": {
              "created_at": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "format": "date-time",
                 "type": "string"
                }
               ],
               "example": "2022-01-01T00:00:10Z",
               "title": "Created At",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "state": {
               "enum": [
                "new",
                "running",
                "stopped",
                "suspended",
                "deleted"
               ],
               "title": "InstanceState",
               "type": "string"
              },
              "status": {
               "enum": [
                "provisioning",
                "creating",
                "creating_error",
                "creating_error_quota",
                "completed",
                "retyping_pending",
                "retyping",
                "retyping_confirmed",
                "retyping_error",
                "retyping_error_quota",
                "stopping_pending",
                "stopping",
                "suspending_pending",
                "suspending",
                "rebooting_pending",
                "rebooting",
                "starting_pending",
                "starting",
                "deleting_pending",
                "deleting",
                "deleting_error",
                "deleted"
               ],
               "title": "InstanceStatus",
               "type": "string"
              },
              "updated_at": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "format": "date-time",
                 "type": "string"
                }
               ],
               "example": "2022-01-01T00:00:10Z",
               "title": "Updated At",
               "type": "string"
              }
             },
             "required": [
              "name",
              "status",
              "state",
              "created_at",
              "updated_at"
             ],
             "title": "AttachmentMachine",
             "type": "object"
            },
            "machine_id": {
             "title": "Machine Id",
             "type": "string"
            }
           },
           "required": [
            "machine_id",
            "attached_at",
            "machine"
           ],
           "title": "AttachmentResponseExpanded",
           "type": "object"
          }
         ],
         "nullable": true,
         "title": "Attachment",
         "type": "object"
        },
        "created_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "error": {
         "example": {
          "message": "Unauthorized",
          "slug": "Unauthorized"
         },
         "properties": {
          "message": {
           "title": "Message",
           "type": "string"
          },
          "slug": {
           "title": "Slug",
           "type": "string"
          }
         },
         "required": [
          "slug",
          "message"
         ],
         "title": "VolumeResponseError",
         "type": "object"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "size": {
         "title": "Size",
         "type": "integer"
        },
        "state": {
         "enum": [
          "new",
          "available",
          "in-use",
          "deleted",
          "legacy"
         ],
         "title": "VolumeStateV1",
         "type": "string"
        },
        "status": {
         "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_error_quota",
          "completed",
          "extend_pending",
          "extending",
          "extend_error",
          "extend_quota",
          "attaching_pending",
          "attaching_error",
          "attaching",
          "in_use",
          "detaching_pending",
          "detaching_error",
          "detaching",
          "retype_pending",
          "retyping",
          "retype_error",
          "retype_error_quota",
          "deleting_pending",
          "deleting",
          "deleted",
          "deleted_error"
         ],
         "title": "VolumeStatusV1",
         "type": "string"
        },
        "type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "disk_type": "nvme",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "iops": {
             "read": 1000,
             "write": 1000
            },
            "name": "my_volume_type",
            "status": "active"
           },
           "properties": {
            "disk_type": {
             "enum": [
              "nvme",
              "hdd"
             ],
             "title": "DiskType",
             "type": "string"
            },
            "id": {
             "title": "Id",
             "type": "string"
            },
            "iops": {
             "properties": {
              "read": {
               "title": "Read",
               "type": "integer"
              },
              "write": {
               "title": "Write",
               "type": "integer"
              }
             },
             "required": [
              "read",
              "write"
             ],
             "title": "VolumeTypeSpec",
             "type": "object"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "status": {
             "enum": [
              "active",
              "deprecated",
              "deleted"
             ],
             "title": "VolumeTypeStatus",
             "type": "string"
            }
           },
           "required": [
            "iops",
            "id",
            "name",
            "disk_type",
            "status"
           ],
           "title": "VolumeTypeResponse",
           "type": "object"
          }
         ],
         "title": "Type",
         "type": "object"
        },
        "updated_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Updated At",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name",
        "size",
        "status",
        "state",
        "created_at",
        "updated_at",
        "type"
       ],
       "title": "VolumeResponseV1",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve a list of Volumes for the currently authenticated tenant.\n\n#### Notes\n- Use the expand argument to obtain additional details about the Volume Type.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['volume_type', 'attachment']",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "volumes": [
         {
          "attachment": {
           "attached_at": "2022-01-01T00:00:10Z",
           "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "created_at": "2022-01-01T00:00:10Z",
          "error": {
           "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
           "slug": "creating_error_quota"
          },
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "volume name",
          "size": 10,
          "state": "in-use",
          "status": "completed",
          "type": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "updated_at": "2022-01-01T00:00:10Z"
         }
        ]
       },
       "properties": {
        "volumes": {
         "items": {
          "example": {
           "attachment": {
            "attached_at": "2022-01-01T00:00:10Z",
            "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "created_at": "2022-01-01T00:00:10Z",
           "error": {
            "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
            "slug": "creating_error_quota"
           },
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "name": "volume name",
           "size": 10,
           "state": "in-use",
           "status": "completed",
           "type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "updated_at": "2022-01-01T00:00:10Z"
          },
          "properties": {
           "attachment": {
            "anyOf": [
             {
              "example": {
               "attached_at": "2022-01-01T00:00:10Z",
               "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "properties": {
               "attached_at": {
                "anyOf": [
                 {
                  "type": "string"
                 },
                 {
                  "format": "date-time",
                  "type": "string"
                 }
                ],
                "example": "2022-01-01T00:00:10Z",
                "title": "Attached At",
                "type": "string"
               },
               "machine_id": {
                "title": "Machine Id",
                "type": "string"
               }
              },
              "required": [
               "machine_id",
               "attached_at"
              ],
              "title": "AttachmentResponse",
              "type": "object"
             },
             {
              "example": {
               "machine": {
                "created_at": "2022-01-01T00:00:10Z",
                "name": "machine name",
                "state": "running",
                "status": "completed",
                "updated_at": "2022-01-01T00:00:10Z"
               }
              },
              "properties": {
               "attached_at": {
                "anyOf": [
                 {
                  "type": "string"
                 },
                 {
                  "format": "date-time",
                  "type": "string"
                 }
                ],
                "example": "2022-01-01T00:00:10Z",
                "title": "Attached At",
                "type": "string"
               },
               "machine": {
                "example": {
                 "created_at": "2022-01-01T00:00:10Z",
                 "name": "machine name",
                 "state": "running",
                 "status": "completed",
                 "updated_at": "2022-01-01T00:00:10Z"
                },
                "properties": {
                 "created_at": {
                  "anyOf": [
                   {
                    "type": "string"
                   },
                   {
                    "format": "date-time",
                    "type": "string"
                   }
                  ],
                  "example": "2022-01-01T00:00:10Z",
                  "title": "Created At",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 },
                 "state": {
                  "enum": [
                   "new",
                   "running",
                   "stopped",
                   "suspended",
                   "deleted"
                  ],
                  "title": "InstanceState",
                  "type": "string"
                 },
                 "status": {
                  "enum": [
                   "provisioning",
                   "creating",
                   "creating_error",
                   "creating_error_quota",
                   "completed",
                   "retyping_pending",
                   "retyping",
                   "retyping_confirmed",
                   "retyping_error",
                   "retyping_error_quota",
                   "stopping_pending",
                   "stopping",
                   "suspending_pending",
                   "suspending",
                   "rebooting_pending",
                   "rebooting",
                   "starting_pending",
                   "starting",
                   "deleting_pending",
                   "deleting",
                   "deleting_error",
                   "deleted"
                  ],
                  "title": "InstanceStatus",
                  "type": "string"
                 },
                 "updated_at": {
                  "anyOf": [
                   {
                    "type": "string"
                   },
                   {
                    "format": "date-time",
                    "type": "string"
                   }
                  ],
                  "example": "2022-01-01T00:00:10Z",
                  "title": "Updated At",
                  "type": "string"
                 }
                },
                "required": [
                 "name",
                 "status",
                 "state",
                 "created_at",
                 "updated_at"
                ],
                "title": "AttachmentMachine",
                "type": "object"
               },
               "machine_id": {
                "title": "Machine Id",
                "type": "string"
               }
              },
              "required": [
               "machine_id",
               "attached_at",
               "machine"
              ],
              "title": "AttachmentResponseExpanded",
              "type": "object"
             }
            ],
            "nullable": true,
            "title": "Attachment",
            "type": "object"
           },
           "created_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "error": {
            "example": {
             "message": "Unauthorized",
             "slug": "Unauthorized"
            },
            "properties": {
             "message": {
              "title": "Message",
              "type": "string"
             },
             "slug": {
              "title": "Slug",
              "type": "string"
             }
            },
            "required": [
             "slug",
             "message"
            ],
            "title": "VolumeResponseError",
            "type": "object"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "size": {
            "title": "Size",
            "type": "integer"
           },
           "state": {
            "enum": [
             "new",
             "available",
             "in-use",
             "deleted",
             "legacy"
            ],
            "title": "VolumeStateV1",
            "type": "string"
           },
           "status": {
            "enum": [
             "provisioning",
             "creating",
             "creating_error",
             "creating_error_quota",
             "completed",
             "extend_pending",
             "extending",
             "extend_error",
             "extend_quota",
             "attaching_pending",
             "attaching_error",
             "attaching",
             "in_use",
             "detaching_pending",
             "detaching_error",
             "detaching",
             "retype_pending",
             "retyping",
             "retype_error",
             "retype_error_quota",
             "deleting_pending",
             "deleting",
             "deleted",
             "deleted_error"
            ],
            "title": "VolumeStatusV1",
            "type": "string"
           },
           "type": {
            "anyOf": [
             {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "properties": {
               "id": {
                "minLength": 1,
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "IdRequest",
              "type": "object"
             },
             {
              "example": {
               "disk_type": "nvme",
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "iops": {
                "read": 1000,
                "write": 1000
               },
               "name": "my_volume_type",
               "status": "active"
              },
              "properties": {
               "disk_type": {
                "enum": [
                 "nvme",
                 "hdd"
                ],
                "title": "DiskType",
                "type": "string"
               },
               "id": {
                "title": "Id",
                "type": "string"
               },
               "iops": {
                "properties": {
                 "read": {
                  "title": "Read",
                  "type": "integer"
                 },
                 "write": {
                  "title": "Write",
                  "type": "integer"
                 }
                },
                "required": [
                 "read",
                 "write"
                ],
                "title": "VolumeTypeSpec",
                "type": "object"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "status": {
                "enum": [
                 "active",
                 "deprecated",
                 "deleted"
                ],
                "title": "VolumeTypeStatus",
                "type": "string"
               }
              },
              "required": [
               "iops",
               "id",
               "name",
               "disk_type",
               "status"
              ],
              "title": "VolumeTypeResponse",
              "type": "object"
             }
            ],
            "title": "Type",
            "type": "object"
           },
           "updated_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Updated At",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "size",
           "status",
           "state",
           "created_at",
           "updated_at",
           "type"
          ],
          "title": "VolumeResponseV1",
          "type": "object"
         },
         "title": "Volumes",
         "type": "array"
        }
       },
       "required": [
        "volumes"
       ],
       "title": "VolumesResponseV1",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Rename a Volume for the currently authenticated tenant.\n\n#### Rules\n- The Volume name must be unique; otherwise, renaming will not be allowed.\n\n#### Notes\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume you wish to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Asynchronously change the Volume Type of an existing Volume for the currently\n authenticated tenant.\n\nThe Volume retype will be completed when the Volume status returns to\n \"completed\".\n\n#### Rules\n- The Volume state must be \"available\".\n- The Volume status must be \"completed\" or \"retype_error\".\n- The new Volume Type must belong to the same region as the Volume.\n\n#### Notes\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume you want to retype.\n- Utilize the **block-storage volume-types list** command to retrieve a list of\n all Volume Types and obtain the ID of the Volume Type you want to use.",
      "isInternal": false,
      "name": "retype",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "new_type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "New Type",
         "type": "object"
        }
       },
       "required": [
        "id",
        "new_type"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with volumes, including create, delete, extend, retype, list and other actions.",
    "isInternal": false,
    "name": "volumes",
    "version": "v1"
   }
  ],
  "description": "Block Storage API Product Documentation",
  "isInternal": false,
  "name": "block-storage",
  "version": "v1"
 },
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Delete/unset a Config value that had been previously set. This does not\naffect the environment variables",
    "isInternal": false,
    "name": "delete",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the config to be deleted",
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Get a specific Config value that has been previously set. If there's an env variable\nmatching the key (in uppercase and with the 'MGC_' prefix), it'll be retreived.\nOtherwise, the value will be searched for in the YAML file",
    "isInternal": false,
    "name": "get",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the desired config",
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Get the JSON Schema for the specified Config. The Schema has\ninformation about the accepted values for the Config, constraints, type, description, etc.",
    "isInternal": false,
    "name": "get-schema",
    "parameters": {
     "properties": {
      "key": {
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "nullable": true,
     "properties": {
      "additionalProperties": {
       "properties": {
        "has": {
         "nullable": true,
         "type": "boolean"
        },
        "schema": {
         "$ref": "#/$defs/SchemaRef"
        }
       },
       "type": "object"
      },
      "allOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "allowEmptyValue": {
       "type": "boolean"
      },
      "anyOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "default": {
       "anyOf": [
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "deprecated": {
       "type": "boolean"
      },
      "description": {
       "type": "string"
      },
      "discriminator": {
       "properties": {
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "mapping": {
         "additionalProperties": {
          "type": "string"
         },
         "type": "object"
        },
        "propertyName": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "enum": {
       "items": {
        "anyOf": [
         {
          "type": "boolean"
         },
         {
          "type": "string"
         },
         {
          "type": "number"
         },
         {
          "type": "integer"
         },
         {
          "type": "array"
         },
         {
          "additionalProperties": true,
          "type": "object"
         }
        ],
        "nullable": true
       },
       "type": "array"
      },
      "example": {
       "anyOf": [
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "exclusiveMax": {
       "type": "boolean"
      },
      "exclusiveMin": {
       "type": "boolean"
      },
      "extensions": {
       "additionalProperties": true,
       "type": "object"
      },
      "externalDocs": {
       "properties": {
        "description": {
         "type": "string"
        },
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "url": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "format": {
       "type": "string"
      },
      "items": {
       "$ref": "#/$defs/SchemaRef"
      },
      "max": {
       "type": "number"
      },
      "maxItems": {
       "format": "int64",
       "type": "integer"
      },
      "maxLength": {
       "format": "int64",
       "type": "integer"
      },
      "maxProps": {
       "format": "int64",
       "type": "integer"
      },
      "min": {
       "type": "number"
      },
      "minItems": {
       "format": "int64",
       "type": "integer"
      },
      "minLength": {
       "format": "int64",
       "type": "integer"
      },
      "minProps": {
       "format": "int64",
       "type": "integer"
      },
      "multipleOf": {
       "type": "number"
      },
      "not": {
       "$ref": "#/$defs/SchemaRef"
      },
      "nullable": {
       "type": "boolean"
      },
      "oneOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "pattern": {
       "type": "string"
      },
      "properties": {
       "$ref": "#/$defs/Schemas"
      },
      "readOnly": {
       "type": "boolean"
      },
      "required": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "title": {
       "type": "string"
      },
      "type": {
       "type": "string"
      },
      "uniqueItems": {
       "type": "boolean"
      },
      "writeOnly": {
       "type": "boolean"
      },
      "xml": {
       "properties": {
        "attribute": {
         "type": "boolean"
        },
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "name": {
         "type": "string"
        },
        "namespace": {
         "type": "string"
        },
        "prefix": {
         "type": "string"
        },
        "wrapped": {
         "type": "boolean"
        }
       },
       "type": "object"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "List all available Configs",
    "isInternal": false,
    "name": "list",
    "parameters": {
     "type": "object"
    },
    "result": {
     "additionalProperties": true,
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Set a specific Config value in the configuration file",
    "isInternal": false,
    "name": "set",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the desired config",
       "type": "string"
      },
      "value": {
       "description": "New flag value"
      }
     },
     "required": [
      "key",
      "value"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   }
  ],
  "description": "Configuration values are available to be set so that they persist between\ndifferent executions of the MgcSDK. They reside in a YAML file when set.\nConfig values may also be loaded via Environment Variables. Any Config available\n(see 'list') may be exported as an env variable in uppercase with the 'MGC_' prefix",
  "isInternal": false,
  "name": "config",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a database backup.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_id": {
         "description": "Value referring to backup Id.",
         "format": "uuid",
         "title": "Backup Id",
         "type": "string"
        }
       },
       "required": [
        "backup_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get a backup detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_id": {
         "description": "Value referring to backup Id.",
         "format": "uuid",
         "title": "Backup Id",
         "type": "string"
        }
       },
       "required": [
        "backup_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "db_size": {
         "description": "Database size in kilobytes (1024 kilobytes = 1 megabyte).",
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Database Size",
         "type": "integer"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        },
        "location": {
         "title": "Location",
         "type": "string"
        },
        "mode": {
         "description": "An enumeration.",
         "enum": [
          "FULL",
          "INCREMENTAL"
         ],
         "title": "Backup Mode",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "size": {
         "description": "Backup file size in kilobytes (1024 kilobytes = 1 megabyte).",
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Size",
         "type": "integer"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "PENDING",
          "CREATING",
          "CREATED",
          "ERROR",
          "DELETING",
          "DELETED"
         ],
         "title": "Backup Status",
         "type": "string"
        },
        "type": {
         "description": "An enumeration.",
         "enum": [
          "ON_DEMAND",
          "AUTOMATED"
         ],
         "title": "Backup Type",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        }
       },
       "required": [
        "id",
        "instance_id",
        "type",
        "status",
        "mode",
        "created_at"
       ],
       "title": "Backup Detail Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List all backups.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "limit": {
         "default": 10,
         "description": "limit",
         "maximum": 25,
         "minimum": 1,
         "type": "integer"
        },
        "mode": {
         "description": "Value referring to backup mode.",
         "enum": [
          "FULL",
          "INCREMENTAL"
         ],
         "title": "Backup Mode",
         "type": "string"
        },
        "offset": {
         "default": 0,
         "description": "offset",
         "minimum": 0,
         "type": "integer"
        },
        "status": {
         "description": "Value referring to backup status.",
         "enum": [
          "PENDING",
          "CREATING",
          "CREATED",
          "ERROR",
          "DELETING",
          "DELETED"
         ],
         "title": "Backup Status",
         "type": "string"
        },
        "type": {
         "description": "Value referring to backup type.",
         "enum": [
          "ON_DEMAND",
          "AUTOMATED"
         ],
         "title": "Backup Type",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "results": {
         "items": {
          "properties": {
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "db_size": {
            "description": "Database size in kilobytes (1024 kilobytes = 1 megabyte).",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Database Size",
            "type": "integer"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "instance_id": {
            "format": "uuid",
            "title": "Instance Id",
            "type": "string"
           },
           "location": {
            "title": "Location",
            "type": "string"
           },
           "mode": {
            "description": "An enumeration.",
            "enum": [
             "FULL",
             "INCREMENTAL"
            ],
            "title": "Backup Mode",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "size": {
            "description": "Backup file size in kilobytes (1024 kilobytes = 1 megabyte).",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Size",
            "type": "integer"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "PENDING",
             "CREATING",
             "CREATED",
             "ERROR",
             "DELETING",
             "DELETED"
            ],
            "title": "Backup Status",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "ON_DEMAND",
             "AUTOMATED"
            ],
            "title": "Backup Type",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           }
          },
          "required": [
           "id",
           "instance_id",
           "type",
           "status",
           "mode",
           "created_at"
          ],
          "title": "Backup Detail Response",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "title": "Backups Response",
       "type": "object"
      },
      "version": "1.10.1"
     }
    ],
    "description": "Database backups management.",
    "isInternal": false,
    "name": "backups",
    "version": "1.10.1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a datastore detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "datastore_id": {
         "description": "Value referring to datastore Id.",
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        }
       },
       "required": [
        "datastore_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "engine": {
         "description": "Database engine.",
         "example": "mysql",
         "title": "Engine",
         "type": "string"
        },
        "id": {
         "description": "Datastore unique identifier.",
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "title": "Datastore Status",
         "type": "string"
        },
        "version": {
         "description": "Database engine version.",
         "example": "5.7",
         "title": "Version",
         "type": "string"
        }
       },
       "required": [
        "engine",
        "id",
        "version"
       ],
       "title": "Datastore",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of available datastores. A datastore is a combination of engine and version.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "limit": {
         "default": 10,
         "description": "limit",
         "maximum": 25,
         "minimum": 1,
         "type": "integer"
        },
        "offset": {
         "default": 0,
         "description": "offset",
         "minimum": 0,
         "type": "integer"
        },
        "status": {
         "description": "Value referring to datastore status.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "title": "Datastore Status",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "results": {
         "items": {
          "properties": {
           "engine": {
            "description": "Database engine.",
            "example": "mysql",
            "title": "Engine",
            "type": "string"
           },
           "id": {
            "description": "Datastore unique identifier.",
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "ACTIVE",
             "DEPRECATED"
            ],
            "title": "Datastore Status",
            "type": "string"
           },
           "version": {
            "description": "Database engine version.",
            "example": "5.7",
            "title": "Version",
            "type": "string"
           }
          },
          "required": [
           "engine",
           "id",
           "version"
          ],
          "title": "Datastore",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "title": "Datastores Response",
       "type": "object"
      },
      "version": "1.10.1"
     }
    ],
    "description": "Datastores available for database instances.",
    "isInternal": false,
    "name": "datastores",
    "version": "1.10.1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a flavor detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "flavor_id": {
         "description": "Flavor Unique Id.",
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        }
       },
       "required": [
        "flavor_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "family_description": {
         "description": "Flavor Family Description.",
         "example": "Basic",
         "type": "string"
        },
        "family_slug": {
         "description": "Flavor Family SLUG.",
         "example": "bs1",
         "type": "string"
        },
        "id": {
         "description": "Flavor unique identifier.",
         "format": "uuid",
         "type": "string"
        },
        "label": {
         "description": "Flavor label.",
         "example": "cloud-dbaas-bs1.small",
         "type": "string"
        },
        "name": {
         "description": "Flavor name.",
         "example": "i0-c1-r4-d10",
         "type": "string"
        },
        "ram": {
         "description": "RAM Amount.",
         "example": "4 GB",
         "type": "string"
        },
        "size": {
         "description": "Flavor Size Description.",
         "example": "Small",
         "type": "string"
        },
        "sku_replica": {
         "description": "SKU Database Instance Replica.",
         "example": "BRNE10610101sm",
         "type": "string"
        },
        "sku_source": {
         "description": "SKU Database Instance Source.",
         "example": "BRNE10600101sm",
         "type": "string"
        },
        "vcpu": {
         "description": "Number of vCPUs.",
         "example": "1",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name",
        "label",
        "vcpu",
        "ram",
        "family_description",
        "family_slug",
        "size",
        "sku_source",
        "sku_replica"
       ],
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of available flavors. A flavor is a hardware template that defines the size of RAM and vCPU.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "limit": {
         "default": 10,
         "description": "limit",
         "maximum": 25,
         "minimum": 1,
         "type": "integer"
        },
        "offset": {
         "default": 0,
         "description": "offset",
         "minimum": 0,
         "type": "integer"
        },
        "status": {
         "default": "ACTIVE",
         "description": "An enumeration.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "title": "Flavor Status",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "results": {
         "items": {
          "properties": {
           "family_description": {
            "description": "Flavor Family Description.",
            "example": "Basic",
            "type": "string"
           },
           "family_slug": {
            "description": "Flavor Family SLUG.",
            "example": "bs1",
            "type": "string"
           },
           "id": {
            "description": "Flavor unique identifier.",
            "format": "uuid",
            "type": "string"
           },
           "label": {
            "description": "Flavor label.",
            "example": "cloud-dbaas-bs1.small",
            "type": "string"
           },
           "name": {
            "description": "Flavor name.",
            "example": "i0-c1-r4-d10",
            "type": "string"
           },
           "ram": {
            "description": "RAM Amount.",
            "example": "4 GB",
            "type": "string"
           },
           "size": {
            "description": "Flavor Size Description.",
            "example": "Small",
            "type": "string"
           },
           "sku_replica": {
            "description": "SKU Database Instance Replica.",
            "example": "BRNE10610101sm",
            "type": "string"
           },
           "sku_source": {
            "description": "SKU Database Instance Source.",
            "example": "BRNE10600101sm",
            "type": "string"
           },
           "vcpu": {
            "description": "Number of vCPUs.",
            "example": "1",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "label",
           "vcpu",
           "ram",
           "family_description",
           "family_slug",
           "size",
           "sku_source",
           "sku_replica"
          ],
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "title": "Flavors Response",
       "type": "object"
      },
      "version": "1.10.1"
     }
    ],
    "description": "Flavors available for database instances.",
    "isInternal": false,
    "name": "flavors",
    "version": "1.10.1"
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Creates a new backup asynchronously.",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "instance_id": {
           "description": "Value referring to instance Id.",
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          },
          "mode": {
           "description": "An enumeration.",
           "enum": [
            "FULL"
           ],
           "title": "Backup Mode Request",
           "type": "string"
          }
         },
         "required": [
          "instance_id",
          "mode"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "id": {
           "format": "uuid",
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "Backup Response",
         "type": "object"
        },
        "version": "1.10.1"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Deletes a database backup.",
        "isInternal": false,
        "name": "delete",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "backup_id": {
           "description": "Value referring to backup Id.",
           "format": "uuid",
           "title": "Backup Id",
           "type": "string"
          },
          "instance_id": {
           "description": "Value referring to instance Id.",
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          }
         },
         "required": [
          "backup_id",
          "instance_id"
         ],
         "type": "object"
        },
        "result": {
         "nullable": true,
         "type": "null"
        },
        "version": "1.10.1"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Get a backup detail.",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "backup_id": {
           "description": "Value referring to backup Id.",
           "format": "uuid",
           "title": "Backup Id",
           "type": "string"
          },
          "instance_id": {
           "description": "Value referring to instance Id.",
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          }
         },
         "required": [
          "backup_id",
          "instance_id"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "created_at": {
           "format": "date-time",
           "title": "Created At",
           "type": "string"
          },
          "db_size": {
           "description": "Database size in kilobytes (1024 kilobytes = 1 megabyte).",
           "exclusiveMinimum": true,
           "minimum": 0,
           "title": "Database Size",
           "type": "integer"
          },
          "finished_at": {
           "format": "date-time",
           "title": "Finished At",
           "type": "string"
          },
          "id": {
           "format": "uuid",
           "title": "Id",
           "type": "string"
          },
          "instance_id": {
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          },
          "location": {
           "title": "Location",
           "type": "string"
          },
          "mode": {
           "description": "An enumeration.",
           "enum": [
            "FULL",
            "INCREMENTAL"
           ],
           "title": "Backup Mode",
           "type": "string"
          },
          "name": {
           "title": "Name",
           "type": "string"
          },
          "size": {
           "description": "Backup file size in kilobytes (1024 kilobytes = 1 megabyte).",
           "exclusiveMinimum": true,
           "minimum": 0,
           "title": "Size",
           "type": "integer"
          },
          "started_at": {
           "format": "date-time",
           "title": "Started At",
           "type": "string"
          },
          "status": {
           "description": "An enumeration.",
           "enum": [
            "PENDING",
            "CREATING",
            "CREATED",
            "ERROR",
            "DELETING",
            "DELETED"
           ],
           "title": "Backup Status",
           "type": "string"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "ON_DEMAND",
            "AUTOMATED"
           ],
           "title": "Backup Type",
           "type": "string"
          },
          "updated_at": {
           "format": "date-time",
           "title": "Updated At",
           "type": "string"
          }
         },
         "required": [
          "id",
          "instance_id",
          "type",
          "status",
          "mode",
          "created_at"
         ],
         "title": "Backup Detail Response",
         "type": "object"
        },
        "version": "1.10.1"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "List all backups.",
        "isInternal": false,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "instance_id": {
           "description": "Value referring to instance Id.",
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          },
          "limit": {
           "default": 10,
           "description": "limit",
           "maximum": 25,
           "minimum": 1,
           "type": "integer"
          },
          "mode": {
           "description": "Value referring to backup mode.",
           "enum": [
            "FULL",
            "INCREMENTAL"
           ],
           "title": "Backup Mode",
           "type": "string"
          },
          "offset": {
           "default": 0,
           "description": "offset",
           "minimum": 0,
           "type": "integer"
          },
          "status": {
           "description": "Value referring to backup status.",
           "enum": [
            "PENDING",
            "CREATING",
            "CREATED",
            "ERROR",
            "DELETING",
            "DELETED"
           ],
           "title": "Backup Status",
           "type": "string"
          },
          "type": {
           "description": "Value referring to backup type.",
           "enum": [
            "ON_DEMAND",
            "AUTOMATED"
           ],
           "title": "Backup Type",
           "type": "string"
          }
         },
         "required": [
          "instance_id"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "results": {
           "items": {
            "properties": {
             "created_at": {
              "format": "date-time",
              "title": "Created At",
              "type": "string"
             },
             "db_size": {
              "description": "Database size in kilobytes (1024 kilobytes = 1 megabyte).",
              "exclusiveMinimum": true,
              "minimum": 0,
              "title": "Database Size",
              "type": "integer"
             },
             "finished_at": {
              "format": "date-time",
              "title": "Finished At",
              "type": "string"
             },
             "id": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
             },
             "instance_id": {
              "format": "uuid",
              "title": "Instance Id",
              "type": "string"
             },
             "location": {
              "title": "Location",
              "type": "string"
             },
             "mode": {
              "description": "An enumeration.",
              "enum": [
               "FULL",
               "INCREMENTAL"
              ],
              "title": "Backup Mode",
              "type": "string"
             },
             "name": {
              "title": "Name",
              "type": "string"
             },
             "size": {
              "description": "Backup file size in kilobytes (1024 kilobytes = 1 megabyte).",
              "exclusiveMinimum": true,
              "minimum": 0,
              "title": "Size",
              "type": "integer"
             },
             "started_at": {
              "format": "date-time",
              "title": "Started At",
              "type": "string"
             },
             "status": {
              "description": "An enumeration.",
              "enum": [
               "PENDING",
               "CREATING",
               "CREATED",
               "ERROR",
               "DELETING",
               "DELETED"
              ],
              "title": "Backup Status",
              "type": "string"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "ON_DEMAND",
               "AUTOMATED"
              ],
              "title": "Backup Type",
              "type": "string"
             },
             "updated_at": {
              "format": "date-time",
              "title": "Updated At",
              "type": "string"
             }
            },
            "required": [
             "id",
             "instance_id",
             "type",
             "status",
             "mode",
             "created_at"
            ],
            "title": "Backup Detail Response",
            "type": "object"
           },
           "title": "Results",
           "type": "array"
          }
         },
         "required": [
          "results"
         ],
         "title": "Backups Response",
         "type": "object"
        },
        "version": "1.10.1"
       }
      ],
      "description": "Database instances management. | backups",
      "isInternal": false,
      "name": "backups",
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Creates a new database instance asynchronously for a tenant.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_retention_days": {
         "default": 30,
         "description": "The number of days that a particular backup is kept until its deletion.",
         "example": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "01:00:00",
         "description": "Start time which is allowed to start the automated backup process.",
         "example": "03:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "datastore_id": {
         "example": "063f3994-b6c2-4c37-96c9-bab8d82d36f7",
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "flavor_id": {
         "example": "8bbe8e01-40c8-4d2b-80e8-189debc44b1c",
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "name": {
         "example": "dbaas-name",
         "maxLength": 255,
         "title": "Name",
         "type": "string"
        },
        "password": {
         "example": "dbaas-password",
         "maxLength": 50,
         "title": "Password",
         "type": "string"
        },
        "user": {
         "example": "dbaas-user",
         "maxLength": 25,
         "title": "User",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "default": "CLOUD_NVME",
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD"
           ],
           "example": "CLOUD_NVME",
           "type": "string"
          }
         },
         "required": [
          "size"
         ],
         "title": "Instance Volume Request",
         "type": "object"
        }
       },
       "required": [
        "datastore_id",
        "flavor_id",
        "name",
        "password",
        "user",
        "volume"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "Instance Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a database instance.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "instance_id": {
         "description": "Database Instance Unique Id.",
         "format": "uuid",
         "title": "Database Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a database instance detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "description": "Instance extra attributes or relations to show with the main query. When available, more than one value can be informed using commas. e.g: `_expand=value1,value2`",
         "enum": [
          "replicas"
         ],
         "type": "string"
        },
        "instance_id": {
         "description": "Database Instance Unique Id.",
         "format": "uuid",
         "title": "Database Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "Determine if the IP can be accessed from the internet.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "Access",
            "type": "string"
           },
           "address": {
            "example": "172.53.10.82",
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "Type",
            "type": "string"
           }
          },
          "required": [
           "access",
           "type",
           "address"
          ],
          "type": "object"
         },
         "readOnly": true,
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "default": 30,
         "description": "The number of days that a particular backup is kept until its deletion.",
         "example": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "04:00:00",
         "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
         "example": "02:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Creation date",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "description": "Flavor unique identifier. Instance size.",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Database instance unique identifier.",
         "format": "uuid",
         "readOnly": true,
         "title": "Id",
         "type": "string"
        },
        "name": {
         "description": "Database instance unique name.",
         "example": "mydbinstance",
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "password": {
         "description": "Database Password.",
         "example": "cGFzc3dk",
         "format": "password",
         "maxLength": 50,
         "type": "string",
         "writeOnly": true
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "example": "PRIVATE",
               "title": "Address Access",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "example": "IPv4",
               "title": "Address Type",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "Replica Address Response",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "description": "Datastore unique identifier. Engine and version of datastore.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup finish date",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup start date",
            "type": "string"
           },
           "status": {
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING"
            ],
            "example": "ACTIVE",
            "readOnly": true,
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "description": "The size of the volume (in GiB).",
              "example": 30,
              "maximum": 50000,
              "minimum": 10,
              "type": "number"
             },
             "type": {
              "description": "The type of the volume.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "type": "object"
           }
          },
          "required": [
           "addresses",
           "created_at",
           "datastore_id",
           "flavor_id",
           "volume",
           "id",
           "name",
           "source_id",
           "status"
          ],
          "title": "Replica Detail Response",
          "type": "object"
         },
         "readOnly": true,
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Last updated date",
         "type": "string"
        },
        "user": {
         "description": "Database User.",
         "example": "myuser",
         "maxLength": 25,
         "type": "string",
         "writeOnly": true
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "created_at",
        "backup_start_at",
        "backup_retention_days"
       ],
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of database instances for a tenant.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "description": "Instance extra attributes or relations to show with the main query. When available, more than one value can be informed using commas. e.g: `_expand=value1,value2`",
         "enum": [
          "replicas"
         ],
         "type": "string"
        },
        "limit": {
         "default": 10,
         "description": "limit",
         "maximum": 25,
         "minimum": 1,
         "type": "integer"
        },
        "offset": {
         "default": 0,
         "description": "offset",
         "minimum": 0,
         "type": "integer"
        },
        "status": {
         "description": "Value referring to instace status.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "results": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "Determine if the IP can be accessed from the internet.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "Access",
               "type": "string"
              },
              "address": {
               "example": "172.53.10.82",
               "title": "Address",
               "type": "string"
              },
              "type": {
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "Type",
               "type": "string"
              }
             },
             "required": [
              "access",
              "type",
              "address"
             ],
             "type": "object"
            },
            "readOnly": true,
            "title": "Addresses",
            "type": "array"
           },
           "backup_retention_days": {
            "default": 30,
            "description": "The number of days that a particular backup is kept until its deletion.",
            "example": 7,
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Backup Retention Days",
            "type": "integer"
           },
           "backup_start_at": {
            "default": "04:00:00",
            "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
            "example": "02:00:00",
            "format": "time",
            "title": "Backup Start At",
            "type": "string"
           },
           "created_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Creation date",
            "type": "string"
           },
           "datastore_id": {
            "description": "Datastore unique identifier. Engine and version of datastore.",
            "format": "uuid",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup finish date",
            "type": "string"
           },
           "flavor_id": {
            "description": "Flavor unique identifier. Instance size.",
            "format": "uuid",
            "type": "string"
           },
           "id": {
            "description": "Database instance unique identifier.",
            "format": "uuid",
            "readOnly": true,
            "title": "Id",
            "type": "string"
           },
           "name": {
            "description": "Database instance unique name.",
            "example": "mydbinstance",
            "maxLength": 100,
            "title": "Name",
            "type": "string"
           },
           "password": {
            "description": "Database Password.",
            "example": "cGFzc3dk",
            "format": "password",
            "maxLength": 50,
            "type": "string",
            "writeOnly": true
           },
           "replicas": {
            "items": {
             "properties": {
              "addresses": {
               "items": {
                "properties": {
                 "access": {
                  "enum": [
                   "PRIVATE",
                   "PUBLIC"
                  ],
                  "example": "PRIVATE",
                  "title": "Address Access",
                  "type": "string"
                 },
                 "address": {
                  "title": "Address",
                  "type": "string"
                 },
                 "type": {
                  "enum": [
                   "IPv4",
                   "IPv6"
                  ],
                  "example": "IPv4",
                  "title": "Address Type",
                  "type": "string"
                 }
                },
                "required": [
                 "access"
                ],
                "title": "Replica Address Response",
                "type": "object"
               },
               "title": "Addresses",
               "type": "array"
              },
              "created_at": {
               "format": "date-time",
               "title": "Created At",
               "type": "string"
              },
              "datastore_id": {
               "description": "Datastore unique identifier. Engine and version of datastore.",
               "format": "uuid",
               "readOnly": true,
               "type": "string"
              },
              "finished_at": {
               "format": "date-time",
               "readOnly": true,
               "title": "Initial setup finish date",
               "type": "string"
              },
              "flavor_id": {
               "format": "uuid",
               "title": "Flavor Id",
               "type": "string"
              },
              "id": {
               "format": "uuid",
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "source_id": {
               "format": "uuid",
               "title": "Source Id",
               "type": "string"
              },
              "started_at": {
               "format": "date-time",
               "readOnly": true,
               "title": "Initial setup start date",
               "type": "string"
              },
              "status": {
               "enum": [
                "CREATING",
                "ERROR",
                "STOPPED",
                "REBOOT",
                "PENDING",
                "RESIZING",
                "DELETED",
                "ACTIVE",
                "STARTING",
                "STOPPING",
                "BACKING_UP",
                "DELETING",
                "RESTORING",
                "ERROR_DELETING"
               ],
               "example": "ACTIVE",
               "readOnly": true,
               "type": "string"
              },
              "updated_at": {
               "format": "date-time",
               "title": "Updated At",
               "type": "string"
              },
              "volume": {
               "properties": {
                "size": {
                 "description": "The size of the volume (in GiB).",
                 "example": 30,
                 "maximum": 50000,
                 "minimum": 10,
                 "type": "number"
                },
                "type": {
                 "description": "The type of the volume.",
                 "enum": [
                  "CLOUD_NVME",
                  "CLOUD_HDD",
                  "CLOUD_NVME_15K"
                 ],
                 "type": "string"
                }
               },
               "required": [
                "size",
                "type"
               ],
               "type": "object"
              }
             },
             "required": [
              "addresses",
              "created_at",
              "datastore_id",
              "flavor_id",
              "volume",
              "id",
              "name",
              "source_id",
              "status"
             ],
             "title": "Replica Detail Response",
             "type": "object"
            },
            "readOnly": true,
            "title": "Replicas",
            "type": "array"
           },
           "started_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup start date",
            "type": "string"
           },
           "status": {
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING"
            ],
            "example": "ACTIVE",
            "readOnly": true,
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Last updated date",
            "type": "string"
           },
           "user": {
            "description": "Database User.",
            "example": "myuser",
            "maxLength": 25,
            "type": "string",
            "writeOnly": true
           },
           "volume": {
            "properties": {
             "size": {
              "description": "The size of the volume (in GiB).",
              "example": 30,
              "maximum": 50000,
              "minimum": 10,
              "type": "number"
             },
             "type": {
              "description": "The type of the volume.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "type": "object"
           }
          },
          "required": [
           "id",
           "name",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "created_at",
           "backup_start_at",
           "backup_retention_days"
          ],
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "title": "Instances Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Resizes a database instance.",
      "isInternal": false,
      "name": "resize",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "instance_id": {
         "description": "Database Instance Unique Id.",
         "format": "uuid",
         "title": "Database Instance Id",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          }
         },
         "required": [
          "size"
         ],
         "title": "Instance Volume Request",
         "type": "object"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "Determine if the IP can be accessed from the internet.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "Access",
            "type": "string"
           },
           "address": {
            "example": "172.53.10.82",
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "Type",
            "type": "string"
           }
          },
          "required": [
           "access",
           "type",
           "address"
          ],
          "type": "object"
         },
         "readOnly": true,
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "default": 30,
         "description": "The number of days that a particular backup is kept until its deletion.",
         "example": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "04:00:00",
         "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
         "example": "02:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Creation date",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "description": "Flavor unique identifier. Instance size.",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Database instance unique identifier.",
         "format": "uuid",
         "readOnly": true,
         "title": "Id",
         "type": "string"
        },
        "name": {
         "description": "Database instance unique name.",
         "example": "mydbinstance",
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "password": {
         "description": "Database Password.",
         "example": "cGFzc3dk",
         "format": "password",
         "maxLength": 50,
         "type": "string",
         "writeOnly": true
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "example": "PRIVATE",
               "title": "Address Access",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "example": "IPv4",
               "title": "Address Type",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "Replica Address Response",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "description": "Datastore unique identifier. Engine and version of datastore.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup finish date",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup start date",
            "type": "string"
           },
           "status": {
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING"
            ],
            "example": "ACTIVE",
            "readOnly": true,
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "description": "The size of the volume (in GiB).",
              "example": 30,
              "maximum": 50000,
              "minimum": 10,
              "type": "number"
             },
             "type": {
              "description": "The type of the volume.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "type": "object"
           }
          },
          "required": [
           "addresses",
           "created_at",
           "datastore_id",
           "flavor_id",
           "volume",
           "id",
           "name",
           "source_id",
           "status"
          ],
          "title": "Replica Detail Response",
          "type": "object"
         },
         "readOnly": true,
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Last updated date",
         "type": "string"
        },
        "user": {
         "description": "Database User.",
         "example": "myuser",
         "maxLength": 25,
         "type": "string",
         "writeOnly": true
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "created_at",
        "backup_start_at",
        "backup_retention_days"
       ],
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Restores a backup for an instance asynchronously.",
      "isInternal": false,
      "name": "restores",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_id": {
         "format": "uuid",
         "title": "Backup Id",
         "type": "string"
        },
        "instance_id": {
         "description": "Value referring to instance Id.",
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        }
       },
       "required": [
        "backup_id",
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "Restore Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Starts a database instance.",
      "isInternal": false,
      "name": "start",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "instance_id": {
         "description": "Database Instance Unique Id.",
         "format": "uuid",
         "title": "Database Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "Determine if the IP can be accessed from the internet.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "Access",
            "type": "string"
           },
           "address": {
            "example": "172.53.10.82",
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "Type",
            "type": "string"
           }
          },
          "required": [
           "access",
           "type",
           "address"
          ],
          "type": "object"
         },
         "readOnly": true,
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "default": 30,
         "description": "The number of days that a particular backup is kept until its deletion.",
         "example": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "04:00:00",
         "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
         "example": "02:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Creation date",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "description": "Flavor unique identifier. Instance size.",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Database instance unique identifier.",
         "format": "uuid",
         "readOnly": true,
         "title": "Id",
         "type": "string"
        },
        "name": {
         "description": "Database instance unique name.",
         "example": "mydbinstance",
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "password": {
         "description": "Database Password.",
         "example": "cGFzc3dk",
         "format": "password",
         "maxLength": 50,
         "type": "string",
         "writeOnly": true
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "example": "PRIVATE",
               "title": "Address Access",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "example": "IPv4",
               "title": "Address Type",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "Replica Address Response",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "description": "Datastore unique identifier. Engine and version of datastore.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup finish date",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup start date",
            "type": "string"
           },
           "status": {
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING"
            ],
            "example": "ACTIVE",
            "readOnly": true,
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "description": "The size of the volume (in GiB).",
              "example": 30,
              "maximum": 50000,
              "minimum": 10,
              "type": "number"
             },
             "type": {
              "description": "The type of the volume.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "type": "object"
           }
          },
          "required": [
           "addresses",
           "created_at",
           "datastore_id",
           "flavor_id",
           "volume",
           "id",
           "name",
           "source_id",
           "status"
          ],
          "title": "Replica Detail Response",
          "type": "object"
         },
         "readOnly": true,
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Last updated date",
         "type": "string"
        },
        "user": {
         "description": "Database User.",
         "example": "myuser",
         "maxLength": 25,
         "type": "string",
         "writeOnly": true
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "created_at",
        "backup_start_at",
        "backup_retention_days"
       ],
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Stops a database instance.",
      "isInternal": false,
      "name": "stop",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "instance_id": {
         "description": "Database Instance Unique Id.",
         "format": "uuid",
         "title": "Database Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "Determine if the IP can be accessed from the internet.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "Access",
            "type": "string"
           },
           "address": {
            "example": "172.53.10.82",
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "Type",
            "type": "string"
           }
          },
          "required": [
           "access",
           "type",
           "address"
          ],
          "type": "object"
         },
         "readOnly": true,
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "default": 30,
         "description": "The number of days that a particular backup is kept until its deletion.",
         "example": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "04:00:00",
         "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
         "example": "02:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Creation date",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "description": "Flavor unique identifier. Instance size.",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Database instance unique identifier.",
         "format": "uuid",
         "readOnly": true,
         "title": "Id",
         "type": "string"
        },
        "name": {
         "description": "Database instance unique name.",
         "example": "mydbinstance",
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "password": {
         "description": "Database Password.",
         "example": "cGFzc3dk",
         "format": "password",
         "maxLength": 50,
         "type": "string",
         "writeOnly": true
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "example": "PRIVATE",
               "title": "Address Access",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "example": "IPv4",
               "title": "Address Type",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "Replica Address Response",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "description": "Datastore unique identifier. Engine and version of datastore.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup finish date",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup start date",
            "type": "string"
           },
           "status": {
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING"
            ],
            "example": "ACTIVE",
            "readOnly": true,
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "description": "The size of the volume (in GiB).",
              "example": 30,
              "maximum": 50000,
              "minimum": 10,
              "type": "number"
             },
             "type": {
              "description": "The type of the volume.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "type": "object"
           }
          },
          "required": [
           "addresses",
           "created_at",
           "datastore_id",
           "flavor_id",
           "volume",
           "id",
           "name",
           "source_id",
           "status"
          ],
          "title": "Replica Detail Response",
          "type": "object"
         },
         "readOnly": true,
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Last updated date",
         "type": "string"
        },
        "user": {
         "description": "Database User.",
         "example": "myuser",
         "maxLength": 25,
         "type": "string",
         "writeOnly": true
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "created_at",
        "backup_start_at",
        "backup_retention_days"
       ],
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Updates a database instance.",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_retention_days": {
         "default": 30,
         "description": "The number of days that a particular backup is kept until its deletion.",
         "example": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "01:00:00",
         "description": "Start time which is allowed to start the automated backup process.",
         "example": "03:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "instance_id": {
         "description": "Database Instance Unique Id.",
         "format": "uuid",
         "title": "Database Instance Id",
         "type": "string"
        },
        "status": {
         "enum": [
          "ACTIVE",
          "STOPPED"
         ],
         "example": "ACTIVE",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "Determine if the IP can be accessed from the internet.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "Access",
            "type": "string"
           },
           "address": {
            "example": "172.53.10.82",
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "Type",
            "type": "string"
           }
          },
          "required": [
           "access",
           "type",
           "address"
          ],
          "type": "object"
         },
         "readOnly": true,
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "default": 30,
         "description": "The number of days that a particular backup is kept until its deletion.",
         "example": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "04:00:00",
         "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
         "example": "02:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Creation date",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "description": "Flavor unique identifier. Instance size.",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Database instance unique identifier.",
         "format": "uuid",
         "readOnly": true,
         "title": "Id",
         "type": "string"
        },
        "name": {
         "description": "Database instance unique name.",
         "example": "mydbinstance",
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "password": {
         "description": "Database Password.",
         "example": "cGFzc3dk",
         "format": "password",
         "maxLength": 50,
         "type": "string",
         "writeOnly": true
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "example": "PRIVATE",
               "title": "Address Access",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "example": "IPv4",
               "title": "Address Type",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "Replica Address Response",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "description": "Datastore unique identifier. Engine and version of datastore.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup finish date",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup start date",
            "type": "string"
           },
           "status": {
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING"
            ],
            "example": "ACTIVE",
            "readOnly": true,
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "description": "The size of the volume (in GiB).",
              "example": 30,
              "maximum": 50000,
              "minimum": 10,
              "type": "number"
             },
             "type": {
              "description": "The type of the volume.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "type": "object"
           }
          },
          "required": [
           "addresses",
           "created_at",
           "datastore_id",
           "flavor_id",
           "volume",
           "id",
           "name",
           "source_id",
           "status"
          ],
          "title": "Replica Detail Response",
          "type": "object"
         },
         "readOnly": true,
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Last updated date",
         "type": "string"
        },
        "user": {
         "description": "Database User.",
         "example": "myuser",
         "maxLength": 25,
         "type": "string",
         "writeOnly": true
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "created_at",
        "backup_start_at",
        "backup_retention_days"
       ],
       "type": "object"
      },
      "version": "1.10.1"
     }
    ],
    "description": "Database instances management.",
    "isInternal": false,
    "name": "instances",
    "version": "1.10.1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Creates a new replica for an instance asynchronously.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        }
       },
       "required": [
        "name",
        "source_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "Replica Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a replica instance.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "replica_id": {
         "description": "Database Replica Unique Id",
         "format": "uuid",
         "title": "Database Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get an instance replica detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "replica_id": {
         "description": "Value referring to replica Id.",
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "example": "PRIVATE",
            "title": "Address Access",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "example": "IPv4",
            "title": "Address Type",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "Replica Address Response",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "readOnly": true,
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "addresses",
        "created_at",
        "datastore_id",
        "flavor_id",
        "volume",
        "id",
        "name",
        "source_id",
        "status"
       ],
       "title": "Replica Detail Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List all replicas for a given instance.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "limit": {
         "default": 10,
         "description": "limit",
         "maximum": 25,
         "minimum": 1,
         "type": "integer"
        },
        "offset": {
         "default": 0,
         "description": "offset",
         "minimum": 0,
         "type": "integer"
        },
        "source_id": {
         "description": "Value referring to source Id.",
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "results": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "example": "PRIVATE",
               "title": "Address Access",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "example": "IPv4",
               "title": "Address Type",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "Replica Address Response",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "description": "Datastore unique identifier. Engine and version of datastore.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup finish date",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "Initial setup start date",
            "type": "string"
           },
           "status": {
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING"
            ],
            "example": "ACTIVE",
            "readOnly": true,
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "description": "The size of the volume (in GiB).",
              "example": 30,
              "maximum": 50000,
              "minimum": 10,
              "type": "number"
             },
             "type": {
              "description": "The type of the volume.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "type": "object"
           }
          },
          "required": [
           "addresses",
           "created_at",
           "datastore_id",
           "flavor_id",
           "volume",
           "id",
           "name",
           "source_id",
           "status"
          ],
          "title": "Replica Detail Response",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "title": "Replicas Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Resize an instance replica.",
      "isInternal": false,
      "name": "resize",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "replica_id": {
         "description": "Value referring to replica Id.",
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "flavor_id",
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "example": "PRIVATE",
            "title": "Address Access",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "example": "IPv4",
            "title": "Address Type",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "Replica Address Response",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "readOnly": true,
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "addresses",
        "created_at",
        "datastore_id",
        "flavor_id",
        "volume",
        "id",
        "name",
        "source_id",
        "status"
       ],
       "title": "Replica Detail Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Start an instance replica.",
      "isInternal": false,
      "name": "start",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "replica_id": {
         "description": "Value referring to replica Id.",
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "example": "PRIVATE",
            "title": "Address Access",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "example": "IPv4",
            "title": "Address Type",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "Replica Address Response",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "readOnly": true,
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "addresses",
        "created_at",
        "datastore_id",
        "flavor_id",
        "volume",
        "id",
        "name",
        "source_id",
        "status"
       ],
       "title": "Replica Detail Response",
       "type": "object"
      },
      "version": "1.10.1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Stop an instance replica.",
      "isInternal": false,
      "name": "stop",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "replica_id": {
         "description": "Value referring to replica Id.",
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "example": "PRIVATE",
            "title": "Address Access",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "example": "IPv4",
            "title": "Address Type",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "Replica Address Response",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "description": "Datastore unique identifier. Engine and version of datastore.",
         "format": "uuid",
         "readOnly": true,
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup finish date",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "readOnly": true,
         "title": "Initial setup start date",
         "type": "string"
        },
        "status": {
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING"
         ],
         "example": "ACTIVE",
         "readOnly": true,
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "description": "The size of the volume (in GiB).",
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "type": "number"
          },
          "type": {
           "description": "The type of the volume.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "type": "object"
        }
       },
       "required": [
        "addresses",
        "created_at",
        "datastore_id",
        "flavor_id",
        "volume",
        "id",
        "name",
        "source_id",
        "status"
       ],
       "title": "Replica Detail Response",
       "type": "object"
      },
      "version": "1.10.1"
     }
    ],
    "description": "Database replicas management.",
    "isInternal": false,
    "name": "replicas",
    "version": "1.10.1"
   }
  ],
  "description": "DBaaS API Product.",
  "isInternal": false,
  "name": "dbaas",
  "version": "1.10.1"
 },
 {
  "children": [
   {
    "configs": {
     "properties": {
      "env": {
       "default": "prod",
       "description": "Environment to use",
       "enum": [
        "prod",
        "pre-prod"
       ],
       "type": "string"
      },
      "region": {
       "default": "br-ne-1",
       "description": "Region to reach the service",
       "enum": [
        "br-ne-1",
        "br-se-1"
       ],
       "type": "string"
      },
      "serverUrl": {
       "description": "Manually specify the server to use",
       "format": "uri",
       "type": "string"
      }
     },
     "type": "object"
    },
    "description": "Execute generic http request",
    "isInternal": false,
    "name": "do",
    "parameters": {
     "properties": {
      "body": {
       "type": "string"
      },
      "headers": {
       "additionalProperties": true,
       "type": "object"
      },
      "method": {
       "enum": [
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "OPTIONS",
        "HEAD",
        "PATCH",
        "TRACE"
       ],
       "type": "string"
      },
      "security": {
       "items": {
        "additionalProperties": true,
        "type": "object"
       },
       "type": "array"
      },
      "url": {
       "description": "Golang template with the URL",
       "type": "string"
      }
     },
     "required": [
      "url",
      "method"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "body": {
       "type": "string"
      },
      "code": {
       "type": "integer"
      },
      "headers": {
       "additionalProperties": true,
       "type": "object"
      },
      "status": {
       "type": "string"
      }
     },
     "required": [
      "code",
      "status",
      "headers"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP DELETE",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP GET",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP HEAD",
      "isInternal": false,
      "name": "head",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP OPTIONS",
      "isInternal": false,
      "name": "options",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP PATCH",
      "isInternal": false,
      "name": "patch",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP POST",
      "isInternal": false,
      "name": "post",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP PUT",
      "isInternal": false,
      "name": "put",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP TRACE",
      "isInternal": false,
      "name": "trace",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "JSON HTTP access",
    "isInternal": false,
    "name": "json",
    "version": ""
   }
  ],
  "description": "HTTP access",
  "isInternal": true,
  "name": "http",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Criação de um cluster kubernetes",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "default": "",
         "description": "Descrição do cluster",
         "example": "Esse é um cluster de exemplo",
         "type": "string"
        },
        "enabled_bastion": {
         "default": false,
         "description": "Habilita bastion host",
         "example": false,
         "type": "boolean"
        },
        "enabled_server_group": {
         "default": true,
         "description": "Habilita o uso de server group, com política de anti-affinity, na criação do cluster e dos node pools",
         "example": false,
         "type": "boolean"
        },
        "name": {
         "description": "Nome do cluster kubernetes. O nome destina-se principalmente à idempotência, e deve ser exclusivo em um namespace. 0 nome não pode ser alterado.\nO nome deve seguir as seguintes regras:\n  - deve conter no máximo 63 caracteres\n  - deve conter apenas caracteres alfanuméricos minúsculos ou '-'\n  - deve começar com um caractere alfabético\n  - deve terminar com um caractere alfanumérico\n",
         "example": "cluster-exemplo",
         "type": "string"
        },
        "node_pools": {
         "description": "Conjunto de nodes em um cluster kubernetes",
         "items": {
          "description": "Objeto da requisição da request do nodepool",
          "properties": {
           "auto_scale": {
            "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
            "properties": {
             "max_replicas": {
              "default": 1,
              "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
              "example": 5,
              "minimum": 1,
              "type": "integer"
             },
             "min_replicas": {
              "default": 1,
              "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
              "example": 2,
              "minimum": 1,
              "type": "integer"
             }
            },
            "required": [
             "min_replicas",
             "max_replicas"
            ],
            "type": "object"
           },
           "flavor": {
            "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes\n<table>\n  <tr>\n    <td>Flavor</td>\n    <td>vCPUs</td>\n    <td>RAM(Gb)</td>\n    <td>Root Disk(GB)</td>\n  </tr>\n  <tr>\n    <td>cloud-k8s.gp1.small</td>\n    <td>2</td>\n    <td>4</td>\n    <td>20</td>\n  </tr>\n  <tr>\n    <td>cloud-k8s.gp1.large</td>\n    <td>8</td>\n    <td>16</td>\n    <td>100</td>\n  </tr>\n</table>\n",
            "enum": [
             "cloud-k8s.gp1.small",
             "cloud-k8s.gp1.large"
            ],
            "example": "cloud-k8s.gp1.small",
            "type": "string"
           },
           "name": {
            "description": "Nome do node pool. O nome destina-se principalmente à idempotência, e deve ser exclusivo em um namespace. 0 nome não pode ser alterado.\nO nome deve seguir as seguintes regras:\n  - deve conter no máximo 63 caracteres\n  - deve conter apenas caracteres alfanuméricos minúsculos ou '-'\n  - deve começar com um caractere alfabético\n  - deve terminar com um caractere alfanumérico\n",
            "example": "nodepool-exemplo",
            "type": "string"
           },
           "replicas": {
            "default": 1,
            "description": "Número de réplicas dos nós do nodepool",
            "example": 3,
            "type": "integer"
           },
           "tags": {
            "description": "Lista de tags aplicadas ao nodepool",
            "items": {
             "description": "Items da lista de tags aplicadas ao nodepool",
             "example": "tag-value1",
             "type": "string"
            },
            "type": "array"
           },
           "taints": {
            "description": "Propriedade de associação de um conjunto se nós",
            "items": {
             "properties": {
              "effect": {
               "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "A chave taint a ser aplicada ao node",
               "example": "exemplo-key",
               "type": "string"
              },
              "value": {
               "description": "O valor correspondente a chave taint.",
               "example": "valor1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           }
          },
          "required": [
           "name",
           "flavor",
           "replicas"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "version": {
         "default": "v1.28.5",
         "description": "Versão do kubernetes nativa do cluster",
         "enum": [
          "v1.26.12",
          "v1.28.5"
         ],
         "example": "v1.28.5",
         "type": "string"
        }
       },
       "required": [
        "enabled_bastion",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response do cluster",
       "properties": {
        "id": {
         "description": "Identificador no padrão uuid para identificar o cluster kubernetes",
         "example": "10113826-624a-4801-900f-6a5742433411",
         "format": "uuid",
         "type": "string"
        },
        "name": {
         "description": "Nome do cluster kubernetes",
         "example": "cluster-exemplo",
         "type": "string"
        },
        "status": {
         "description": "Detalhes a respeito do status do cluster ou node",
         "properties": {
          "message": {
           "description": "Mensagem detalhada sobre o status do cluster ou node",
           "example": "Ready",
           "type": "string"
          },
          "state": {
           "description": "Estado atual do cluster ou node.\n<table>\n  <tr>\n    <td>Cluster</td>\n    <td>Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed</td>\n  </tr>\n  <tr>\n    <td>Node</td>\n    <td>Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown</td>\n  </tr>\n</table>\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "message"
         ],
         "type": "object"
        }
       },
       "required": [
        "name",
        "id",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deleta um cluster",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista as informações de um cluster",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response do cluster por id",
       "properties": {
        "addons": {
         "description": "Objeto dos complementos que estendem a funcionalidade do cluster kubernetes",
         "properties": {
          "loadbalance": {
           "description": "Flag correspondente se o serviço de load balancer está habilitado/desabilitado no cluster",
           "type": "string"
          },
          "secrets": {
           "description": "Secret nativa do kubernetes a ser incluída ao cluster durante o provisionamento",
           "type": "string"
          },
          "volume": {
           "description": "Flag correspondente se o serviço de storage class está configurado por padrão",
           "type": "string"
          }
         },
         "required": [
          "loadbalance",
          "volume",
          "secrets"
         ],
         "type": "object"
        },
        "controlplane": {
         "description": "Objeto da requisição da response do nodepool",
         "properties": {
          "auto_scale": {
           "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
           "properties": {
            "max_replicas": {
             "default": 1,
             "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
             "example": 5,
             "minimum": 1,
             "type": "integer"
            },
            "min_replicas": {
             "default": 1,
             "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
             "example": 2,
             "minimum": 1,
             "type": "integer"
            }
           },
           "required": [
            "min_replicas",
            "max_replicas"
           ],
           "type": "object"
          },
          "created_at": {
           "description": "Data de criação do cluster kubernetes",
           "example": "2023-03-01T09:00:00Z",
           "format": "date-time",
           "type": "string"
          },
          "id": {
           "description": "Identificador no padrão uuid para identificar o nodepool",
           "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
           "format": "uuid",
           "type": "string"
          },
          "instance_template": {
           "description": "Template do objeto de instância usado para criar instâncias de máquina e grupos gerenciados de instâncias.",
           "properties": {
            "disk_size": {
             "description": "Tamanho do disco anexado a cada nó",
             "type": "integer"
            },
            "disk_type": {
             "description": "Tipo de disco anexado a cada nó",
             "type": "string"
            },
            "flavor": {
             "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
             "properties": {
              "id": {
               "default": "",
               "description": "Identificador exclusivo do Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Nome do Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Quantidade de memória RAM, medida em MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Quantidade de disco, medido em GB.",
               "example": 20,
               "type": "integer"
              },
              "vcpu": {
               "default": 0,
               "description": "Quantidade de vCPUs disponiveis.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size"
             ],
             "type": "object"
            },
            "node_image": {
             "description": "Imagem do sistema operacional que é executada em cada nó",
             "example": "ubuntu-2004-kube-v1.22.9-v1",
             "type": "string"
            }
           },
           "required": [
            "flavor",
            "node_image",
            "disk_size",
            "disk_type"
           ],
           "type": "object"
          },
          "labels": {
           "additionalProperties": {
            "type": "string"
           },
           "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
           "example": {
            "key1": "valor1"
           },
           "type": "object"
          },
          "name": {
           "description": "Nome do node pool",
           "example": "nodepool-exemplo",
           "type": "string"
          },
          "replicas": {
           "description": "Quantidade de réplicas dos nós do nodepool",
           "example": 3,
           "type": "integer"
          },
          "securityGroups": {
           "description": "Nome do grupo de segurança para definir regras que permitem tráfego de rede no node pool de workers",
           "items": {
            "description": "Items dos grupos de segurança que definem regras que permitem tráfego de rede no node pool de workers",
            "example": "security-group-name",
            "type": "string"
           },
           "type": "array"
          },
          "status": {
           "description": "Detalhes a respeito do status do node pool ou control plane",
           "properties": {
            "messages": {
             "description": "Mensagem detalhada sobre o status do node pool ou control plane",
             "items": {
              "description": "Mensagens retornadas pelos control planes ou nodepools",
              "example": "Ready",
              "type": "string"
             },
             "type": "array"
            },
            "state": {
             "description": "Estado atual do node pool ou control plane.\n<table>\n  <tr>\n    <td>Node pool</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n  <tr>\n    <td>Control Plane</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n</table>\n",
             "example": "Pending",
             "type": "string"
            }
           },
           "required": [
            "state",
            "messages"
           ],
           "type": "object"
          },
          "tags": {
           "description": "Lista de tags aplicadas ao nodepool",
           "items": {
            "description": "Items da lista de tags aplicadas ao nodepool",
            "example": "tag-exemplo",
            "type": "string"
           },
           "type": "array"
          },
          "taints": {
           "description": "Propriedade de associação de um conjunto se nós",
           "items": {
            "properties": {
             "effect": {
              "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
              "enum": [
               "NoSchedule",
               "PreferNoSchedule",
               "NoExecute"
              ],
              "example": "NoSchedule",
              "type": "string"
             },
             "key": {
              "description": "A chave taint a ser aplicada ao node",
              "example": "exemplo-key",
              "type": "string"
             },
             "value": {
              "description": "O valor correspondente a chave taint.",
              "example": "valor1",
              "type": "string"
             }
            },
            "required": [
             "key",
             "value",
             "effect"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "updated_at": {
           "description": "Data da última alteração do cluster kubernetes",
           "example": "2023-03-01T09:10:00Z",
           "format": "date-time",
           "type": "string"
          },
          "zone": {
           "description": "Zona de disponibilidade para criação do cluster kubernetes",
           "items": {
            "description": "Items da lista das zonas de disponibilidade para criação do cluster kubernetes",
            "example": "br-ne-1b",
            "type": "string"
           },
           "type": "array"
          }
         },
         "required": [
          "id",
          "name",
          "instance_template",
          "replicas",
          "zone",
          "labels",
          "securityGroups",
          "auto_scale",
          "status"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Data de criação do cluster kubernetes",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "description": {
         "description": "Descrição do cluster kubernetes",
         "example": "Esse é um cluster de exemplo",
         "type": "string"
        },
        "id": {
         "description": "Identificador no padrão uuid para identificar o cluster kubernetes",
         "example": "10113826-624a-4801-900f-6a5742433411",
         "type": "string"
        },
        "kube_api_server": {
         "description": "Informações sobre o Kubernetes API Server do Cluster",
         "properties": {
          "disable_api_server_fip": {
           "default": false,
           "description": "Habilita ou desabilita o uso do Floating IP no API Server",
           "example": true,
           "type": "boolean"
          },
          "fixed_ip": {
           "description": "IP fixo configurado para o Kubernetes API Server",
           "example": "172.100.10.1",
           "type": "string"
          },
          "floating_ip": {
           "description": "Floating IP criado para o Kubernetes API Server",
           "example": "172.100.10.1",
           "type": "string"
          },
          "port": {
           "description": "Porta utilizada pelo Kubernetes API Server",
           "example": 6443,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "name": {
         "description": "Nome do cluster kubernetes",
         "example": "cluster-exemplo",
         "type": "string"
        },
        "network": {
         "description": "Objeto da requisição da response do recurso de rede do cluster kubernetes",
         "properties": {
          "cidr": {
           "description": "Endereço de IP disponíveis que serão utilizados para provisionamento dos nós do cluster",
           "example": "00.0.0.0/00",
           "type": "string"
          },
          "name": {
           "description": "Nome do node pool",
           "example": "k8s-clusterapi-cluster-exemplo",
           "type": "string"
          },
          "subnet_id": {
           "description": "Identificador da subnet interna onde o cluster será provisionado",
           "example": "c5f750a0-a032-477e-a23a-bcffab8b0707",
           "type": "string"
          },
          "uuid": {
           "description": "Identificador no padrão uuid para identificar o nodepool",
           "example": "7c24eb01-9423-4f09-a2d2-99ba5df01411",
           "type": "string"
          }
         },
         "required": [
          "uuid",
          "cidr",
          "name",
          "subnet_id"
         ],
         "type": "object"
        },
        "node_pools": {
         "description": "Conjunto de nodes em um cluster kubernetes",
         "items": {
          "description": "Objeto da requisição da response do nodepool",
          "properties": {
           "auto_scale": {
            "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
            "properties": {
             "max_replicas": {
              "default": 1,
              "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
              "example": 5,
              "minimum": 1,
              "type": "integer"
             },
             "min_replicas": {
              "default": 1,
              "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
              "example": 2,
              "minimum": 1,
              "type": "integer"
             }
            },
            "required": [
             "min_replicas",
             "max_replicas"
            ],
            "type": "object"
           },
           "created_at": {
            "description": "Data de criação do cluster kubernetes",
            "example": "2023-03-01T09:00:00Z",
            "format": "date-time",
            "type": "string"
           },
           "id": {
            "description": "Identificador no padrão uuid para identificar o nodepool",
            "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
            "format": "uuid",
            "type": "string"
           },
           "instance_template": {
            "description": "Template do objeto de instância usado para criar instâncias de máquina e grupos gerenciados de instâncias.",
            "properties": {
             "disk_size": {
              "description": "Tamanho do disco anexado a cada nó",
              "type": "integer"
             },
             "disk_type": {
              "description": "Tipo de disco anexado a cada nó",
              "type": "string"
             },
             "flavor": {
              "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
              "properties": {
               "id": {
                "default": "",
                "description": "Identificador exclusivo do Flavor.",
                "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
                "type": "string"
               },
               "name": {
                "description": "Nome do Flavor.",
                "example": "cloud-k8s.gp1.small",
                "type": "string"
               },
               "ram": {
                "default": 0,
                "description": "Quantidade de memória RAM, medida em MB.",
                "example": 4096,
                "type": "integer"
               },
               "size": {
                "default": 0,
                "description": "Quantidade de disco, medido em GB.",
                "example": 20,
                "type": "integer"
               },
               "vcpu": {
                "default": 0,
                "description": "Quantidade de vCPUs disponiveis.",
                "example": 2,
                "type": "integer"
               }
              },
              "required": [
               "name",
               "id",
               "vcpu",
               "ram",
               "size"
              ],
              "type": "object"
             },
             "node_image": {
              "description": "Imagem do sistema operacional que é executada em cada nó",
              "example": "ubuntu-2004-kube-v1.22.9-v1",
              "type": "string"
             }
            },
            "required": [
             "flavor",
             "node_image",
             "disk_size",
             "disk_type"
            ],
            "type": "object"
           },
           "labels": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
            "example": {
             "key1": "valor1"
            },
            "type": "object"
           },
           "name": {
            "description": "Nome do node pool",
            "example": "nodepool-exemplo",
            "type": "string"
           },
           "replicas": {
            "description": "Quantidade de réplicas dos nós do nodepool",
            "example": 3,
            "type": "integer"
           },
           "securityGroups": {
            "description": "Nome do grupo de segurança para definir regras que permitem tráfego de rede no node pool de workers",
            "items": {
             "description": "Items dos grupos de segurança que definem regras que permitem tráfego de rede no node pool de workers",
             "example": "security-group-name",
             "type": "string"
            },
            "type": "array"
           },
           "status": {
            "description": "Detalhes a respeito do status do node pool ou control plane",
            "properties": {
             "messages": {
              "description": "Mensagem detalhada sobre o status do node pool ou control plane",
              "items": {
               "description": "Mensagens retornadas pelos control planes ou nodepools",
               "example": "Ready",
               "type": "string"
              },
              "type": "array"
             },
             "state": {
              "description": "Estado atual do node pool ou control plane.\n<table>\n  <tr>\n    <td>Node pool</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n  <tr>\n    <td>Control Plane</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n</table>\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "messages"
            ],
            "type": "object"
           },
           "tags": {
            "description": "Lista de tags aplicadas ao nodepool",
            "items": {
             "description": "Items da lista de tags aplicadas ao nodepool",
             "example": "tag-exemplo",
             "type": "string"
            },
            "type": "array"
           },
           "taints": {
            "description": "Propriedade de associação de um conjunto se nós",
            "items": {
             "properties": {
              "effect": {
               "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "A chave taint a ser aplicada ao node",
               "example": "exemplo-key",
               "type": "string"
              },
              "value": {
               "description": "O valor correspondente a chave taint.",
               "example": "valor1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "updated_at": {
            "description": "Data da última alteração do cluster kubernetes",
            "example": "2023-03-01T09:10:00Z",
            "format": "date-time",
            "type": "string"
           },
           "zone": {
            "description": "Zona de disponibilidade para criação do cluster kubernetes",
            "items": {
             "description": "Items da lista das zonas de disponibilidade para criação do cluster kubernetes",
             "example": "br-ne-1b",
             "type": "string"
            },
            "type": "array"
           }
          },
          "required": [
           "id",
           "name",
           "instance_template",
           "replicas",
           "zone",
           "labels",
           "securityGroups",
           "auto_scale",
           "status"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "project_id": {
         "description": "Identificador único do projeto onde o cluster foi provisionado",
         "example": "0000806e53ec429792a7885e63264411",
         "type": "string"
        },
        "region": {
         "description": "Identificador da região em que o cluster kubernetes está localizado",
         "example": "br-ne-1a",
         "type": "string"
        },
        "status": {
         "description": "Detalhes a respeito do status do cluster ou node",
         "properties": {
          "message": {
           "description": "Mensagem detalhada sobre o status do cluster ou node",
           "example": "Ready",
           "type": "string"
          },
          "state": {
           "description": "Estado atual do cluster ou node.\n<table>\n  <tr>\n    <td>Cluster</td>\n    <td>Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed</td>\n  </tr>\n  <tr>\n    <td>Node</td>\n    <td>Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown</td>\n  </tr>\n</table>\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "message"
         ],
         "type": "object"
        },
        "tags": {
         "description": "Lista de tags aplicadas ao cluster kubernetes",
         "items": {
          "description": "Items da lista de tags aplicadas ao cluster kubernetes",
          "example": "tag-exemplo",
          "type": "string"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Data da ultima alteração do cluster kubernetes",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "version": {
         "description": "Versão do kubernetes nativa do cluster",
         "example": "v1.22.9",
         "type": "string"
        }
       },
       "required": [
        "name",
        "id",
        "version",
        "project_id",
        "region"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Obtem o arquivo do kubeconfig do cluster",
      "isInternal": false,
      "name": "kubeconfig",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "description": "Esquema de obter o arquivo do kubeconfig do cluster",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista todos os clusters de um usuário",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response dos clusters",
       "properties": {
        "results": {
         "description": "Lista dos clusters kubernetes",
         "items": {
          "description": "Objeto da requisição da response do cluster",
          "properties": {
           "description": {
            "description": "Descrição do cluster kubernetes",
            "example": "Esse é um cluster de exemplo",
            "type": "string"
           },
           "id": {
            "description": "Identificador no padrão uuid para identificar o cluster kubernetes",
            "example": "10113826-624a-4801-900f-6a5742433411",
            "type": "string"
           },
           "kube_api_server": {
            "description": "Informações sobre o Kubernetes API Server do Cluster",
            "properties": {
             "disable_api_server_fip": {
              "default": false,
              "description": "Habilita ou desabilita o uso do Floating IP no API Server",
              "example": true,
              "type": "boolean"
             },
             "fixed_ip": {
              "description": "IP fixo configurado para o Kubernetes API Server",
              "example": "172.100.10.1",
              "type": "string"
             },
             "floating_ip": {
              "description": "Floating IP criado para o Kubernetes API Server",
              "example": "172.100.10.1",
              "type": "string"
             },
             "port": {
              "description": "Porta utilizada pelo Kubernetes API Server",
              "example": 6443,
              "type": "integer"
             }
            },
            "type": "object"
           },
           "name": {
            "description": "Nome do cluster kubernetes",
            "example": "cluster-exemplo",
            "type": "string"
           },
           "project_id": {
            "description": "Identificador único do projeto onde o cluster foi provisionado",
            "example": "0000806e53ec429792a7885e63264411",
            "type": "string"
           },
           "region": {
            "description": "Identificador da região em que o cluster Kubernetes está localizado.",
            "example": "br-ne-1a",
            "type": "string"
           },
           "status": {
            "description": "Detalhes a respeito do status do cluster ou node",
            "properties": {
             "message": {
              "description": "Mensagem detalhada sobre o status do cluster ou node",
              "example": "Ready",
              "type": "string"
             },
             "state": {
              "description": "Estado atual do cluster ou node.\n<table>\n  <tr>\n    <td>Cluster</td>\n    <td>Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed</td>\n  </tr>\n  <tr>\n    <td>Node</td>\n    <td>Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown</td>\n  </tr>\n</table>\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "message"
            ],
            "type": "object"
           },
           "tags": {
            "description": "Lista de tags aplicadas ao cluster kubernetes",
            "items": {
             "description": "Items da lista de tags aplicadas ao cluster kubernetes",
             "example": "tag-exemplo",
             "nullable": true,
             "type": "string"
            },
            "type": "array"
           },
           "version": {
            "description": "Versão do kubernetes nativa do cluster",
            "example": "v1.22.9",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "project_id"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Rotas relacionadas a api de cluster.",
    "isInternal": false,
    "name": "cluster",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista todos os flavors disponiveis",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Objeto de resposta da requisição do flavor",
       "properties": {
        "results": {
         "items": {
          "description": "Listas de flavors disponibilidas pela aplicação",
          "properties": {
           "bastion": {
            "description": "Lista de flavors disponiveis para a Bastion",
            "items": {
             "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
             "properties": {
              "id": {
               "default": "",
               "description": "Identificador exclusivo do Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Nome do Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Quantidade de memória RAM, medida em MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Quantidade de disco, medido em GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU referente ao flavor",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Quantidade de vCPUs disponiveis.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "controlplane": {
            "description": "Lista de flavors disponiveis para o Controlplane",
            "items": {
             "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
             "properties": {
              "id": {
               "default": "",
               "description": "Identificador exclusivo do Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Nome do Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Quantidade de memória RAM, medida em MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Quantidade de disco, medido em GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU referente ao flavor",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Quantidade de vCPUs disponiveis.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "nodepool": {
            "description": "Lista de flavors disponiveis para os Node Pools",
            "items": {
             "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
             "properties": {
              "id": {
               "default": "",
               "description": "Identificador exclusivo do Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Nome do Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Quantidade de memória RAM, medida em MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Quantidade de disco, medido em GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU referente ao flavor",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Quantidade de vCPUs disponiveis.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           }
          },
          "required": [
           "bastion",
           "nodepool",
           "controlplane"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Rotas relacionadas a informações de configurações dos flavors do openstack.",
    "isInternal": false,
    "name": "flavor",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista todos os flavors disponiveis",
      "isInternal": false,
      "name": "flavors",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Objeto de resposta da requisição do flavor",
       "properties": {
        "results": {
         "items": {
          "description": "Listas de flavors disponibilidas pela aplicação",
          "properties": {
           "bastion": {
            "description": "Lista de flavors disponiveis para a Bastion",
            "items": {
             "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
             "properties": {
              "id": {
               "default": "",
               "description": "Identificador exclusivo do Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Nome do Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Quantidade de memória RAM, medida em MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Quantidade de disco, medido em GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU referente ao flavor",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Quantidade de vCPUs disponiveis.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "controlplane": {
            "description": "Lista de flavors disponiveis para o Controlplane",
            "items": {
             "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
             "properties": {
              "id": {
               "default": "",
               "description": "Identificador exclusivo do Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Nome do Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Quantidade de memória RAM, medida em MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Quantidade de disco, medido em GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU referente ao flavor",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Quantidade de vCPUs disponiveis.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "nodepool": {
            "description": "Lista de flavors disponiveis para os Node Pools",
            "items": {
             "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
             "properties": {
              "id": {
               "default": "",
               "description": "Identificador exclusivo do Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Nome do Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Quantidade de memória RAM, medida em MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Quantidade de disco, medido em GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU referente ao flavor",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Quantidade de vCPUs disponiveis.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           }
          },
          "required": [
           "bastion",
           "nodepool",
           "controlplane"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista todas as versões de kubernetes disponiveis",
      "isInternal": false,
      "name": "versions",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Objeto de resposta da requisição da Versão",
       "properties": {
        "results": {
         "description": "Lista de versões para o cluster kubernetes",
         "items": {
          "description": "Objeto da versão kubernetes",
          "properties": {
           "deprecated": {
            "description": "Indica se a versão está obsoleta",
            "example": false,
            "type": "boolean"
           },
           "version": {
            "description": "Versão kubernetes",
            "example": "v1.22.9",
            "type": "string"
           }
          },
          "required": [
           "version",
           "deprecated"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Rotas relacionadas a informações de configurações do mke-api.",
    "isInternal": false,
    "name": "info",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Cria um node pool em um cluster kubernetes",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "auto_scale": {
         "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "cluster_id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        },
        "flavor": {
         "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes\n<table>\n  <tr>\n    <td>Flavor</td>\n    <td>vCPUs</td>\n    <td>RAM(Gb)</td>\n    <td>Root Disk(GB)</td>\n  </tr>\n  <tr>\n    <td>cloud-k8s.gp1.small</td>\n    <td>2</td>\n    <td>4</td>\n    <td>20</td>\n  </tr>\n  <tr>\n    <td>cloud-k8s.gp1.large</td>\n    <td>8</td>\n    <td>16</td>\n    <td>100</td>\n  </tr>\n</table>\n",
         "enum": [
          "cloud-k8s.gp1.small",
          "cloud-k8s.gp1.large"
         ],
         "example": "cloud-k8s.gp1.small",
         "type": "string"
        },
        "name": {
         "description": "Nome do node pool. O nome destina-se principalmente à idempotência, e deve ser exclusivo em um namespace. 0 nome não pode ser alterado.\nO nome deve seguir as seguintes regras:\n  - deve conter no máximo 63 caracteres\n  - deve conter apenas caracteres alfanuméricos minúsculos ou '-'\n  - deve começar com um caractere alfabético\n  - deve terminar com um caractere alfanumérico\n",
         "example": "nodepool-exemplo",
         "type": "string"
        },
        "replicas": {
         "default": 1,
         "description": "Número de réplicas dos nós do nodepool",
         "example": 3,
         "type": "integer"
        },
        "tags": {
         "description": "Lista de tags aplicadas ao nodepool",
         "items": {
          "description": "Items da lista de tags aplicadas ao nodepool",
          "example": "tag-value1",
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Propriedade de associação de um conjunto se nós",
         "items": {
          "properties": {
           "effect": {
            "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "A chave taint a ser aplicada ao node",
            "example": "exemplo-key",
            "type": "string"
           },
           "value": {
            "description": "O valor correspondente a chave taint.",
            "example": "valor1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "cluster_id",
        "flavor",
        "name",
        "replicas"
       ],
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response do nodepool",
       "properties": {
        "auto_scale": {
         "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Data de criação do cluster kubernetes",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "id": {
         "description": "Identificador no padrão uuid para identificar o nodepool",
         "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
         "format": "uuid",
         "type": "string"
        },
        "instance_template": {
         "description": "Template do objeto de instância usado para criar instâncias de máquina e grupos gerenciados de instâncias.",
         "properties": {
          "disk_size": {
           "description": "Tamanho do disco anexado a cada nó",
           "type": "integer"
          },
          "disk_type": {
           "description": "Tipo de disco anexado a cada nó",
           "type": "string"
          },
          "flavor": {
           "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
           "properties": {
            "id": {
             "default": "",
             "description": "Identificador exclusivo do Flavor.",
             "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
             "type": "string"
            },
            "name": {
             "description": "Nome do Flavor.",
             "example": "cloud-k8s.gp1.small",
             "type": "string"
            },
            "ram": {
             "default": 0,
             "description": "Quantidade de memória RAM, medida em MB.",
             "example": 4096,
             "type": "integer"
            },
            "size": {
             "default": 0,
             "description": "Quantidade de disco, medido em GB.",
             "example": 20,
             "type": "integer"
            },
            "vcpu": {
             "default": 0,
             "description": "Quantidade de vCPUs disponiveis.",
             "example": 2,
             "type": "integer"
            }
           },
           "required": [
            "name",
            "id",
            "vcpu",
            "ram",
            "size"
           ],
           "type": "object"
          },
          "node_image": {
           "description": "Imagem do sistema operacional que é executada em cada nó",
           "example": "ubuntu-2004-kube-v1.22.9-v1",
           "type": "string"
          }
         },
         "required": [
          "flavor",
          "node_image",
          "disk_size",
          "disk_type"
         ],
         "type": "object"
        },
        "labels": {
         "additionalProperties": {
          "type": "string"
         },
         "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
         "example": {
          "key1": "valor1"
         },
         "type": "object"
        },
        "name": {
         "description": "Nome do node pool",
         "example": "nodepool-exemplo",
         "type": "string"
        },
        "replicas": {
         "description": "Quantidade de réplicas dos nós do nodepool",
         "example": 3,
         "type": "integer"
        },
        "securityGroups": {
         "description": "Nome do grupo de segurança para definir regras que permitem tráfego de rede no node pool de workers",
         "items": {
          "description": "Items dos grupos de segurança que definem regras que permitem tráfego de rede no node pool de workers",
          "example": "security-group-name",
          "type": "string"
         },
         "type": "array"
        },
        "status": {
         "description": "Detalhes a respeito do status do node pool ou control plane",
         "properties": {
          "messages": {
           "description": "Mensagem detalhada sobre o status do node pool ou control plane",
           "items": {
            "description": "Mensagens retornadas pelos control planes ou nodepools",
            "example": "Ready",
            "type": "string"
           },
           "type": "array"
          },
          "state": {
           "description": "Estado atual do node pool ou control plane.\n<table>\n  <tr>\n    <td>Node pool</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n  <tr>\n    <td>Control Plane</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n</table>\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "messages"
         ],
         "type": "object"
        },
        "tags": {
         "description": "Lista de tags aplicadas ao nodepool",
         "items": {
          "description": "Items da lista de tags aplicadas ao nodepool",
          "example": "tag-exemplo",
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Propriedade de associação de um conjunto se nós",
         "items": {
          "properties": {
           "effect": {
            "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "A chave taint a ser aplicada ao node",
            "example": "exemplo-key",
            "type": "string"
           },
           "value": {
            "description": "O valor correspondente a chave taint.",
            "example": "valor1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Data da última alteração do cluster kubernetes",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "zone": {
         "description": "Zona de disponibilidade para criação do cluster kubernetes",
         "items": {
          "description": "Items da lista das zonas de disponibilidade para criação do cluster kubernetes",
          "example": "br-ne-1b",
          "type": "string"
         },
         "type": "array"
        }
       },
       "required": [
        "id",
        "name",
        "instance_template",
        "replicas",
        "zone",
        "labels",
        "securityGroups",
        "auto_scale",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deleta um node pool em um cluster do Kubernetes",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Identificador no padrão uuid para identificar o nodepool",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id",
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista nodes de um node pool",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Identificador no padrão uuid para identificar o nodepool",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id",
        "id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response do nodepool",
       "properties": {
        "auto_scale": {
         "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Data de criação do cluster kubernetes",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "id": {
         "description": "Identificador no padrão uuid para identificar o nodepool",
         "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
         "format": "uuid",
         "type": "string"
        },
        "instance_template": {
         "description": "Template do objeto de instância usado para criar instâncias de máquina e grupos gerenciados de instâncias.",
         "properties": {
          "disk_size": {
           "description": "Tamanho do disco anexado a cada nó",
           "type": "integer"
          },
          "disk_type": {
           "description": "Tipo de disco anexado a cada nó",
           "type": "string"
          },
          "flavor": {
           "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
           "properties": {
            "id": {
             "default": "",
             "description": "Identificador exclusivo do Flavor.",
             "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
             "type": "string"
            },
            "name": {
             "description": "Nome do Flavor.",
             "example": "cloud-k8s.gp1.small",
             "type": "string"
            },
            "ram": {
             "default": 0,
             "description": "Quantidade de memória RAM, medida em MB.",
             "example": 4096,
             "type": "integer"
            },
            "size": {
             "default": 0,
             "description": "Quantidade de disco, medido em GB.",
             "example": 20,
             "type": "integer"
            },
            "vcpu": {
             "default": 0,
             "description": "Quantidade de vCPUs disponiveis.",
             "example": 2,
             "type": "integer"
            }
           },
           "required": [
            "name",
            "id",
            "vcpu",
            "ram",
            "size"
           ],
           "type": "object"
          },
          "node_image": {
           "description": "Imagem do sistema operacional que é executada em cada nó",
           "example": "ubuntu-2004-kube-v1.22.9-v1",
           "type": "string"
          }
         },
         "required": [
          "flavor",
          "node_image",
          "disk_size",
          "disk_type"
         ],
         "type": "object"
        },
        "labels": {
         "additionalProperties": {
          "type": "string"
         },
         "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
         "example": {
          "key1": "valor1"
         },
         "type": "object"
        },
        "name": {
         "description": "Nome do node pool",
         "example": "nodepool-exemplo",
         "type": "string"
        },
        "replicas": {
         "description": "Quantidade de réplicas dos nós do nodepool",
         "example": 3,
         "type": "integer"
        },
        "securityGroups": {
         "description": "Nome do grupo de segurança para definir regras que permitem tráfego de rede no node pool de workers",
         "items": {
          "description": "Items dos grupos de segurança que definem regras que permitem tráfego de rede no node pool de workers",
          "example": "security-group-name",
          "type": "string"
         },
         "type": "array"
        },
        "status": {
         "description": "Detalhes a respeito do status do node pool ou control plane",
         "properties": {
          "messages": {
           "description": "Mensagem detalhada sobre o status do node pool ou control plane",
           "items": {
            "description": "Mensagens retornadas pelos control planes ou nodepools",
            "example": "Ready",
            "type": "string"
           },
           "type": "array"
          },
          "state": {
           "description": "Estado atual do node pool ou control plane.\n<table>\n  <tr>\n    <td>Node pool</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n  <tr>\n    <td>Control Plane</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n</table>\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "messages"
         ],
         "type": "object"
        },
        "tags": {
         "description": "Lista de tags aplicadas ao nodepool",
         "items": {
          "description": "Items da lista de tags aplicadas ao nodepool",
          "example": "tag-exemplo",
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Propriedade de associação de um conjunto se nós",
         "items": {
          "properties": {
           "effect": {
            "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "A chave taint a ser aplicada ao node",
            "example": "exemplo-key",
            "type": "string"
           },
           "value": {
            "description": "O valor correspondente a chave taint.",
            "example": "valor1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Data da última alteração do cluster kubernetes",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "zone": {
         "description": "Zona de disponibilidade para criação do cluster kubernetes",
         "items": {
          "description": "Items da lista das zonas de disponibilidade para criação do cluster kubernetes",
          "example": "br-ne-1b",
          "type": "string"
         },
         "type": "array"
        }
       },
       "required": [
        "id",
        "name",
        "instance_template",
        "replicas",
        "zone",
        "labels",
        "securityGroups",
        "auto_scale",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Obtem um node pool para um cluster Kubernetes",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response dos nodepools",
       "properties": {
        "results": {
         "description": "Lista dos node pools",
         "items": {
          "description": "Objeto da requisição da response do nodepool",
          "properties": {
           "auto_scale": {
            "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
            "properties": {
             "max_replicas": {
              "default": 1,
              "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
              "example": 5,
              "minimum": 1,
              "type": "integer"
             },
             "min_replicas": {
              "default": 1,
              "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
              "example": 2,
              "minimum": 1,
              "type": "integer"
             }
            },
            "required": [
             "min_replicas",
             "max_replicas"
            ],
            "type": "object"
           },
           "created_at": {
            "description": "Data de criação do cluster kubernetes",
            "example": "2023-03-01T09:00:00Z",
            "format": "date-time",
            "type": "string"
           },
           "id": {
            "description": "Identificador no padrão uuid para identificar o nodepool",
            "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
            "format": "uuid",
            "type": "string"
           },
           "instance_template": {
            "description": "Template do objeto de instância usado para criar instâncias de máquina e grupos gerenciados de instâncias.",
            "properties": {
             "disk_size": {
              "description": "Tamanho do disco anexado a cada nó",
              "type": "integer"
             },
             "disk_type": {
              "description": "Tipo de disco anexado a cada nó",
              "type": "string"
             },
             "flavor": {
              "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
              "properties": {
               "id": {
                "default": "",
                "description": "Identificador exclusivo do Flavor.",
                "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
                "type": "string"
               },
               "name": {
                "description": "Nome do Flavor.",
                "example": "cloud-k8s.gp1.small",
                "type": "string"
               },
               "ram": {
                "default": 0,
                "description": "Quantidade de memória RAM, medida em MB.",
                "example": 4096,
                "type": "integer"
               },
               "size": {
                "default": 0,
                "description": "Quantidade de disco, medido em GB.",
                "example": 20,
                "type": "integer"
               },
               "vcpu": {
                "default": 0,
                "description": "Quantidade de vCPUs disponiveis.",
                "example": 2,
                "type": "integer"
               }
              },
              "required": [
               "name",
               "id",
               "vcpu",
               "ram",
               "size"
              ],
              "type": "object"
             },
             "node_image": {
              "description": "Imagem do sistema operacional que é executada em cada nó",
              "example": "ubuntu-2004-kube-v1.22.9-v1",
              "type": "string"
             }
            },
            "required": [
             "flavor",
             "node_image",
             "disk_size",
             "disk_type"
            ],
            "type": "object"
           },
           "labels": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
            "example": {
             "key1": "valor1"
            },
            "type": "object"
           },
           "name": {
            "description": "Nome do node pool",
            "example": "nodepool-exemplo",
            "type": "string"
           },
           "replicas": {
            "description": "Quantidade de réplicas dos nós do nodepool",
            "example": 3,
            "type": "integer"
           },
           "securityGroups": {
            "description": "Nome do grupo de segurança para definir regras que permitem tráfego de rede no node pool de workers",
            "items": {
             "description": "Items dos grupos de segurança que definem regras que permitem tráfego de rede no node pool de workers",
             "example": "security-group-name",
             "type": "string"
            },
            "type": "array"
           },
           "status": {
            "description": "Detalhes a respeito do status do node pool ou control plane",
            "properties": {
             "messages": {
              "description": "Mensagem detalhada sobre o status do node pool ou control plane",
              "items": {
               "description": "Mensagens retornadas pelos control planes ou nodepools",
               "example": "Ready",
               "type": "string"
              },
              "type": "array"
             },
             "state": {
              "description": "Estado atual do node pool ou control plane.\n<table>\n  <tr>\n    <td>Node pool</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n  <tr>\n    <td>Control Plane</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n</table>\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "messages"
            ],
            "type": "object"
           },
           "tags": {
            "description": "Lista de tags aplicadas ao nodepool",
            "items": {
             "description": "Items da lista de tags aplicadas ao nodepool",
             "example": "tag-exemplo",
             "type": "string"
            },
            "type": "array"
           },
           "taints": {
            "description": "Propriedade de associação de um conjunto se nós",
            "items": {
             "properties": {
              "effect": {
               "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "A chave taint a ser aplicada ao node",
               "example": "exemplo-key",
               "type": "string"
              },
              "value": {
               "description": "O valor correspondente a chave taint.",
               "example": "valor1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "updated_at": {
            "description": "Data da última alteração do cluster kubernetes",
            "example": "2023-03-01T09:10:00Z",
            "format": "date-time",
            "type": "string"
           },
           "zone": {
            "description": "Zona de disponibilidade para criação do cluster kubernetes",
            "items": {
             "description": "Items da lista das zonas de disponibilidade para criação do cluster kubernetes",
             "example": "br-ne-1b",
             "type": "string"
            },
            "type": "array"
           }
          },
          "required": [
           "id",
           "name",
           "instance_template",
           "replicas",
           "zone",
           "labels",
           "securityGroups",
           "auto_scale",
           "status"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista nodes de um node pool",
      "isInternal": false,
      "name": "nodes",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        },
        "node_pool_id": {
         "description": "Identificador no padrão uuid para identificar o nodepool",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id",
        "node_pool_id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response dos nodes",
       "properties": {
        "results": {
         "description": "Lista dos nodes",
         "items": {
          "description": "Objeto da requisição da response do node",
          "properties": {
           "addresses": {
            "description": "Lista de endereços acessíveis ao node",
            "items": {
             "description": "Informações para o endereço do node",
             "properties": {
              "address": {
               "description": "O endereço do node",
               "example": "address-exemplo",
               "type": "string"
              },
              "type": {
               "description": "Tipo de endereço do node, um de Hostname, ExternalIP ou InternalIP.\n**HostName** - O nome do host relatado pelo kernel do nó. Pode ser substituído através do parâmetro kubelet --hostname-override.\n**ExternalIP** - Geralmente, o endereço IP do nó que é roteável externamente (disponível fora do cluster).\n**InternalIP** - Geralmente, o endereço IP do nó que é roteável somente dentro do cluster.\n",
               "example": "Hostname",
               "type": "string"
              }
             },
             "required": [
              "type",
              "address"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "annotations": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
            "example": {
             "annoattion-key1": "valor1"
            },
            "type": "object"
           },
           "cluster_name": {
            "description": "Nome do cluster ao qual o node pertence",
            "example": "cluster-exemplo",
            "type": "string"
           },
           "created_at": {
            "description": "Data de criação do node",
            "example": "2023-03-01T09:00:00Z",
            "format": "date-time",
            "type": "string"
           },
           "flavor": {
            "description": "Nome do flavor",
            "example": "cloud-k8s.gp1.small",
            "type": "string"
           },
           "id": {
            "description": "Identificador no padrão uuid para identificar o node",
            "example": "77b3a951-dc2c-4802-a246-63a3c7f7ecac",
            "format": "uuid",
            "type": "string"
           },
           "infrastructure": {
            "description": "Informações de infraestrutura do node",
            "properties": {
             "allocatable": {
              "description": "Informações de recursos do node",
              "properties": {
               "cpu": {
                "description": "Quantidade de CPU",
                "example": "2",
                "type": "string"
               },
               "ephemeral_storage": {
                "description": "Quantidade de armazenamento efêmero",
                "example": "18859814062",
                "type": "string"
               },
               "hugepages_1Gi": {
                "description": "Alocação e consumo de páginas",
                "type": "string"
               },
               "hugepages_2Mi": {
                "description": "Alocação e consumo de páginas",
                "type": "string"
               },
               "memory": {
                "description": "Quantidade de mémoria",
                "example": "3923640Ki",
                "type": "string"
               },
               "pods": {
                "description": "Quantidade de pods",
                "example": "110",
                "type": "string"
               }
              },
              "required": [
               "cpu",
               "ephemeral_storage",
               "hugepages_1Gi",
               "hugepages_2Mi",
               "memory",
               "pods"
              ],
              "type": "object"
             },
             "architecture": {
              "description": "Arquitetura relatada pelo node",
              "example": "amd64",
              "type": "string"
             },
             "capacity": {
              "description": "Informações de recursos do node",
              "properties": {
               "cpu": {
                "description": "Quantidade de CPU",
                "example": "2",
                "type": "string"
               },
               "ephemeral_storage": {
                "description": "Quantidade de armazenamento efêmero",
                "example": "18859814062",
                "type": "string"
               },
               "hugepages_1Gi": {
                "description": "Alocação e consumo de páginas",
                "type": "string"
               },
               "hugepages_2Mi": {
                "description": "Alocação e consumo de páginas",
                "type": "string"
               },
               "memory": {
                "description": "Quantidade de mémoria",
                "example": "3923640Ki",
                "type": "string"
               },
               "pods": {
                "description": "Quantidade de pods",
                "example": "110",
                "type": "string"
               }
              },
              "required": [
               "cpu",
               "ephemeral_storage",
               "hugepages_1Gi",
               "hugepages_2Mi",
               "memory",
               "pods"
              ],
              "type": "object"
             },
             "containerRuntimeVersion": {
              "description": "Versão do ContainerRuntime relatada pelo node por meio da API remota de tempo de execução",
              "example": "containerd://1.6.2",
              "type": "string"
             },
             "kernelVersion": {
              "description": "Versão do kernel relatada pelo node de 'uname -r'",
              "example": "5.4.0-122-generic",
              "type": "string"
             },
             "kubeProxyVersion": {
              "description": "Versão do KubeProxy relatada pelo node",
              "example": "v1.22.9",
              "type": "string"
             },
             "kubeletVersion": {
              "description": "Versão do Kubelet relatada pelo node",
              "example": "v1.22.9",
              "type": "string"
             },
             "operatingSystem": {
              "description": "Sistema operacional relatado pelo node",
              "example": "linux",
              "type": "string"
             },
             "osImage": {
              "description": "Imagem do SO relatada pelo node de /etc/os-release",
              "example": "Ubuntu 20.04.4 LTS",
              "type": "string"
             }
            },
            "required": [
             "architecture",
             "containerRuntimeVersion",
             "kernelVersion",
             "kubeProxyVersion",
             "kubeletVersion",
             "operatingSystem",
             "osImage",
             "allocatable",
             "capacity"
            ],
            "type": "object"
           },
           "labels": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
            "example": {
             "label-key1": "valor1"
            },
            "type": "object"
           },
           "name": {
            "description": "Nome do node",
            "example": "node-exemplo",
            "type": "string"
           },
           "namespace": {
            "description": "Namespace do node",
            "example": "namespace-exemplo",
            "type": "string"
           },
           "node_image": {
            "description": "Imagem do sistema operacional executada pelo node",
            "example": "ubuntu-2004-kube-v1.22.9-v1",
            "type": "string"
           },
           "nodepool_name": {
            "description": "Nome do nodepool ao qual o node pertence",
            "example": "nodepool-exemplo",
            "type": "string"
           },
           "status": {
            "description": "Detalhes a respeito do status do cluster ou node",
            "properties": {
             "message": {
              "description": "Mensagem detalhada sobre o status do cluster ou node",
              "example": "Ready",
              "type": "string"
             },
             "state": {
              "description": "Estado atual do cluster ou node.\n<table>\n  <tr>\n    <td>Cluster</td>\n    <td>Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed</td>\n  </tr>\n  <tr>\n    <td>Node</td>\n    <td>Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown</td>\n  </tr>\n</table>\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "message"
            ],
            "type": "object"
           },
           "taints": {
            "description": "Propriedade de associação de um conjunto de nós",
            "items": {
             "properties": {
              "effect": {
               "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "A chave taint a ser aplicada ao node",
               "example": "exemplo-key",
               "type": "string"
              },
              "value": {
               "description": "O valor correspondente a chave taint.",
               "example": "valor1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "zone": {
            "description": "Identificador da região em que o node está localizado",
            "example": "br-ne-1c",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "namespace",
           "cluster_name",
           "nodepool_name",
           "created_at",
           "annotations",
           "labels",
           "taints",
           "addresses",
           "flavor",
           "node_image",
           "zone",
           "infrastructure",
           "status"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Atualiza nodes de um node pool",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "auto_scale": {
         "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "cluster_id": {
         "description": "Identificador no padrão uuid para identificar o cluster",
         "format": "uuid",
         "type": "string"
        },
        "id": {
         "description": "Identificador no padrão uuid para identificar o nodepool",
         "format": "uuid",
         "type": "string"
        },
        "replicas": {
         "description": "Quantidade de réplicas dos nós do nodepool",
         "type": "integer"
        }
       },
       "required": [
        "cluster_id",
        "id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Objeto da requisição da response do nodepool",
       "properties": {
        "auto_scale": {
         "description": "Objeto que especifica as propriedades para atualização de recursos de carga de trabalho no cluster Kubernetes.",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Quantidade máxima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Quantidade mínima de réplicas para o autoscaling. Se não for informado um valor, ou se for igual ou menor que zero, o valor do autoscaler será assumido com base no campo \"réplicas\".",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Data de criação do cluster kubernetes",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "id": {
         "description": "Identificador no padrão uuid para identificar o nodepool",
         "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
         "format": "uuid",
         "type": "string"
        },
        "instance_template": {
         "description": "Template do objeto de instância usado para criar instâncias de máquina e grupos gerenciados de instâncias.",
         "properties": {
          "disk_size": {
           "description": "Tamanho do disco anexado a cada nó",
           "type": "integer"
          },
          "disk_type": {
           "description": "Tipo de disco anexado a cada nó",
           "type": "string"
          },
          "flavor": {
           "description": "Definição da capacidade de CPU, memória RAM e armazenamento dos nodes",
           "properties": {
            "id": {
             "default": "",
             "description": "Identificador exclusivo do Flavor.",
             "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
             "type": "string"
            },
            "name": {
             "description": "Nome do Flavor.",
             "example": "cloud-k8s.gp1.small",
             "type": "string"
            },
            "ram": {
             "default": 0,
             "description": "Quantidade de memória RAM, medida em MB.",
             "example": 4096,
             "type": "integer"
            },
            "size": {
             "default": 0,
             "description": "Quantidade de disco, medido em GB.",
             "example": 20,
             "type": "integer"
            },
            "vcpu": {
             "default": 0,
             "description": "Quantidade de vCPUs disponiveis.",
             "example": 2,
             "type": "integer"
            }
           },
           "required": [
            "name",
            "id",
            "vcpu",
            "ram",
            "size"
           ],
           "type": "object"
          },
          "node_image": {
           "description": "Imagem do sistema operacional que é executada em cada nó",
           "example": "ubuntu-2004-kube-v1.22.9-v1",
           "type": "string"
          }
         },
         "required": [
          "flavor",
          "node_image",
          "disk_size",
          "disk_type"
         ],
         "type": "object"
        },
        "labels": {
         "additionalProperties": {
          "type": "string"
         },
         "description": "Pares de chave/valor anexados ao objeto e usados para especificação",
         "example": {
          "key1": "valor1"
         },
         "type": "object"
        },
        "name": {
         "description": "Nome do node pool",
         "example": "nodepool-exemplo",
         "type": "string"
        },
        "replicas": {
         "description": "Quantidade de réplicas dos nós do nodepool",
         "example": 3,
         "type": "integer"
        },
        "securityGroups": {
         "description": "Nome do grupo de segurança para definir regras que permitem tráfego de rede no node pool de workers",
         "items": {
          "description": "Items dos grupos de segurança que definem regras que permitem tráfego de rede no node pool de workers",
          "example": "security-group-name",
          "type": "string"
         },
         "type": "array"
        },
        "status": {
         "description": "Detalhes a respeito do status do node pool ou control plane",
         "properties": {
          "messages": {
           "description": "Mensagem detalhada sobre o status do node pool ou control plane",
           "items": {
            "description": "Mensagens retornadas pelos control planes ou nodepools",
            "example": "Ready",
            "type": "string"
           },
           "type": "array"
          },
          "state": {
           "description": "Estado atual do node pool ou control plane.\n<table>\n  <tr>\n    <td>Node pool</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n  <tr>\n    <td>Control Plane</td>\n    <td>ScalingUp, ScalingDown, Running, Failed, Unknown</td>\n  </tr>\n</table>\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "messages"
         ],
         "type": "object"
        },
        "tags": {
         "description": "Lista de tags aplicadas ao nodepool",
         "items": {
          "description": "Items da lista de tags aplicadas ao nodepool",
          "example": "tag-exemplo",
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Propriedade de associação de um conjunto se nós",
         "items": {
          "properties": {
           "effect": {
            "description": "O efeito do taint em pods que não toleram o taint.\n**NoSchedule** - Não permitir que novos pods sejam agendados no nó, a menos que eles tolerem a taint, mas permitir que todos os pods já em execução continuem em execução.\n**PreferNoSchedule** - Parecido com o NoSchedule, mas tenta não agendar novos pods no nó, em vez de proibir totalmente o agendamento de novos pods no nó\n**NoExecute** - Remova todos os pods já em execução que não tolerem o taint.  \n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "A chave taint a ser aplicada ao node",
            "example": "exemplo-key",
            "type": "string"
           },
           "value": {
            "description": "O valor correspondente a chave taint.",
            "example": "valor1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Data da última alteração do cluster kubernetes",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "zone": {
         "description": "Zona de disponibilidade para criação do cluster kubernetes",
         "items": {
          "description": "Items da lista das zonas de disponibilidade para criação do cluster kubernetes",
          "example": "br-ne-1b",
          "type": "string"
         },
         "type": "array"
        }
       },
       "required": [
        "id",
        "name",
        "instance_template",
        "replicas",
        "zone",
        "labels",
        "securityGroups",
        "auto_scale",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Rotas relacionadas a api de Nodepool dentro da api de cluster.",
    "isInternal": false,
    "name": "nodepool",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lista todas as versões de kubernetes disponiveis",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Objeto de resposta da requisição da Versão",
       "properties": {
        "results": {
         "description": "Lista de versões para o cluster kubernetes",
         "items": {
          "description": "Objeto da versão kubernetes",
          "properties": {
           "deprecated": {
            "description": "Indica se a versão está obsoleta",
            "example": false,
            "type": "boolean"
           },
           "version": {
            "description": "Versão kubernetes",
            "example": "v1.22.9",
            "type": "string"
           }
          },
          "required": [
           "version",
           "deprecated"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Rotas relacionadas a informações de configurações das versões de kubernetes.",
    "isInternal": false,
    "name": "version",
    "version": "0.1.0"
   }
  ],
  "description": "APIs referentes ao produto de kubernetes",
  "isInternal": false,
  "name": "kubernetes",
  "version": "0.1.0"
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Check api status",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "status": "OK"
       },
       "properties": {
        "status": {
         "title": "Status",
         "type": "string"
        }
       },
       "required": [
        "status"
       ],
       "title": "Healthcheck",
       "type": "object"
      },
      "version": "1.101.2"
     }
    ],
    "description": "",
    "isInternal": true,
    "name": "healthcheck",
    "version": "1.101.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Attach a Security Group to a Port",
      "isInternal": false,
      "name": "attach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "magalu.cloud/core/resolved": "true",
         "title": "Port Id",
         "type": "string"
        },
        "security_group_id": {
         "magalu.cloud/core/resolved": "true",
         "title": "Security Group Id",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Port",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "has_pip": {
         "default": true,
         "nullable": true,
         "title": "Has Pip",
         "type": "boolean"
        },
        "has_sg": {
         "default": true,
         "nullable": true,
         "title": "Has Sg",
         "type": "boolean"
        },
        "name": {
         "maxLength": 100,
         "minLength": 5,
         "title": "Name",
         "type": "string"
        },
        "security_groups_id": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Security Groups Id",
         "type": "array"
        },
        "subnets": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Subnets",
         "type": "array"
        },
        "vpc_id": {
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "name",
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "PortCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Port on the default VPC",
      "isInternal": true,
      "name": "create-default-vpc",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "has_pip": {
         "default": true,
         "nullable": true,
         "title": "Has Pip",
         "type": "boolean"
        },
        "has_sg": {
         "default": true,
         "nullable": true,
         "title": "Has Sg",
         "type": "boolean"
        },
        "name": {
         "maxLength": 100,
         "minLength": 5,
         "title": "Name",
         "type": "string"
        },
        "security_groups_id": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Security Groups Id",
         "type": "array"
        },
        "subnets": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Subnets",
         "type": "array"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "PortCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a port from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "title": "Port Id",
         "type": "string"
        }
       },
       "required": [
        "port_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "",
      "isInternal": true,
      "name": "delete-all",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "deleted_ports": [
         {
          "openstack": 0
         },
         {
          "database": 0
         }
        ],
        "deleted_public_ips": [
         {
          "openstack": 0
         },
         {
          "database": 0
         }
        ]
       },
       "properties": {
        "deleted_ports": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Ports",
         "type": "array"
        },
        "deleted_public_ips": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Public Ips",
         "type": "array"
        }
       },
       "title": "PortDeletedAllResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Detach a Security Group to a Port",
      "isInternal": false,
      "name": "detach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "title": "Port Id",
         "type": "string"
        },
        "security_group_id": {
         "title": "Security Group Id",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a port details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "title": "Port Id",
         "type": "string"
        }
       },
       "required": [
        "port_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "port description",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "ip_address": [
         {
          "ip_address": "172.20.0.2",
          "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ],
        "is_admin_state_up": true,
        "is_port_security_enabled": true,
        "name": "port_name",
        "public_ip": [
         {
          "public_ip": "100.94.5.31",
          "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ],
        "security_groups": [
         "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ],
        "updated": "2022-01-01 00:00:00",
        "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "ip_address": {
         "default": [],
         "items": {
          "example": {
           "ip_address": "172.20.0.2",
           "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "ip_address": {
            "title": "Ip Address",
            "type": "string"
           },
           "subnet_id": {
            "title": "Subnet Id",
            "type": "string"
           }
          },
          "required": [
           "ip_address",
           "subnet_id"
          ],
          "title": "IpAddress",
          "type": "object"
         },
         "title": "Ip Address",
         "type": "array"
        },
        "is_admin_state_up": {
         "nullable": true,
         "title": "Is Admin State Up",
         "type": "boolean"
        },
        "is_port_security_enabled": {
         "nullable": true,
         "title": "Is Port Security Enabled",
         "type": "boolean"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "public_ip": {
         "default": [],
         "items": {
          "example": {
           "public_ip": "100.94.5.31",
           "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "public_ip": {
            "nullable": true,
            "title": "Public Ip",
            "type": "string"
           },
           "public_ip_id": {
            "nullable": true,
            "title": "Public Ip Id",
            "type": "string"
           }
          },
          "title": "PublicIpResponsePort",
          "type": "object"
         },
         "nullable": true,
         "title": "Public Ip",
         "type": "array"
        },
        "security_groups": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "Security Groups",
         "type": "array"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        },
        "vpc_id": {
         "nullable": true,
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "title": "PortResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a detailed list of ports",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id_list": {
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Port Id List",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "items": {
        "example": {
         "created_at": "2022-01-01 00:00:00",
         "description": "port description",
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
         "ip_address": [
          {
           "ip_address": "172.20.0.2",
           "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         ],
         "is_admin_state_up": true,
         "is_port_security_enabled": true,
         "name": "port_name",
         "public_ip": [
          {
           "public_ip": "100.94.5.31",
           "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         ],
         "security_groups": [
          "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         ],
         "updated": "2022-01-01 00:00:00",
         "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "properties": {
         "created_at": {
          "format": "date-time",
          "nullable": true,
          "title": "Created At",
          "type": "string"
         },
         "description": {
          "nullable": true,
          "title": "Description",
          "type": "string"
         },
         "id": {
          "nullable": true,
          "title": "Id",
          "type": "string"
         },
         "ip_address": {
          "default": [],
          "items": {
           "example": {
            "ip_address": "172.20.0.2",
            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "ip_address": {
             "title": "Ip Address",
             "type": "string"
            },
            "subnet_id": {
             "title": "Subnet Id",
             "type": "string"
            }
           },
           "required": [
            "ip_address",
            "subnet_id"
           ],
           "title": "IpAddress",
           "type": "object"
          },
          "title": "Ip Address",
          "type": "array"
         },
         "is_admin_state_up": {
          "nullable": true,
          "title": "Is Admin State Up",
          "type": "boolean"
         },
         "is_port_security_enabled": {
          "nullable": true,
          "title": "Is Port Security Enabled",
          "type": "boolean"
         },
         "name": {
          "nullable": true,
          "title": "Name",
          "type": "string"
         },
         "public_ip": {
          "default": [],
          "items": {
           "example": {
            "public_ip": "100.94.5.31",
            "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "public_ip": {
             "nullable": true,
             "title": "Public Ip",
             "type": "string"
            },
            "public_ip_id": {
             "nullable": true,
             "title": "Public Ip Id",
             "type": "string"
            }
           },
           "title": "PublicIpResponsePort",
           "type": "object"
          },
          "nullable": true,
          "title": "Public Ip",
          "type": "array"
         },
         "security_groups": {
          "default": [],
          "items": {
           "type": "string"
          },
          "title": "Security Groups",
          "type": "array"
         },
         "updated": {
          "format": "date-time",
          "nullable": true,
          "title": "Updated",
          "type": "string"
         },
         "vpc_id": {
          "nullable": true,
          "title": "Vpc Id",
          "type": "string"
         }
        },
        "title": "PortResponse",
        "type": "object"
       },
       "title": "Response Portsdetailedlist",
       "type": "array"
      },
      "version": "1.101.2"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Attach a Security Group to a Port",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "security_group_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Security Group Id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "security_group_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Security Group Id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Detach a Security Group from a Port",
        "isInternal": false,
        "name": "delete",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "security_group_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Security Group Id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "security_group_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Security Group Id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Check if a Public IP is attached to a Port",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "security_group_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Security Group Id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "security_group_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Security Group Id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       }
      ],
      "description": "Manage the attachment between a Security Group and a Port",
      "isInternal": false,
      "name": "security-group-attachment",
      "version": ""
     }
    ],
    "description": "VPC Port",
    "isInternal": false,
    "name": "port",
    "version": "1.101.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Attach a Public IP to a Port",
      "isInternal": false,
      "name": "attach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "magalu.cloud/core/resolved": "true",
         "title": "Port Id",
         "type": "string"
        },
        "public_ip_id": {
         "magalu.cloud/core/resolved": "true",
         "title": "Public Ip Id",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Public IP",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "validate_quota": {
         "default": true,
         "title": "validateQuota",
         "type": "boolean"
        },
        "vpc_id": {
         "title": "Vpc Id",
         "type": "string"
        },
        "wait": {
         "default": true,
         "title": "wait",
         "type": "boolean"
        },
        "wait_timeout": {
         "default": 120,
         "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
         "nullable": true,
         "title": "waitTimeout",
         "type": "integer"
        }
       },
       "required": [
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "PublicIpCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a Public IP from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "public_ip_id": {
         "title": "Public Ip Id",
         "type": "string"
        }
       },
       "required": [
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Detach a Public IP to a Port",
      "isInternal": false,
      "name": "detach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "title": "Port Id",
         "type": "string"
        },
        "public_ip_id": {
         "title": "Public Ip Id",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a Public IP details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "public_ip_id": {
         "title": "Public Ip Id",
         "type": "string"
        }
       },
       "required": [
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "port description",
        "error": "error",
        "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "public_ip": "100.94.5.31",
        "status": "created",
        "updated": "2022-01-01 00:00:00",
        "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "error": {
         "nullable": true,
         "title": "Error",
         "type": "string"
        },
        "external_id": {
         "nullable": true,
         "title": "External Id",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "port_id": {
         "nullable": true,
         "title": "Port Id",
         "type": "string"
        },
        "public_ip": {
         "nullable": true,
         "title": "Public Ip",
         "type": "string"
        },
        "status": {
         "nullable": true,
         "title": "Status",
         "type": "string"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        },
        "vpc_id": {
         "nullable": true,
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "title": "PublicIpDb",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a tenant's public ip list",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "public_ips": [
         {
          "created_at": "2022-01-01 00:00:00",
          "description": "port description",
          "error": "error",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "port_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "public_ip": "100.94.5.31",
          "status": "created",
          "updated": "2022-01-01 00:00:00",
          "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ]
       },
       "properties": {
        "public_ips": {
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "description": "port description",
           "error": "error",
           "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "public_ip": "100.94.5.31",
           "status": "created",
           "updated": "2022-01-01 00:00:00",
           "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "external_id": {
            "nullable": true,
            "title": "External Id",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "port_id": {
            "nullable": true,
            "title": "Port Id",
            "type": "string"
           },
           "public_ip": {
            "nullable": true,
            "title": "Public Ip",
            "type": "string"
           },
           "status": {
            "nullable": true,
            "title": "Status",
            "type": "string"
           },
           "updated": {
            "format": "date-time",
            "nullable": true,
            "title": "Updated",
            "type": "string"
           },
           "vpc_id": {
            "nullable": true,
            "title": "Vpc Id",
            "type": "string"
           }
          },
          "title": "PublicIpDb",
          "type": "object"
         },
         "title": "Public Ips",
         "type": "array"
        }
       },
       "required": [
        "public_ips"
       ],
       "title": "PublicIpsList",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Attach a Public IP to a Port",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "public_ip_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Public Ip Id",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "public_ip_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Public Ip Id",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Detach a Public IP from a Port",
        "isInternal": false,
        "name": "delete",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "public_ip_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Public Ip Id",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "public_ip_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Public Ip Id",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Check if a Public IP is attached to a Port",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "public_ip_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Public Ip Id",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Port Id",
           "type": "string"
          },
          "public_ip_id": {
           "magalu.cloud/core/resolved": "true",
           "title": "Public Ip Id",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       }
      ],
      "description": "Manage the attachment between a Public IP and a Port",
      "isInternal": false,
      "name": "port-attachment",
      "version": ""
     }
    ],
    "description": "VPC Public IPs",
    "isInternal": false,
    "name": "public_ip",
    "version": "1.101.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a list of usage quotas from a provided tenant",
      "isInternal": true,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "quota_slug": {
         "enum": [
          "public_ips",
          "subnets",
          "subnet_pools",
          "security_groups",
          "security_group_rules",
          "vpcs",
          "nics"
         ],
         "title": "SlugQuotas",
         "type": "string"
        }
       },
       "required": [
        "quota_slug"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "results": [
         {
          "quota_slug": "public_ips",
          "used": 10
         }
        ]
       },
       "properties": {
        "results": {
         "items": {
          "example": {
           "quota_slug": "public_ips",
           "used": 10
          },
          "properties": {
           "quota_slug": {
            "title": "Quota Slug",
            "type": "string"
           },
           "used": {
            "title": "Used",
            "type": "integer"
           }
          },
          "required": [
           "quota_slug",
           "used"
          ],
          "title": "QuotaModel",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "title": "QuotaResult",
       "type": "object"
      },
      "version": "1.101.2"
     }
    ],
    "description": "VPC Quotas",
    "isInternal": true,
    "name": "quotas",
    "version": "1.101.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Rule",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "direction": {
         "nullable": true,
         "title": "Direction",
         "type": "string"
        },
        "ethertype": {
         "nullable": true,
         "title": "Ethertype",
         "type": "string"
        },
        "port_range_max": {
         "nullable": true,
         "title": "Port Range Max",
         "type": "integer"
        },
        "port_range_min": {
         "nullable": true,
         "title": "Port Range Min",
         "type": "integer"
        },
        "protocol": {
         "nullable": true,
         "title": "Protocol",
         "type": "string"
        },
        "remote_group_id": {
         "nullable": true,
         "title": "Remote Group Id",
         "type": "string"
        },
        "remote_ip_prefix": {
         "nullable": true,
         "title": "Remote Ip Prefix",
         "type": "string"
        },
        "security_group_id": {
         "title": "Security Group Id",
         "type": "string"
        },
        "validate_quota": {
         "default": true,
         "title": "validateQuota",
         "type": "boolean"
        },
        "wait": {
         "default": true,
         "nullable": true,
         "title": "Wait",
         "type": "boolean"
        },
        "wait_timeout": {
         "default": 120,
         "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
         "nullable": true,
         "title": "waitTimeout",
         "type": "integer"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "RuleCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a rule from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "rule_id": {
         "title": "Rule Id",
         "type": "string"
        }
       },
       "required": [
        "rule_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a rule details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "rule_id": {
         "title": "Rule Id",
         "type": "string"
        }
       },
       "required": [
        "rule_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "direction": "egress",
        "ethertype": "IPv4",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "port_range_max": 8028,
        "port_range_min": 8028,
        "protocol": "tcp",
        "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "remote_ip_prefix": "100.94.0.0/24",
        "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "status": "created"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "direction": {
         "nullable": true,
         "title": "Direction",
         "type": "string"
        },
        "error": {
         "nullable": true,
         "title": "Error",
         "type": "string"
        },
        "ethertype": {
         "nullable": true,
         "title": "Ethertype",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "port_range_max": {
         "nullable": true,
         "title": "Port Range Max",
         "type": "integer"
        },
        "port_range_min": {
         "nullable": true,
         "title": "Port Range Min",
         "type": "integer"
        },
        "protocol": {
         "nullable": true,
         "title": "Protocol",
         "type": "string"
        },
        "remote_group_id": {
         "nullable": true,
         "title": "Remote Group Id",
         "type": "string"
        },
        "remote_ip_prefix": {
         "nullable": true,
         "title": "Remote Ip Prefix",
         "type": "string"
        },
        "security_group_id": {
         "nullable": true,
         "title": "Security Group Id",
         "type": "string"
        },
        "status": {
         "enum": [
          "created",
          "pending",
          "error"
         ],
         "title": "RuleStatus",
         "type": "string"
        }
       },
       "required": [
        "status"
       ],
       "title": "RuleResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of rules for a provided security_group_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "security_group_id": {
         "title": "Security Group Id",
         "type": "string"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "rules": [
         {
          "created_at": "2022-01-01 00:00:00",
          "direction": "egress",
          "ethertype": "IPv4",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "port_range_max": 8028,
          "port_range_min": 8028,
          "protocol": "tcp",
          "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "remote_ip_prefix": "100.94.0.0/24",
          "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ]
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "rules": {
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "direction": "egress",
           "ethertype": "IPv4",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "port_range_max": 8028,
           "port_range_min": 8028,
           "protocol": "tcp",
           "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "remote_ip_prefix": "100.94.0.0/24",
           "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "status": "created"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "direction": {
            "nullable": true,
            "title": "Direction",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "ethertype": {
            "nullable": true,
            "title": "Ethertype",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "port_range_max": {
            "nullable": true,
            "title": "Port Range Max",
            "type": "integer"
           },
           "port_range_min": {
            "nullable": true,
            "title": "Port Range Min",
            "type": "integer"
           },
           "protocol": {
            "nullable": true,
            "title": "Protocol",
            "type": "string"
           },
           "remote_group_id": {
            "nullable": true,
            "title": "Remote Group Id",
            "type": "string"
           },
           "remote_ip_prefix": {
            "nullable": true,
            "title": "Remote Ip Prefix",
            "type": "string"
           },
           "security_group_id": {
            "nullable": true,
            "title": "Security Group Id",
            "type": "string"
           },
           "status": {
            "enum": [
             "created",
             "pending",
             "error"
            ],
            "title": "RuleStatus",
            "type": "string"
           }
          },
          "required": [
           "status"
          ],
          "title": "RuleResponse",
          "type": "object"
         },
         "title": "Rules",
         "type": "array"
        }
       },
       "required": [
        "rules"
       ],
       "title": "RulesList",
       "type": "object"
      },
      "version": "1.101.2"
     }
    ],
    "description": "VPC Rules",
    "isInternal": false,
    "name": "rule",
    "version": "1.101.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Security Group",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "name": {
         "maxLength": 100,
         "minLength": 5,
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "validate_quota": {
         "default": true,
         "title": "validateQuota",
         "type": "boolean"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "SecurityGroupCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Security Group Default",
      "isInternal": true,
      "name": "create-default",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "SecurityGroupCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a security group from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "security_group_id": {
         "title": "Security Group Id",
         "type": "string"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete all security groups from the provided tenant_id",
      "isInternal": true,
      "name": "delete-all",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "deleted_security_groups": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ]
       },
       "properties": {
        "deleted_security_groups": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Security Groups",
         "type": "array"
        }
       },
       "title": "SecurityGroupDeletedAllResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a security group details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "security_group_id": {
         "title": "Security Group Id",
         "type": "string"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "security group description",
        "error": "null",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "name": "security_group_name",
        "rules": [
         {
          "created_at": "2022-01-01 00:00:00",
          "direction": "egress",
          "error": "null",
          "ethertype": "IPv4",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "port_range_max": 8028,
          "port_range_min": 8028,
          "protocol": "tcp",
          "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "remote_ip_prefix": "100.94.0.0/24",
          "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "status": "created"
         }
        ],
        "status": "created",
        "updated": "2022-01-01 00:00:00",
        "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "error": {
         "nullable": true,
         "title": "Error",
         "type": "string"
        },
        "external_id": {
         "nullable": true,
         "title": "External Id",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "is_default": {
         "nullable": true,
         "title": "Is Default",
         "type": "boolean"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "project_type": {
         "nullable": true,
         "title": "Project Type",
         "type": "string"
        },
        "rules": {
         "default": [],
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "direction": "egress",
           "error": "null",
           "ethertype": "IPv4",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "port_range_max": 8028,
           "port_range_min": 8028,
           "protocol": "tcp",
           "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "remote_ip_prefix": "100.94.0.0/24",
           "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "status": "created"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "direction": {
            "nullable": true,
            "title": "Direction",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "ethertype": {
            "nullable": true,
            "title": "Ethertype",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "port_range_max": {
            "nullable": true,
            "title": "Port Range Max",
            "type": "integer"
           },
           "port_range_min": {
            "nullable": true,
            "title": "Port Range Min",
            "type": "integer"
           },
           "protocol": {
            "nullable": true,
            "title": "Protocol",
            "type": "string"
           },
           "remote_group_id": {
            "nullable": true,
            "title": "Remote Group Id",
            "type": "string"
           },
           "remote_ip_prefix": {
            "nullable": true,
            "title": "Remote Ip Prefix",
            "type": "string"
           },
           "security_group_id": {
            "nullable": true,
            "title": "Security Group Id",
            "type": "string"
           },
           "status": {
            "enum": [
             "created",
             "pending",
             "error"
            ],
            "title": "RuleStatus",
            "type": "string"
           }
          },
          "title": "RuleResponseEvent",
          "type": "object"
         },
         "nullable": true,
         "title": "Rules",
         "type": "array"
        },
        "status": {
         "enum": [
          "created",
          "pending",
          "error"
         ],
         "title": "SecurityGroupStatus",
         "type": "string"
        },
        "tenant_id": {
         "nullable": true,
         "title": "Tenant Id",
         "type": "string"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        },
        "vpc_id": {
         "nullable": true,
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "status"
       ],
       "title": "SecurityGroupDetailEvent",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of security groups for a provided tenant_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "security_groups": [
         {
          "created_at": "2022-01-01 00:00:00",
          "description": "security group description",
          "error": "null",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "security_group_name",
          "status": "created",
          "updated": "2022-01-01 00:00:00",
          "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ]
       },
       "properties": {
        "security_groups": {
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "description": "security group description",
           "error": "null",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "is_default": true,
           "name": "security_group_name",
           "project_type": "default",
           "status": "created",
           "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "updated": "2022-01-01 00:00:00",
           "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "is_default": {
            "nullable": true,
            "title": "Is Default",
            "type": "boolean"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "project_type": {
            "nullable": true,
            "title": "Project Type",
            "type": "string"
           },
           "status": {
            "enum": [
             "created",
             "pending",
             "error"
            ],
            "title": "SecurityGroupStatus",
            "type": "string"
           },
           "tenant_id": {
            "nullable": true,
            "title": "Tenant Id",
            "type": "string"
           },
           "updated": {
            "format": "date-time",
            "nullable": true,
            "title": "Updated",
            "type": "string"
           },
           "vpc_id": {
            "nullable": true,
            "title": "Vpc Id",
            "type": "string"
           }
          },
          "required": [
           "status"
          ],
          "title": "SecurityGroupResponseEvent",
          "type": "object"
         },
         "title": "Security Groups",
         "type": "array"
        }
       },
       "required": [
        "security_groups"
       ],
       "title": "SecurityGroupListEvent",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Rule",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "direction": {
           "nullable": true,
           "title": "Direction",
           "type": "string"
          },
          "ethertype": {
           "nullable": true,
           "title": "Ethertype",
           "type": "string"
          },
          "port_range_max": {
           "nullable": true,
           "title": "Port Range Max",
           "type": "integer"
          },
          "port_range_min": {
           "nullable": true,
           "title": "Port Range Min",
           "type": "integer"
          },
          "protocol": {
           "nullable": true,
           "title": "Protocol",
           "type": "string"
          },
          "remote_group_id": {
           "nullable": true,
           "title": "Remote Group Id",
           "type": "string"
          },
          "remote_ip_prefix": {
           "nullable": true,
           "title": "Remote Ip Prefix",
           "type": "string"
          },
          "security_group_id": {
           "title": "Security Group Id",
           "type": "string"
          },
          "validate_quota": {
           "default": true,
           "title": "validateQuota",
           "type": "boolean"
          },
          "wait": {
           "default": true,
           "nullable": true,
           "title": "Wait",
           "type": "boolean"
          },
          "wait_timeout": {
           "default": 120,
           "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
           "nullable": true,
           "title": "waitTimeout",
           "type": "integer"
          }
         },
         "required": [
          "security_group_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "RuleCreateResponse",
         "type": "object"
        },
        "version": "1.101.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of rules for a provided security_group_id",
        "isInternal": true,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "security_group_id": {
           "title": "Security Group Id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "rules": [
           {
            "created_at": "2022-01-01 00:00:00",
            "direction": "egress",
            "ethertype": "IPv4",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "port_range_max": 8028,
            "port_range_min": 8028,
            "protocol": "tcp",
            "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "remote_ip_prefix": "100.94.0.0/24",
            "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          ]
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "rules": {
           "items": {
            "example": {
             "created_at": "2022-01-01 00:00:00",
             "direction": "egress",
             "ethertype": "IPv4",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "port_range_max": 8028,
             "port_range_min": 8028,
             "protocol": "tcp",
             "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "remote_ip_prefix": "100.94.0.0/24",
             "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "status": "created"
            },
            "properties": {
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "direction": {
              "nullable": true,
              "title": "Direction",
              "type": "string"
             },
             "error": {
              "nullable": true,
              "title": "Error",
              "type": "string"
             },
             "ethertype": {
              "nullable": true,
              "title": "Ethertype",
              "type": "string"
             },
             "id": {
              "nullable": true,
              "title": "Id",
              "type": "string"
             },
             "port_range_max": {
              "nullable": true,
              "title": "Port Range Max",
              "type": "integer"
             },
             "port_range_min": {
              "nullable": true,
              "title": "Port Range Min",
              "type": "integer"
             },
             "protocol": {
              "nullable": true,
              "title": "Protocol",
              "type": "string"
             },
             "remote_group_id": {
              "nullable": true,
              "title": "Remote Group Id",
              "type": "string"
             },
             "remote_ip_prefix": {
              "nullable": true,
              "title": "Remote Ip Prefix",
              "type": "string"
             },
             "security_group_id": {
              "nullable": true,
              "title": "Security Group Id",
              "type": "string"
             },
             "status": {
              "enum": [
               "created",
               "pending",
               "error"
              ],
              "title": "RuleStatus",
              "type": "string"
             }
            },
            "required": [
             "status"
            ],
            "title": "RuleResponse",
            "type": "object"
           },
           "title": "Rules",
           "type": "array"
          }
         },
         "required": [
          "rules"
         ],
         "title": "RulesList",
         "type": "object"
        },
        "version": "1.101.2"
       }
      ],
      "description": "VPC Security Groups | rules",
      "isInternal": true,
      "name": "rules",
      "version": "1.101.2"
     }
    ],
    "description": "VPC Security Groups",
    "isInternal": false,
    "name": "security_group",
    "version": "1.101.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Subnet",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "cidr_block": {
         "nullable": true,
         "title": "Cidr Block",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "dns_nameservers": {
         "default": [],
         "items": {
          "format": "ipvanyaddress",
          "type": "string"
         },
         "title": "Dns Nameservers",
         "type": "array"
        },
        "ip_version": {
         "title": "Ip Version",
         "type": "integer"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "vpc_id": {
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "ip_version",
        "name",
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "SubnetCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a subnet from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "subnet_id": {
         "title": "Subnet Id",
         "type": "string"
        }
       },
       "required": [
        "subnet_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a subnet details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "subnet_id": {
         "title": "Subnet Id",
         "type": "string"
        }
       },
       "required": [
        "subnet_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "cidr_block": "172.20.0.0/24",
        "created_at": "2022-01-01 00:00:00",
        "description": "vpc description",
        "dhcp_pools": [
         {
          "end": "172.50.0.254",
          "start": "172.50.0.2"
         }
        ],
        "dns_nameservers": [
         "8.8.8.8"
        ],
        "gateway_ip": "172.50.0.1",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "ip_version": "4",
        "name": "vpc_name",
        "updated": "2022-01-01 00:00:00",
        "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "cidr_block": {
         "title": "Cidr Block",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "dhcp_pools": {
         "items": {
          "properties": {
           "end": {
            "title": "End",
            "type": "string"
           },
           "start": {
            "title": "Start",
            "type": "string"
           }
          },
          "required": [
           "start",
           "end"
          ],
          "title": "DhcpPoolStr",
          "type": "object"
         },
         "title": "Dhcp Pools",
         "type": "array"
        },
        "dns_nameservers": {
         "items": {
          "type": "string"
         },
         "title": "Dns Nameservers",
         "type": "array"
        },
        "gateway_ip": {
         "title": "Gateway Ip",
         "type": "string"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "ip_version": {
         "title": "Ip Version",
         "type": "string"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        },
        "vpc_id": {
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "id",
        "vpc_id",
        "cidr_block",
        "ip_version",
        "gateway_ip",
        "dns_nameservers",
        "dhcp_pools"
       ],
       "title": "SubnetResponseDetail",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of subnets for a provided vpc_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "vpc_id": {
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "subnets": [
         {
          "cidr_block": "172.20.0.0/24",
          "created_at": "2022-01-01 00:00:00",
          "description": "vpc description",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "ip_version": "4",
          "name": "vpc_name",
          "updated": "2022-01-01 00:00:00",
          "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ]
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "subnets": {
         "default": [],
         "items": {
          "example": {
           "cidr_block": "172.20.0.0/24",
           "created_at": "2022-01-01 00:00:00",
           "description": "vpc description",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "ip_version": "4",
           "name": "vpc_name",
           "updated": "2022-01-01 00:00:00",
           "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "cidr_block": {
            "title": "Cidr Block",
            "type": "string"
           },
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "ip_version": {
            "title": "Ip Version",
            "type": "string"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "updated": {
            "format": "date-time",
            "nullable": true,
            "title": "Updated",
            "type": "string"
           },
           "vpc_id": {
            "title": "Vpc Id",
            "type": "string"
           }
          },
          "required": [
           "id",
           "vpc_id",
           "cidr_block",
           "ip_version"
          ],
          "title": "SubnetResponse",
          "type": "object"
         },
         "title": "Subnets",
         "type": "array"
        }
       },
       "title": "SubnetsResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Update a subnet from the provided tenant_id",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "dns_nameservers": {
         "default": [],
         "items": {
          "format": "ipvanyaddress",
          "type": "string"
         },
         "title": "Dns Nameservers",
         "type": "array"
        },
        "subnet_id": {
         "title": "Subnet Id",
         "type": "string"
        }
       },
       "required": [
        "subnet_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "SubnetResponseId",
       "type": "object"
      },
      "version": "1.101.2"
     }
    ],
    "description": "VPC Subnets",
    "isInternal": false,
    "name": "subnets",
    "version": "1.101.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a VPC",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        }
       },
       "title": "VpcCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "",
      "isInternal": true,
      "name": "create-default",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        }
       },
       "title": "VpcCreateResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a VPC from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "vpc_id": {
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "",
      "isInternal": true,
      "name": "delete-all",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "deleted_networks": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_routers": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_security_groups": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_subnet_pools": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_vpcs": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ]
       },
       "properties": {
        "deleted_networks": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Networks",
         "type": "array"
        },
        "deleted_routers": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Routers",
         "type": "array"
        },
        "deleted_security_groups": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Security Groups",
         "type": "array"
        },
        "deleted_subnet_pools": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Subnet Pools",
         "type": "array"
        },
        "deleted_vpcs": {
         "default": [],
         "items": {},
         "nullable": true,
         "title": "Deleted Vpcs",
         "type": "array"
        }
       },
       "title": "VpcDeletedAllResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a VPC details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "vpc_id": {
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "DESCRIPTION",
        "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "is_default": true,
        "name": "vpc_name",
        "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "project_type": "default",
        "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "security_groups": [
         "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ],
        "subnets": [
         "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ],
        "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "updated": "2022-01-01 00:00:00"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "external_network": {
         "nullable": true,
         "title": "External Network",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "is_default": {
         "nullable": true,
         "title": "Is Default",
         "type": "boolean"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "network_id": {
         "nullable": true,
         "title": "Network Id",
         "type": "string"
        },
        "router_id": {
         "nullable": true,
         "title": "Router Id",
         "type": "string"
        },
        "security_groups": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "Security Groups",
         "type": "array"
        },
        "subnets": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Subnets",
         "type": "array"
        },
        "tenant_id": {
         "nullable": true,
         "title": "Tenant Id",
         "type": "string"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        }
       },
       "title": "VpcResponse",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of VPCs for a provided tenant_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "vpcs": [
         {
          "created_at": "2022-01-01 00:00:00",
          "description": "DESCRIPTION",
          "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "is_default": true,
          "name": "vpc_name",
          "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "project_type": "default",
          "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "security_groups": [
           "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          ],
          "subnets": [
           "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          ],
          "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "updated": "2022-01-01 00:00:00"
         }
        ]
       },
       "properties": {
        "vpcs": {
         "default": [],
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "description": "DESCRIPTION",
           "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "is_default": true,
           "name": "vpc_name",
           "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "project_type": "default",
           "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "security_groups": [
            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           ],
           "subnets": [
            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           ],
           "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "updated": "2022-01-01 00:00:00"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "external_network": {
            "nullable": true,
            "title": "External Network",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "is_default": {
            "nullable": true,
            "title": "Is Default",
            "type": "boolean"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "network_id": {
            "nullable": true,
            "title": "Network Id",
            "type": "string"
           },
           "router_id": {
            "nullable": true,
            "title": "Router Id",
            "type": "string"
           },
           "security_groups": {
            "default": [],
            "items": {
             "type": "string"
            },
            "title": "Security Groups",
            "type": "array"
           },
           "subnets": {
            "default": [],
            "items": {
             "type": "string"
            },
            "nullable": true,
            "title": "Subnets",
            "type": "array"
           },
           "tenant_id": {
            "nullable": true,
            "title": "Tenant Id",
            "type": "string"
           },
           "updated": {
            "format": "date-time",
            "nullable": true,
            "title": "Updated",
            "type": "string"
           }
          },
          "title": "VpcResponse",
          "type": "object"
         },
         "nullable": true,
         "title": "Vpcs",
         "type": "array"
        }
       },
       "title": "VpcResponseList",
       "type": "object"
      },
      "version": "1.101.2"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Port",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "has_pip": {
           "default": true,
           "nullable": true,
           "title": "Has Pip",
           "type": "boolean"
          },
          "has_sg": {
           "default": true,
           "nullable": true,
           "title": "Has Sg",
           "type": "boolean"
          },
          "name": {
           "maxLength": 100,
           "minLength": 5,
           "title": "Name",
           "type": "string"
          },
          "security_groups_id": {
           "default": [],
           "items": {
            "type": "string"
           },
           "nullable": true,
           "title": "Security Groups Id",
           "type": "array"
          },
          "subnets": {
           "default": [],
           "items": {
            "type": "string"
           },
           "nullable": true,
           "title": "Subnets",
           "type": "array"
          },
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "name",
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "PortCreateResponse",
         "type": "object"
        },
        "version": "1.101.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "List VPC ports",
        "isInternal": false,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "_limit": {
           "default": 10,
           "minimum": 1,
           "title": "Items Per Page",
           "type": "integer"
          },
          "_offset": {
           "default": 1,
           "minimum": 1,
           "title": "Page Number",
           "type": "integer"
          },
          "detailed": {
           "default": true,
           "title": "Detailed",
           "type": "boolean"
          },
          "port_id_list": {
           "default": [],
           "items": {
            "type": "string"
           },
           "title": "Port Id List",
           "type": "array"
          },
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "example": {
            "ports": [
             {
              "created_at": "2022-01-01 00:00:00",
              "description": "port description",
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "ip_address": [
               {
                "ip_address": "172.20.0.2",
                "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               }
              ],
              "is_admin_state_up": true,
              "is_port_security_enabled": true,
              "name": "port_name",
              "public_ip": [
               {
                "public_ip": "100.94.5.31",
                "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               }
              ],
              "security_groups": [
               "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              ],
              "updated": "2022-01-01 00:00:00"
             }
            ]
           },
           "properties": {
            "ports": {
             "items": {
              "example": {
               "created_at": "2022-01-01 00:00:00",
               "description": "port description",
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "ip_address": [
                {
                 "ip_address": "172.20.0.2",
                 "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
               ],
               "is_admin_state_up": true,
               "is_port_security_enabled": true,
               "name": "port_name",
               "public_ip": [
                {
                 "public_ip": "100.94.5.31",
                 "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
               ],
               "security_groups": [
                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               ],
               "updated": "2022-01-01 00:00:00",
               "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "properties": {
               "created_at": {
                "format": "date-time",
                "nullable": true,
                "title": "Created At",
                "type": "string"
               },
               "description": {
                "nullable": true,
                "title": "Description",
                "type": "string"
               },
               "id": {
                "nullable": true,
                "title": "Id",
                "type": "string"
               },
               "ip_address": {
                "default": [],
                "items": {
                 "example": {
                  "ip_address": "172.20.0.2",
                  "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                 },
                 "properties": {
                  "ip_address": {
                   "title": "Ip Address",
                   "type": "string"
                  },
                  "subnet_id": {
                   "title": "Subnet Id",
                   "type": "string"
                  }
                 },
                 "required": [
                  "ip_address",
                  "subnet_id"
                 ],
                 "title": "IpAddress",
                 "type": "object"
                },
                "title": "Ip Address",
                "type": "array"
               },
               "is_admin_state_up": {
                "nullable": true,
                "title": "Is Admin State Up",
                "type": "boolean"
               },
               "is_port_security_enabled": {
                "nullable": true,
                "title": "Is Port Security Enabled",
                "type": "boolean"
               },
               "name": {
                "nullable": true,
                "title": "Name",
                "type": "string"
               },
               "public_ip": {
                "default": [],
                "items": {
                 "example": {
                  "public_ip": "100.94.5.31",
                  "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                 },
                 "properties": {
                  "public_ip": {
                   "nullable": true,
                   "title": "Public Ip",
                   "type": "string"
                  },
                  "public_ip_id": {
                   "nullable": true,
                   "title": "Public Ip Id",
                   "type": "string"
                  }
                 },
                 "title": "PublicIpResponsePort",
                 "type": "object"
                },
                "nullable": true,
                "title": "Public Ip",
                "type": "array"
               },
               "security_groups": {
                "default": [],
                "items": {
                 "type": "string"
                },
                "title": "Security Groups",
                "type": "array"
               },
               "updated": {
                "format": "date-time",
                "nullable": true,
                "title": "Updated",
                "type": "string"
               },
               "vpc_id": {
                "nullable": true,
                "title": "Vpc Id",
                "type": "string"
               }
              },
              "title": "PortResponse",
              "type": "object"
             },
             "title": "Ports",
             "type": "array"
            }
           },
           "required": [
            "ports"
           ],
           "title": "PortsList",
           "type": "object"
          },
          {
           "example": {
            "ports": [
             {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "ip_address": [
               {
                "ip_address": "172.20.0.2",
                "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               }
              ]
             }
            ]
           },
           "properties": {
            "ports_simplified": {
             "items": {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "ip_address": [
                {
                 "ip_address": "172.20.0.2",
                 "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
               ]
              },
              "properties": {
               "id": {
                "nullable": true,
                "title": "Id",
                "type": "string"
               },
               "ip_address": {
                "default": [],
                "items": {
                 "example": {
                  "ip_address": "172.20.0.2",
                  "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                 },
                 "properties": {
                  "ip_address": {
                   "title": "Ip Address",
                   "type": "string"
                  },
                  "subnet_id": {
                   "title": "Subnet Id",
                   "type": "string"
                  }
                 },
                 "required": [
                  "ip_address",
                  "subnet_id"
                 ],
                 "title": "IpAddress",
                 "type": "object"
                },
                "title": "Ip Address",
                "type": "array"
               }
              },
              "title": "PortSimpleResponse",
              "type": "object"
             },
             "title": "Ports Simplified",
             "type": "array"
            }
           },
           "required": [
            "ports_simplified"
           ],
           "title": "PortsListSimplified",
           "type": "object"
          }
         ],
         "title": "Response Listports",
         "type": "object"
        },
        "version": "1.101.2"
       }
      ],
      "description": "Virtual Private Cloud (VPC) | ports",
      "isInternal": false,
      "name": "ports",
      "version": "1.101.2"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Public IP",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "description": {
           "nullable": true,
           "title": "Description",
           "type": "string"
          },
          "validate_quota": {
           "default": true,
           "title": "validateQuota",
           "type": "boolean"
          },
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          },
          "wait": {
           "default": true,
           "title": "wait",
           "type": "boolean"
          },
          "wait_timeout": {
           "default": 120,
           "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
           "nullable": true,
           "title": "waitTimeout",
           "type": "integer"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "PublicIpCreateResponse",
         "type": "object"
        },
        "version": "1.101.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of Public IPs for a provided vpc_id",
        "isInternal": false,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "public_ips": [
           {
            "created_at": "2022-01-01 00:00:00",
            "description": "port description",
            "error": "error",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "port_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "public_ip": "100.94.5.31",
            "status": "created",
            "updated": "2022-01-01 00:00:00",
            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          ]
         },
         "properties": {
          "public_ips": {
           "items": {
            "example": {
             "created_at": "2022-01-01 00:00:00",
             "description": "port description",
             "error": "error",
             "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "public_ip": "100.94.5.31",
             "status": "created",
             "updated": "2022-01-01 00:00:00",
             "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "properties": {
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "description": {
              "nullable": true,
              "title": "Description",
              "type": "string"
             },
             "error": {
              "nullable": true,
              "title": "Error",
              "type": "string"
             },
             "external_id": {
              "nullable": true,
              "title": "External Id",
              "type": "string"
             },
             "id": {
              "nullable": true,
              "title": "Id",
              "type": "string"
             },
             "port_id": {
              "nullable": true,
              "title": "Port Id",
              "type": "string"
             },
             "public_ip": {
              "nullable": true,
              "title": "Public Ip",
              "type": "string"
             },
             "status": {
              "nullable": true,
              "title": "Status",
              "type": "string"
             },
             "updated": {
              "format": "date-time",
              "nullable": true,
              "title": "Updated",
              "type": "string"
             },
             "vpc_id": {
              "nullable": true,
              "title": "Vpc Id",
              "type": "string"
             }
            },
            "title": "PublicIpDb",
            "type": "object"
           },
           "title": "Public Ips",
           "type": "array"
          }
         },
         "required": [
          "public_ips"
         ],
         "title": "PublicIpsList",
         "type": "object"
        },
        "version": "1.101.2"
       }
      ],
      "description": "Virtual Private Cloud (VPC) | public-ips",
      "isInternal": false,
      "name": "public-ips",
      "version": "1.101.2"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Security Group",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "description": {
           "nullable": true,
           "title": "Description",
           "type": "string"
          },
          "name": {
           "maxLength": 100,
           "minLength": 5,
           "nullable": true,
           "title": "Name",
           "type": "string"
          },
          "vpc_id": {
           "nullable": true,
           "title": "Vpc Id",
           "type": "string"
          },
          "wait": {
           "default": true,
           "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
           "nullable": true,
           "title": "wait",
           "type": "boolean"
          },
          "wait_timeout": {
           "default": 120,
           "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
           "nullable": true,
           "title": "waitTimeout",
           "type": "integer"
          }
         },
         "required": [
          "name",
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "SecurityGroupCreateResponse",
         "type": "object"
        },
        "version": "1.101.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of security groups for a provided vpc_id",
        "isInternal": true,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "security_groups": [
           {
            "created_at": "2022-01-01 00:00:00",
            "description": "security group description",
            "error": "null",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "security_group_name",
            "status": "created",
            "updated": "2022-01-01 00:00:00",
            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          ]
         },
         "properties": {
          "security_groups": {
           "items": {
            "example": {
             "created_at": "2022-01-01 00:00:00",
             "description": "security group description",
             "error": "null",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "is_default": true,
             "name": "security_group_name",
             "project_type": "default",
             "status": "created",
             "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "updated": "2022-01-01 00:00:00",
             "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "properties": {
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "description": {
              "nullable": true,
              "title": "Description",
              "type": "string"
             },
             "error": {
              "nullable": true,
              "title": "Error",
              "type": "string"
             },
             "id": {
              "nullable": true,
              "title": "Id",
              "type": "string"
             },
             "is_default": {
              "nullable": true,
              "title": "Is Default",
              "type": "boolean"
             },
             "name": {
              "nullable": true,
              "title": "Name",
              "type": "string"
             },
             "project_type": {
              "nullable": true,
              "title": "Project Type",
              "type": "string"
             },
             "status": {
              "enum": [
               "created",
               "pending",
               "error"
              ],
              "title": "SecurityGroupStatus",
              "type": "string"
             },
             "tenant_id": {
              "nullable": true,
              "title": "Tenant Id",
              "type": "string"
             },
             "updated": {
              "format": "date-time",
              "nullable": true,
              "title": "Updated",
              "type": "string"
             },
             "vpc_id": {
              "nullable": true,
              "title": "Vpc Id",
              "type": "string"
             }
            },
            "required": [
             "status"
            ],
            "title": "SecurityGroupResponseEvent",
            "type": "object"
           },
           "title": "Security Groups",
           "type": "array"
          }
         },
         "required": [
          "security_groups"
         ],
         "title": "SecurityGroupListEvent",
         "type": "object"
        },
        "version": "1.101.2"
       }
      ],
      "description": "Virtual Private Cloud (VPC) | security-groups",
      "isInternal": true,
      "name": "security-groups",
      "version": "1.101.2"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Subnet",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "cidr_block": {
           "nullable": true,
           "title": "Cidr Block",
           "type": "string"
          },
          "description": {
           "nullable": true,
           "title": "Description",
           "type": "string"
          },
          "dns_nameservers": {
           "default": [],
           "items": {
            "format": "ipvanyaddress",
            "type": "string"
           },
           "title": "Dns Nameservers",
           "type": "array"
          },
          "ip_version": {
           "title": "Ip Version",
           "type": "integer"
          },
          "name": {
           "title": "Name",
           "type": "string"
          },
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "ip_version",
          "name",
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "SubnetCreateResponse",
         "type": "object"
        },
        "version": "1.101.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of subnets for a provided vpc_id",
        "isInternal": true,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "subnets": [
           {
            "cidr_block": "172.20.0.0/24",
            "created_at": "2022-01-01 00:00:00",
            "description": "vpc description",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "ip_version": "4",
            "name": "vpc_name",
            "updated": "2022-01-01 00:00:00",
            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          ]
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "subnets": {
           "default": [],
           "items": {
            "example": {
             "cidr_block": "172.20.0.0/24",
             "created_at": "2022-01-01 00:00:00",
             "description": "vpc description",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "ip_version": "4",
             "name": "vpc_name",
             "updated": "2022-01-01 00:00:00",
             "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "properties": {
             "cidr_block": {
              "title": "Cidr Block",
              "type": "string"
             },
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "description": {
              "nullable": true,
              "title": "Description",
              "type": "string"
             },
             "id": {
              "title": "Id",
              "type": "string"
             },
             "ip_version": {
              "title": "Ip Version",
              "type": "string"
             },
             "name": {
              "nullable": true,
              "title": "Name",
              "type": "string"
             },
             "updated": {
              "format": "date-time",
              "nullable": true,
              "title": "Updated",
              "type": "string"
             },
             "vpc_id": {
              "title": "Vpc Id",
              "type": "string"
             }
            },
            "required": [
             "id",
             "vpc_id",
             "cidr_block",
             "ip_version"
            ],
            "title": "SubnetResponse",
            "type": "object"
           },
           "title": "Subnets",
           "type": "array"
          }
         },
         "title": "SubnetsResponse",
         "type": "object"
        },
        "version": "1.101.2"
       }
      ],
      "description": "Virtual Private Cloud (VPC) | subnets",
      "isInternal": true,
      "name": "subnets",
      "version": "1.101.2"
     }
    ],
    "description": "Virtual Private Cloud (VPC)",
    "isInternal": false,
    "name": "vpc",
    "version": "1.101.2"
   },
   {
    "children": [],
    "description": "",
    "isInternal": true,
    "name": "xaas_port",
    "version": "1.101.2"
   },
   {
    "children": [],
    "description": "",
    "isInternal": true,
    "name": "xaas_rule",
    "version": "1.101.2"
   },
   {
    "children": [],
    "description": "",
    "isInternal": true,
    "name": "xaas_security_group",
    "version": "1.101.2"
   },
   {
    "children": [],
    "description": "",
    "isInternal": true,
    "name": "xaas_subnetpools",
    "version": "1.101.2"
   },
   {
    "children": [],
    "description": "",
    "isInternal": true,
    "name": "xaas_subnets",
    "version": "1.101.2"
   },
   {
    "children": [],
    "description": "",
    "isInternal": true,
    "name": "xaas_vpc",
    "version": "1.101.2"
   }
  ],
  "description": "APIs referentes ao produto de Network",
  "isInternal": false,
  "name": "network",
  "version": "1.101.2"
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Buckets are \"containers\" that are able to store various Objects inside",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "properties": {
        "acl": {
         "description": "ACL Rules for the bucket",
         "type": "string"
        },
        "location": {
         "default": "br-ne-1",
         "description": "Location constraint for the bucket",
         "type": "string"
        },
        "name": {
         "description": "Name of the bucket to be created",
         "maxLength": 63,
         "minLength": 3,
         "type": "string"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete an existing Bucket",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "bucket": {
         "description": "Name of the bucket to be deleted",
         "maxLength": 63,
         "minLength": 3,
         "type": "string"
        }
       },
       "required": [
        "bucket"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "List all existing Buckets",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "Buckets": {
         "items": {
          "properties": {
           "CreationDate": {
            "type": "string"
           },
           "Name": {
            "type": "string"
           }
          },
          "required": [
           "CreationDate",
           "Name"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "Owner": {
         "properties": {
          "DisplayName": {
           "type": "string"
          },
          "ID": {
           "type": "string"
          }
         },
         "required": [
          "DisplayName",
          "ID"
         ],
         "type": "object"
        }
       },
       "required": [
        "Buckets",
        "Owner"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Bucket operations for Object Storage API",
    "isInternal": false,
    "name": "buckets",
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Copy an object from a bucket to another",
      "isInternal": false,
      "name": "copy",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket with desired filename",
         "example": "s3://bucket2/dir/file.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Path of the object to be copied",
         "example": "s3://bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Copy all objects from a bucket",
      "isInternal": false,
      "name": "copy-all",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "s3://bucket2/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects to be copied",
         "example": "s3://bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "s3://bucket2/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects to be copied",
         "example": "s3://bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete an object from a bucket",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to be deleted",
         "example": "s3://bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete all objects from a bucket",
      "isInternal": false,
      "name": "delete-all",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to delete",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "bucket": {
         "description": "Name of the bucket to delete objects from",
         "maxLength": 63,
         "minLength": 3,
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "bucket"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Download an object from a bucket",
      "isInternal": false,
      "name": "download",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Name of the file to be saved",
         "example": "file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "src": {
         "description": "Path of the object to be downloaded",
         "example": "s3://bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Download all objects from a bucket",
      "isInternal": false,
      "name": "download-all",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path to save files",
         "example": "path/to/folder",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects to be downloaded",
         "example": "s3://mybucket",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Get object metadata",
      "isInternal": false,
      "name": "head",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to be get metadata from",
         "example": "s3://bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "List all objects from a bucket",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "properties": {
        "continuation-token": {
         "description": "Token of result page to continue from",
         "type": "string"
        },
        "dst": {
         "description": "Path of the bucket to list objects from",
         "example": "s3://bucket1",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "max-items": {
         "default": 1000,
         "description": "Limit of items to be listed",
         "example": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "recursive": {
         "default": false,
         "description": "List folders and subfolders",
         "type": "boolean"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "CommonPrefixes": {
         "items": {
          "properties": {
           "Path": {
            "type": "string"
           }
          },
          "required": [
           "Path"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "Contents": {
         "items": {
          "properties": {
           "ContentSize": {
            "type": "integer"
           },
           "Key": {
            "type": "string"
           },
           "LastModified": {
            "type": "string"
           }
          },
          "required": [
           "Key",
           "LastModified",
           "ContentSize"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "Contents",
        "CommonPrefixes"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "This command uploads any file from the source to the destination if it's not present or has a different size. Additionally any file in the destination not present on the source is deleted.",
      "isInternal": false,
      "name": "sync",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to delete",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "delete": {
         "default": false,
         "description": "Deletes any item at the destination not present on the source",
         "type": "boolean"
        },
        "dst": {
         "description": "Full destination path to sync with the source path",
         "example": "s3://my-bucket/dir/",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source path to sync the remote with",
         "example": "./",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Upload a file to a bucket",
      "isInternal": false,
      "name": "upload",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket with desired filename",
         "example": "s3://my-bucket/dir/file.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source file path to be uploaded",
         "example": "./file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "file": {
         "type": "string"
        },
        "uri": {
         "type": "string"
        }
       },
       "required": [
        "file",
        "uri"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Upload a directory to a bucket",
      "isInternal": false,
      "name": "upload-dir",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "s3://my-bucket/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Source directory path for upload",
         "example": "path/to/folder",
         "type": "string",
         "x-contentMediaType": "inode/directory"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dir": {
         "type": "string"
        },
        "uri": {
         "type": "string"
        }
       },
       "required": [
        "dir",
        "uri"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Object operations for Object Storage API",
    "isInternal": false,
    "name": "objects",
    "version": ""
   }
  ],
  "description": "Create and manage Buckets and Objects via the Object Storage API",
  "isInternal": false,
  "name": "object-storage",
  "version": ""
 },
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Creates a new profile",
    "isInternal": false,
    "name": "create",
    "parameters": {
     "properties": {
      "copy": {
       "description": "Name of the profile to copy content from. If this paramater is passed, the new Profile will be pre-populated with the contents of the Profile with the specified name",
       "type": "string"
      },
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "Name": {
       "type": "string"
      }
     },
     "required": [
      "Name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Shows current selected profile. Any changes to auth or config values will only affect this profile",
    "isInternal": false,
    "name": "current",
    "parameters": {
     "type": "object"
    },
    "result": {
     "properties": {
      "Name": {
       "type": "string"
      }
     },
     "required": [
      "Name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Deletes the profile with the specified name",
    "isInternal": false,
    "name": "delete",
    "parameters": {
     "properties": {
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "Name": {
       "type": "string"
      }
     },
     "required": [
      "Name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "List all available profiles",
    "isInternal": false,
    "name": "list",
    "parameters": {
     "type": "object"
    },
    "result": {
     "items": {
      "properties": {
       "Name": {
        "type": "string"
       }
      },
      "required": [
       "Name"
      ],
      "type": "object"
     },
     "type": "array"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Sets profile to be used",
    "isInternal": false,
    "name": "set-current",
    "parameters": {
     "properties": {
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "Name": {
       "type": "string"
      }
     },
     "required": [
      "Name"
     ],
     "type": "object"
    },
    "version": ""
   }
  ],
  "description": "Profiles hold auth and runtime configuration for the MgcSDK, like tokens and log filter settings.\nUsers can create as many profiles as they choose to. Auth and config operations will affect only the\ncurrent profile, so users can alter and switch between profiles without loosing the previous configuration",
  "isInternal": false,
  "name": "profile",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve a list of images allowed for the current tenant which is logged in.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "platform:asc,end_life_at:desc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": "Sort",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "images": [
         {
          "end_life_at": "2022-06-10T18:33:12Z",
          "end_standard_support_at": "2022-06-10T18:33:12Z",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "min_disk": 2,
          "min_ram": 1,
          "min_vcpu": 1,
          "name": "ubuntu 22.10",
          "platform": "linux",
          "release_at": "2022-06-10T18:33:12Z",
          "status": "active",
          "version": "22.10"
         }
        ]
       },
       "properties": {
        "images": {
         "items": {
          "example": {
           "end_life_at": "2022-06-10T18:33:12Z",
           "end_standard_support_at": "2022-06-10T18:33:12Z",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "min_disk": 2,
           "min_ram": 1,
           "min_vcpu": 1,
           "name": "ubuntu 22.10",
           "platform": "linux",
           "release_at": "2022-06-10T18:33:12Z",
           "status": "active",
           "version": "22.10"
          },
          "properties": {
           "end_life_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "End Life At",
            "type": "string"
           },
           "end_standard_support_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "End Standard Support At",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "min_disk": {
            "title": "Min Disk",
            "type": "integer"
           },
           "min_ram": {
            "title": "Min Ram",
            "type": "integer"
           },
           "min_vcpu": {
            "title": "Min Vcpu",
            "type": "integer"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "platform": {
            "nullable": true,
            "title": "Platform",
            "type": "string"
           },
           "release_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "Release At",
            "type": "string"
           },
           "status": {
            "enum": [
             "active",
             "deprecated",
             "deleted"
            ],
            "title": "ImageV1Status",
            "type": "string"
           },
           "version": {
            "nullable": true,
            "title": "Version",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "status",
           "min_vcpu",
           "min_ram",
           "min_disk"
          ],
          "title": "ImageResponseExternalV1",
          "type": "object"
         },
         "title": "Images",
         "type": "array"
        }
       },
       "required": [
        "images"
       ],
       "title": "ListImageExternalV1",
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Operations with images for instances.",
    "isInternal": false,
    "name": "images",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Virtual Machine instance",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "availability_zone": {
         "maxLength": 255,
         "minLength": 1,
         "nullable": true,
         "title": "Availability Zone",
         "type": "string"
        },
        "image": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Image",
         "type": "object"
        },
        "machine_type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "network": {
         "default": {
          "associate_public_ip": true,
          "vpc": {
           "name": "default"
          }
         },
         "example": {
          "associate_public_ip": true,
          "vpc": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         },
         "properties": {
          "associate_public_ip": {
           "default": true,
           "title": "Associate Public Ip",
           "type": "boolean"
          },
          "vpc": {
           "anyOf": [
            {
             "example": {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
             },
             "properties": {
              "id": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "ID",
             "type": "object"
            },
            {
             "example": {
              "name": "some_resource_name"
             },
             "properties": {
              "name": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "name"
             ],
             "title": "Name",
             "type": "object"
            }
           ],
           "default": {
            "name": "default"
           },
           "title": "Vpc",
           "type": "object"
          }
         },
         "type": "object"
        },
        "ssh_key_name": {
         "title": "Ssh Key Name",
         "type": "string"
        },
        "user_data": {
         "maxLength": 65000,
         "minLength": 1,
         "nullable": true,
         "title": "User Data",
         "type": "string"
        }
       },
       "required": [
        "image",
        "machine_type",
        "name",
        "ssh_key_name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "CreateResponse",
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a Virtual Machine instance",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "delete_public_ip": {
         "default": false,
         "title": "Delete Public Ip",
         "type": "boolean"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get a Virtual Machine instance details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type', 'network'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "availability_zone": "br-regiao-1a",
        "created_at": "2022-06-10T18:33:12Z",
        "error": {
         "message": "An error occurred while creating your instance. Please contact our support for assistance.",
         "slug": "create_instance.keypair.not_found"
        },
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "image": {
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "machine_type": {
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "name": "instance name",
        "network": {
         "ports": [
          {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         ]
        },
        "ssh_key_name": "keypair_name_here",
        "state": "done",
        "status": "completed",
        "updated_at": "2022-06-11T18:33:12Z",
        "user_data": "some_base_64_str"
       },
       "properties": {
        "availability_zone": {
         "nullable": true,
         "title": "Availability Zone",
         "type": "string"
        },
        "created_at": {
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "error": {
         "example": {
          "message": "Unauthorized",
          "slug": "Unauthorized"
         },
         "properties": {
          "message": {
           "title": "Message",
           "type": "string"
          },
          "slug": {
           "title": "Slug",
           "type": "string"
          }
         },
         "required": [
          "slug",
          "message"
         ],
         "title": "ErrorMessageV1",
         "type": "object"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "image": {
         "anyOf": [
          {
           "additionalProperties": true,
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ImageInstanceV1Response",
           "type": "object"
          },
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "ubuntu",
            "platform": "linux"
           },
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "platform": {
             "nullable": true,
             "title": "Platform",
             "type": "string"
            }
           },
           "required": [
            "id",
            "name"
           ],
           "title": "ImageExtendResponse",
           "type": "object"
          }
         ],
         "title": "Image",
         "type": "object"
        },
        "machine_type": {
         "anyOf": [
          {
           "additionalProperties": true,
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "InstanceTypeForInstanceV1Response",
           "type": "object"
          },
          {
           "example": {
            "disk": 10,
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "abc.small",
            "ram": 2,
            "vcpus": 2
           },
           "properties": {
            "disk": {
             "title": "Disk",
             "type": "integer"
            },
            "id": {
             "title": "Id",
             "type": "string"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "ram": {
             "title": "Ram",
             "type": "integer"
            },
            "vcpus": {
             "title": "Vcpus",
             "type": "integer"
            }
           },
           "required": [
            "id",
            "name",
            "vcpus",
            "ram",
            "disk"
           ],
           "title": "InstanceTypesExtendResponse",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "network": {
         "anyOf": [
          {
           "properties": {
            "ports": {
             "items": {
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "PortID",
              "type": "object"
             },
             "title": "Ports",
             "type": "array"
            }
           },
           "required": [
            "ports"
           ],
           "title": "NetworkPortsV1",
           "type": "object"
          },
          {
           "properties": {
            "ports": {
             "items": {
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               },
               "ipAddresses": {
                "properties": {
                 "privateIpAddress": {
                  "title": "Privateipaddress",
                  "type": "string"
                 },
                 "publicIpAddress": {
                  "title": "Publicipaddress",
                  "type": "string"
                 }
                },
                "required": [
                 "publicIpAddress",
                 "privateIpAddress"
                ],
                "title": "IpAddressExpand",
                "type": "object"
               },
               "name": {
                "title": "Name",
                "type": "string"
               }
              },
              "required": [
               "id",
               "name",
               "ipAddresses"
              ],
              "title": "PortV1Expand",
              "type": "object"
             },
             "nullable": true,
             "title": "Ports",
             "type": "array"
            },
            "vpc": {
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "id",
              "name"
             ],
             "title": "VpcV1Expand",
             "type": "object"
            }
           },
           "title": "NetworkPortsV1Expand",
           "type": "object"
          }
         ],
         "nullable": true,
         "title": "Network",
         "type": "object"
        },
        "ssh_key_name": {
         "nullable": true,
         "title": "Ssh Key Name",
         "type": "string"
        },
        "state": {
         "title": "State",
         "type": "string"
        },
        "status": {
         "title": "Status",
         "type": "string"
        },
        "updated_at": {
         "example": "2022-01-01T00:00:10Z",
         "nullable": true,
         "title": "Updated At",
         "type": "string"
        },
        "user_data": {
         "nullable": true,
         "title": "User Data",
         "type": "string"
        }
       },
       "required": [
        "id",
        "machine_type",
        "image",
        "status",
        "state",
        "created_at"
       ],
       "title": "InstanceV1Response",
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List Virtual Machine instances",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": "Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type', 'network'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "instances": [
         {
          "availability_zone": "br-regiao-1a",
          "created_at": "2022-06-10T18:33:12Z",
          "error": {
           "message": "An error occurred while creating your instance. Please contact our support for assistance.",
           "slug": "create_instance.keypair.not_found"
          },
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "image": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "key_name": "keypair_name_here",
          "machine_type": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "name": "instance name",
          "network": {
           "ports": [
            {
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
           ]
          },
          "state": "running",
          "status": "completed",
          "updated_at": "2022-06-11T18:33:12Z",
          "user_data": "base64_data"
         }
        ]
       },
       "properties": {
        "instances": {
         "items": {
          "example": {
           "availability_zone": "br-regiao-1a",
           "created_at": "2022-06-10T18:33:12Z",
           "error": {
            "message": "An error occurred while creating your instance. Please contact our support for assistance.",
            "slug": "create_instance.keypair.not_found"
           },
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "image": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "machine_type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "name": "instance name",
           "network": {
            "ports": [
             {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
             }
            ]
           },
           "ssh_key_name": "keypair_name_here",
           "state": "done",
           "status": "completed",
           "updated_at": "2022-06-11T18:33:12Z",
           "user_data": "some_base_64_str"
          },
          "properties": {
           "availability_zone": {
            "nullable": true,
            "title": "Availability Zone",
            "type": "string"
           },
           "created_at": {
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "error": {
            "example": {
             "message": "Unauthorized",
             "slug": "Unauthorized"
            },
            "properties": {
             "message": {
              "title": "Message",
              "type": "string"
             },
             "slug": {
              "title": "Slug",
              "type": "string"
             }
            },
            "required": [
             "slug",
             "message"
            ],
            "title": "ErrorMessageV1",
            "type": "object"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "image": {
            "anyOf": [
             {
              "additionalProperties": true,
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "ImageInstanceV1Response",
              "type": "object"
             },
             {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "name": "ubuntu",
               "platform": "linux"
              },
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "platform": {
                "nullable": true,
                "title": "Platform",
                "type": "string"
               }
              },
              "required": [
               "id",
               "name"
              ],
              "title": "ImageExtendResponse",
              "type": "object"
             }
            ],
            "title": "Image",
            "type": "object"
           },
           "machine_type": {
            "anyOf": [
             {
              "additionalProperties": true,
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "InstanceTypeForInstanceV1Response",
              "type": "object"
             },
             {
              "example": {
               "disk": 10,
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "name": "abc.small",
               "ram": 2,
               "vcpus": 2
              },
              "properties": {
               "disk": {
                "title": "Disk",
                "type": "integer"
               },
               "id": {
                "title": "Id",
                "type": "string"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "ram": {
                "title": "Ram",
                "type": "integer"
               },
               "vcpus": {
                "title": "Vcpus",
                "type": "integer"
               }
              },
              "required": [
               "id",
               "name",
               "vcpus",
               "ram",
               "disk"
              ],
              "title": "InstanceTypesExtendResponse",
              "type": "object"
             }
            ],
            "title": "Machine Type",
            "type": "object"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "network": {
            "anyOf": [
             {
              "properties": {
               "ports": {
                "items": {
                 "properties": {
                  "id": {
                   "title": "Id",
                   "type": "string"
                  }
                 },
                 "required": [
                  "id"
                 ],
                 "title": "PortID",
                 "type": "object"
                },
                "title": "Ports",
                "type": "array"
               }
              },
              "required": [
               "ports"
              ],
              "title": "NetworkPortsV1",
              "type": "object"
             },
             {
              "properties": {
               "ports": {
                "items": {
                 "properties": {
                  "id": {
                   "title": "Id",
                   "type": "string"
                  },
                  "ipAddresses": {
                   "properties": {
                    "privateIpAddress": {
                     "title": "Privateipaddress",
                     "type": "string"
                    },
                    "publicIpAddress": {
                     "title": "Publicipaddress",
                     "type": "string"
                    }
                   },
                   "required": [
                    "publicIpAddress",
                    "privateIpAddress"
                   ],
                   "title": "IpAddressExpand",
                   "type": "object"
                  },
                  "name": {
                   "title": "Name",
                   "type": "string"
                  }
                 },
                 "required": [
                  "id",
                  "name",
                  "ipAddresses"
                 ],
                 "title": "PortV1Expand",
                 "type": "object"
                },
                "nullable": true,
                "title": "Ports",
                "type": "array"
               },
               "vpc": {
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 }
                },
                "required": [
                 "id",
                 "name"
                ],
                "title": "VpcV1Expand",
                "type": "object"
               }
              },
              "title": "NetworkPortsV1Expand",
              "type": "object"
             }
            ],
            "nullable": true,
            "title": "Network",
            "type": "object"
           },
           "ssh_key_name": {
            "nullable": true,
            "title": "Ssh Key Name",
            "type": "string"
           },
           "state": {
            "title": "State",
            "type": "string"
           },
           "status": {
            "title": "Status",
            "type": "string"
           },
           "updated_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "Updated At",
            "type": "string"
           },
           "user_data": {
            "nullable": true,
            "title": "User Data",
            "type": "string"
           }
          },
          "required": [
           "id",
           "machine_type",
           "image",
           "status",
           "state",
           "created_at"
          ],
          "title": "InstanceV1Response",
          "type": "object"
         },
         "title": "Instances",
         "type": "array"
        }
       },
       "required": [
        "instances"
       ],
       "title": "ListInstanceV1Response",
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Reboots a Virtual Machine instance with the id provided in the current tenant which is logged in.\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id\nof the instance that you want to reboot.\n\n#### Rules\n- The instance must be in the running state.",
      "isInternal": false,
      "name": "reboot",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Renames a Virtual Machine instance with the id provided in the current tenant which is logged in.\n\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id of\nthe instance that you want to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Changes a Virtual Machine instance machine type with the id provided in the current tenant\nwhich is logged in.\n\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get\nthe id of the instance that you want to change the machine type.\n\n#### Rules\n- The instance must be in the running or stopped state.\n- The new machine type must be compatible with the current machine type.\n- The new machine type must be available in the same region as the current machine type.\n- You must provide either the machine type id or the machine type name, if you provide both,\nthe machine type id will be used.",
      "isInternal": false,
      "name": "retype",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "machine_type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        }
       },
       "required": [
        "id",
        "machine_type"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Starts a Virtual Machine instance with the id provided in the current tenant which is logged in.\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances,\nso you can get the id of the instance that you want to start.\n\n#### Rules\n- The instance must be in the stopped or suspended states.",
      "isInternal": false,
      "name": "start",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Stops a Virtual Machine instance with the id provided in the current tenant which is logged in.\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id of\nthe instance that you want to stop.\n\n#### Rules\n- The instance must be in the running state.",
      "isInternal": false,
      "name": "stop",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Suspends a Virtual Machine instance with the id provided in the current tenant which is logged in.\n\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id of\nthe instance that you want to suspend.\n\n#### Rules\n- The instance must be in the running state.",
      "isInternal": false,
      "name": "suspend",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Operations with instances, including create, delete, start, stop, reboot and other actions.",
    "isInternal": false,
    "name": "instances",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieves a list of machine types allowed for the current tenant which is logged in.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": "Sort",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "instance_types": [
         {
          "disk": 10,
          "gpu": 1,
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "abc.small",
          "ram": 2,
          "status": "active",
          "vcpus": 2
         }
        ]
       },
       "properties": {
        "instance_types": {
         "items": {
          "example": {
           "disk": 10,
           "gpu": 1,
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "name": "abc.small",
           "ram": 2,
           "status": "active",
           "vcpus": 2
          },
          "properties": {
           "disk": {
            "title": "Disk",
            "type": "integer"
           },
           "gpu": {
            "default": 0,
            "title": "Gpu",
            "type": "integer"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "ram": {
            "title": "Ram",
            "type": "integer"
           },
           "status": {
            "title": "Status",
            "type": "string"
           },
           "vcpus": {
            "title": "Vcpus",
            "type": "integer"
           }
          },
          "required": [
           "id",
           "name",
           "vcpus",
           "ram",
           "disk",
           "status"
          ],
          "title": "InstanceTypesV1Response",
          "type": "object"
         },
         "title": "Instance Types",
         "type": "array"
        }
       },
       "required": [
        "instance_types"
       ],
       "title": "InstanceTypesV1ListResponse",
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Operations with machine types for instances.",
    "isInternal": false,
    "name": "machine-types",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a snapshot of a Virtual Machine in the current tenant which is logged in. </br>\nA Snapshot is ready for restore when it's in available state.\n\n#### Notes\n- You can verify the state of snapshot using the snapshot get command,\n- To create a snapshot it's mandatory inform a valid and unique name.\n\n#### Rules\n- It's only possible to create a snapshot of a valid virtual machine.\n- It's not possible to create 2 snapshots with the same name.\n- You can inform ID or Name from a Virtual Machine if both informed the priority will be ID.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "virtual_machine": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Virtual Machine",
         "type": "object"
        }
       },
       "required": [
        "name",
        "virtual_machine"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "CreateResponse",
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes an snapshot with the id provided in the current tenant\nwhich is logged in.\n\n#### Notes\n- You can use the Snapshots list command to retrieve all snapshots, so\n- you can get the id of the snapshot that you want to delete.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get an snapshot details for the current tenant which is logged in.\n\n#### Notes\n- You can use the snapshots list command to retrieve all snapshots,\nso you can get the id of the snapshot that you want to get details.\n\n- You can use the **expand** argument to get more details from the inner objects\nlike image or type.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-06-10T18:33:12Z",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "instance": {
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
         "image": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "machine_type": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        },
        "name": "snapshot name",
        "size": 1000,
        "state": "available",
        "status": "completed",
        "updated_at": "2022-06-11T18:33:12Z"
       },
       "properties": {
        "created_at": {
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "instance": {
         "example": {
          "instance": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "image": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "machine_type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          }
         },
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          },
          "image": {
           "anyOf": [
            {
             "additionalProperties": true,
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "ImageInstanceV1Response",
             "type": "object"
            },
            {
             "example": {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "ubuntu",
              "platform": "linux"
             },
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "platform": {
               "nullable": true,
               "title": "Platform",
               "type": "string"
              }
             },
             "required": [
              "id",
              "name"
             ],
             "title": "ImageExtendResponse",
             "type": "object"
            }
           ],
           "title": "Image",
           "type": "object"
          },
          "machine_type": {
           "anyOf": [
            {
             "additionalProperties": true,
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "InstanceTypeForInstanceV1Response",
             "type": "object"
            },
            {
             "example": {
              "disk": 10,
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "abc.small",
              "ram": 2,
              "vcpus": 2
             },
             "properties": {
              "disk": {
               "title": "Disk",
               "type": "integer"
              },
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "ram": {
               "title": "Ram",
               "type": "integer"
              },
              "vcpus": {
               "title": "Vcpus",
               "type": "integer"
              }
             },
             "required": [
              "id",
              "name",
              "vcpus",
              "ram",
              "disk"
             ],
             "title": "InstanceTypesExtendResponse",
             "type": "object"
            }
           ],
           "title": "Machine Type",
           "type": "object"
          }
         },
         "required": [
          "id",
          "image",
          "machine_type"
         ],
         "title": "InstanceResponseSnapshotV1",
         "type": "object"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "size": {
         "title": "Size",
         "type": "integer"
        },
        "state": {
         "title": "State",
         "type": "string"
        },
        "status": {
         "title": "Status",
         "type": "string"
        },
        "updated_at": {
         "example": "2022-01-01T00:00:10Z",
         "nullable": true,
         "title": "Updated At",
         "type": "string"
        }
       },
       "required": [
        "id",
        "status",
        "state",
        "created_at",
        "size",
        "instance"
       ],
       "title": "SnapshotResponseV1",
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List all snapshots in the current tenant which is logged in.\n\n#### Notes\n- You can use the **expand** argument to get more details from the inner objects\nlike image and machine types.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": "Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "snapshots": [
         {
          "created_at": "2022-06-10T18:33:12Z",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "instance": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "image": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "machine_type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          },
          "name": "snapshot name",
          "size": 1000,
          "state": "available",
          "status": "completed",
          "updated_at": "2022-06-11T18:33:12Z"
         }
        ]
       },
       "properties": {
        "snapshots": {
         "items": {
          "example": {
           "created_at": "2022-06-10T18:33:12Z",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "instance": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "image": {
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "machine_type": {
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
           },
           "name": "snapshot name",
           "size": 1000,
           "state": "available",
           "status": "completed",
           "updated_at": "2022-06-11T18:33:12Z"
          },
          "properties": {
           "created_at": {
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "instance": {
            "example": {
             "instance": {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "image": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "machine_type": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
             }
            },
            "properties": {
             "id": {
              "title": "Id",
              "type": "string"
             },
             "image": {
              "anyOf": [
               {
                "additionalProperties": true,
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 }
                },
                "required": [
                 "id"
                ],
                "title": "ImageInstanceV1Response",
                "type": "object"
               },
               {
                "example": {
                 "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                 "name": "ubuntu",
                 "platform": "linux"
                },
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 },
                 "platform": {
                  "nullable": true,
                  "title": "Platform",
                  "type": "string"
                 }
                },
                "required": [
                 "id",
                 "name"
                ],
                "title": "ImageExtendResponse",
                "type": "object"
               }
              ],
              "title": "Image",
              "type": "object"
             },
             "machine_type": {
              "anyOf": [
               {
                "additionalProperties": true,
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 }
                },
                "required": [
                 "id"
                ],
                "title": "InstanceTypeForInstanceV1Response",
                "type": "object"
               },
               {
                "example": {
                 "disk": 10,
                 "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                 "name": "abc.small",
                 "ram": 2,
                 "vcpus": 2
                },
                "properties": {
                 "disk": {
                  "title": "Disk",
                  "type": "integer"
                 },
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 },
                 "ram": {
                  "title": "Ram",
                  "type": "integer"
                 },
                 "vcpus": {
                  "title": "Vcpus",
                  "type": "integer"
                 }
                },
                "required": [
                 "id",
                 "name",
                 "vcpus",
                 "ram",
                 "disk"
                ],
                "title": "InstanceTypesExtendResponse",
                "type": "object"
               }
              ],
              "title": "Machine Type",
              "type": "object"
             }
            },
            "required": [
             "id",
             "image",
             "machine_type"
            ],
            "title": "InstanceResponseSnapshotV1",
            "type": "object"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "size": {
            "title": "Size",
            "type": "integer"
           },
           "state": {
            "title": "State",
            "type": "string"
           },
           "status": {
            "title": "Status",
            "type": "string"
           },
           "updated_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "Updated At",
            "type": "string"
           }
          },
          "required": [
           "id",
           "status",
           "state",
           "created_at",
           "size",
           "instance"
          ],
          "title": "SnapshotResponseV1",
          "type": "object"
         },
         "title": "Snapshots",
         "type": "array"
        }
       },
       "required": [
        "snapshots"
       ],
       "title": "ListSnapshotResponseV1",
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Renames a Snapshot with the id provided in the current tenant which is logged in.\n\n#### Notes\n- You can use the snapshots list command to retrieve all snapshots, so you can get the id of\nthe snapshot that you want to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Restore a snapshot of a Virtual Machine with the current tenant which is logged in. </br>\nA Snapshot is ready for restore when it's in available state.\n\n#### Notes\n- You can verify the state of snapshot using the snapshot list command.\n- Use machine-types list to see all machine types available.\n\n#### Rules\n- To restore a snapshot  you have to inform the new virtual machine information.\n- You can choose a machine-type that has a disk equal or larger\nthan the original virtual machine type.",
      "isInternal": false,
      "name": "restore",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "availability_zone": {
         "maxLength": 255,
         "minLength": 1,
         "nullable": true,
         "title": "Availability Zone",
         "type": "string"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "machine_type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "network": {
         "default": {
          "associate_public_ip": true,
          "vpc": {
           "name": "default"
          }
         },
         "example": {
          "associate_public_ip": true,
          "vpc": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         },
         "properties": {
          "associate_public_ip": {
           "default": true,
           "title": "Associate Public Ip",
           "type": "boolean"
          },
          "vpc": {
           "anyOf": [
            {
             "example": {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
             },
             "properties": {
              "id": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "ID",
             "type": "object"
            },
            {
             "example": {
              "name": "some_resource_name"
             },
             "properties": {
              "name": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "name"
             ],
             "title": "Name",
             "type": "object"
            }
           ],
           "default": {
            "name": "default"
           },
           "title": "Vpc",
           "type": "object"
          }
         },
         "type": "object"
        },
        "ssh_key_name": {
         "title": "Ssh Key Name",
         "type": "string"
        },
        "user_data": {
         "maxLength": 65000,
         "minLength": 1,
         "nullable": true,
         "title": "User Data",
         "type": "string"
        }
       },
       "required": [
        "id",
        "machine_type",
        "name",
        "ssh_key_name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "CreateResponse",
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Operations with snapshots for instances.",
    "isInternal": false,
    "name": "snapshots",
    "version": "0.1.0"
   }
  ],
  "description": "Virtual Machine Api Product",
  "isInternal": false,
  "name": "virtual-machine",
  "version": "0.1.0"
 }
]