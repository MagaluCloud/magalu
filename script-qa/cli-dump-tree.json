[
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Retrieve the access token used in the APIs",
    "isInternal": false,
    "name": "access_token",
    "parameters": {
     "properties": {
      "Validate": {
       "description": "Validate the token, refreshing if needed",
       "type": "boolean"
      }
     },
     "type": "object"
    },
    "result": {
     "properties": {
      "access_token": {
       "type": "string"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "Create new client (Oauth Application)",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "properties": {
        "access-token-expiration": {
         "description": "Access token expiration (in seconds)",
         "example": 7200,
         "type": "integer"
        },
        "always-require-login": {
         "description": "Must ignore active Magalu ID session and always require login",
         "type": "boolean"
        },
        "audiences": {
         "description": "Client audiences (separated by space)",
         "example": "public",
         "type": "string"
        },
        "backchannel-logout-session-enabled": {
         "description": "Client requires backchannel logout session",
         "type": "boolean"
        },
        "backchannel-logout-uri": {
         "description": "Backchannel logout URI",
         "type": "string"
        },
        "client-privacy-term-url": {
         "description": "URL to privacy term",
         "type": "string"
        },
        "description": {
         "description": "Description of new client",
         "example": "Client description",
         "type": "string"
        },
        "icon": {
         "description": "URL for client icon",
         "type": "string"
        },
        "name": {
         "description": "Name of new client",
         "example": "Client Name",
         "type": "string"
        },
        "oidc-audiences": {
         "description": "Audiences for ID token",
         "type": "string"
        },
        "reason": {
         "description": "Note to inform the reason for creating the client. Will help with the application approval process",
         "type": "string"
        },
        "redirect-uris": {
         "description": "Redirect URIs (separated by space)",
         "type": "string"
        },
        "refresh-token-custom-expires-enabled": {
         "description": "Use custom value for refresh token expiration",
         "type": "boolean"
        },
        "refresh-token-expiration": {
         "description": "Custom refresh token expiration value (in seconds)",
         "example": 15778476,
         "type": "integer"
        },
        "terms-of-use": {
         "description": "URL to terms of use",
         "type": "string"
        }
       },
       "required": [
        "name",
        "description",
        "redirect-uris",
        "client-privacy-term-url",
        "terms-of-use",
        "reason"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "client_id": {
         "type": "string"
        },
        "client_secret": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List user clients",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "access_token_expiration": {
          "type": "integer"
         },
         "always_require_login": {
          "type": "boolean"
         },
         "audiences": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "backchannel_logout_session_enabled": {
          "type": "boolean"
         },
         "backchannel_logout_uri": {
          "type": "string"
         },
         "client_approval_status": {
          "type": "string"
         },
         "client_id": {
          "type": "string"
         },
         "client_privacy_term_url": {
          "type": "string"
         },
         "description": {
          "type": "string"
         },
         "icon": {
          "type": "string"
         },
         "name": {
          "type": "string"
         },
         "oidc_audience": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "redirect_uris": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "refresh_token_custom_expires_enabled": {
          "type": "boolean"
         },
         "refresh_token_expiration": {
          "type": "integer"
         },
         "scopes": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "scopes_default": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "term_of_use": {
          "type": "string"
         },
         "uuid": {
          "type": "string"
         }
        },
        "required": [
         "always_require_login",
         "backchannel_logout_session_enabled",
         "refresh_token_custom_expires_enabled"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Update a client (Oauth Application)",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "properties": {
        "access-token-expiration": {
         "description": "Access token expiration (in seconds)",
         "example": 7200,
         "type": "integer"
        },
        "always-require-login": {
         "description": "Must ignore active Magalu ID session and always require login",
         "type": "boolean"
        },
        "audiences": {
         "description": "Client audiences (separated by space)",
         "example": "public",
         "type": "string"
        },
        "backchannel-logout-session-enabled": {
         "description": "Client requires backchannel logout session",
         "type": "boolean"
        },
        "backchannel-logout-uri": {
         "description": "Backchannel logout URI",
         "type": "string"
        },
        "client-privacy-term-url": {
         "description": "URL to privacy term",
         "type": "string"
        },
        "description": {
         "description": "Description of new client",
         "example": "Client description",
         "type": "string"
        },
        "icon": {
         "description": "URL for client icon",
         "type": "string"
        },
        "id": {
         "description": "UUID of client",
         "type": "string"
        },
        "name": {
         "description": "Name of new client",
         "example": "Client Name",
         "type": "string"
        },
        "oidc-audiences": {
         "description": "Audiences for ID token",
         "type": "string"
        },
        "reason": {
         "description": "Note to inform the reason for creating the client. Will help with the application approval process",
         "type": "string"
        },
        "redirect-uris": {
         "description": "Redirect URIs (separated by space)",
         "type": "string"
        },
        "refresh-token-custom-expires-enabled": {
         "description": "Use custom value for refresh token expiration",
         "type": "boolean"
        },
        "refresh-token-expiration": {
         "description": "Custom refresh token expiration value (in seconds)",
         "example": 15778476,
         "type": "integer"
        },
        "terms-of-use": {
         "description": "URL to terms of use",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "client_id": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "",
    "isInternal": false,
    "name": "clients",
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Log in to your Magalu Cloud account. When you login with this command,\nthe current Tenant will always be set to the default one. To see more details\nabout a successful login, use the '--show' flag when logging in",
    "isInternal": false,
    "name": "login",
    "parameters": {
     "properties": {
      "headless": {
       "default": false,
       "description": "Generate URL for the login at local environment",
       "type": "boolean"
      },
      "qrcode": {
       "default": false,
       "description": "Generate a qrcode for the login URL",
       "type": "boolean"
      },
      "scopes": {
       "description": "All desired scopes for the resulting access token",
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "show": {
       "description": "Show the access token after the login completes",
       "type": "boolean"
      }
     },
     "type": "object"
    },
    "result": {
     "properties": {
      "access_token": {
       "type": "string"
      },
      "selected_tenant": {
       "properties": {
        "email": {
         "type": "string"
        },
        "is_delegated": {
         "type": "boolean"
        },
        "is_managed": {
         "type": "boolean"
        },
        "legal_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "legal_name",
        "email",
        "is_managed",
        "is_delegated"
       ],
       "type": "object"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "The current Tenant is used for all Magalu HTTP requests",
      "isInternal": false,
      "name": "current",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "email": {
         "type": "string"
        },
        "is_delegated": {
         "type": "boolean"
        },
        "is_managed": {
         "type": "boolean"
        },
        "legal_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "legal_name",
        "email",
        "is_managed",
        "is_delegated"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List all available tenants for current login",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "email": {
          "type": "string"
         },
         "is_delegated": {
          "type": "boolean"
         },
         "is_managed": {
          "type": "boolean"
         },
         "legal_name": {
          "type": "string"
         },
         "uuid": {
          "type": "string"
         }
        },
        "required": [
         "uuid",
         "legal_name",
         "email",
         "is_managed",
         "is_delegated"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Set the active Tenant to be used for all subsequent requests",
      "isInternal": false,
      "name": "set",
      "parameters": {
       "properties": {
        "uuid": {
         "description": "The UUID of the desired Tenant. To list all possible IDs, run auth tenant list",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "access_token": {
         "type": "string"
        },
        "created_at": {
         "type": "object"
        },
        "refresh_token": {
         "type": "string"
        },
        "scope": {
         "items": {
          "type": "string"
         },
         "type": "array"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "created_at",
        "access_token",
        "refresh_token",
        "scope"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Tenants work like sub-accounts. You may have more than one Tenant under your\nMagalu Cloud account and they each store their data separately, but are billed\nunder the same account",
    "isInternal": false,
    "name": "tenant",
    "version": ""
   }
  ],
  "description": "The authentication credentials set here will be used as a basis for a variety\nof HTTP requests using the MgcSDK. Authentication is done via Magalu Cloud account\n(Object Storage requires special keys, refer to it for more info)",
  "isInternal": false,
  "name": "auth",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Snapshot for the currently authenticated tenant.\n\nThe Snapshot can be used when it reaches the \"available\" state and the\n \"completed\" status.\n\n#### Rules\n- The Snapshot name must be unique; otherwise, the creation will be disallowed.\n- Creating Snapshots from restored Volumes may lead to future conflicts as\n you can't delete a Volume with an Snapshot and can't delete a Snapshot with a\n restored Volume, so we recommend avoiding it.\n\n#### Notes\n- Use the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume that will be used to create the\n Snapshot.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "volume": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Volume",
         "type": "object"
        }
       },
       "required": [
        "description",
        "name",
        "volume"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "minLength": 1,
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "IdResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a Snapshot for the currently authenticated tenant.\n\n#### Rules\n- The Snapshot's status must be \"completed\".\n- The Snapshot's state must be \"available\".\n- Deleting a Snapshot that has been restored is not possible. If necessary,\n delete the restored Volume first and then proceed to delete the Snapshot.\n\n#### Notes\n- Utilize the **block-storage snapshots** list command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot you wish to delete.\n- If needed, you can use the **block-storage volume list** command to retrieve\n a list of all Volumes and obtain the ID of the restored Volume.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve details of a Snapshot for the currently authenticated tenant.\n\n#### Notes\n- Use the **expand** argument to obtain additional details about the Volume\n used to create the Snapshot.\n- Utilize the **block-storage snapshots list** command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot for which you want to retrieve\n details.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "items": {
          "enum": [
           "volume"
          ],
          "title": "ExpandSnapshots",
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01T00:00:10Z",
        "description": "my snapshot for testing",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "name": "My snapshot",
        "size": 10,
        "state": "available",
        "status": "completed",
        "updated_at": "2022-01-01T00:00:10Z",
        "volume": {
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        }
       },
       "properties": {
        "created_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "size": {
         "title": "Size",
         "type": "integer"
        },
        "state": {
         "enum": [
          "new",
          "available",
          "deleted"
         ],
         "title": "SnapshotStateV1",
         "type": "string"
        },
        "status": {
         "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_error_quota",
          "completed",
          "deleting",
          "deleted",
          "deleted_error"
         ],
         "title": "SnapshotStatusV1",
         "type": "string"
        },
        "updated_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdResponse",
           "type": "object"
          },
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "My volume",
            "size": 10,
            "type": {
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "name": "My volume type"
            }
           },
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "size": {
             "title": "Size",
             "type": "integer"
            },
            "type": {
             "example": {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "My volume type"
             },
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "id",
              "name"
             ],
             "title": "SnapshotVolumeType",
             "type": "object"
            }
           },
           "required": [
            "id",
            "name",
            "size",
            "type"
           ],
           "title": "SnapshotVolume",
           "type": "object"
          }
         ],
         "title": "Volume",
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "size",
        "description",
        "state",
        "status",
        "created_at",
        "updated_at",
        "volume"
       ],
       "title": "SnapshotResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve a list of Snapshots for the currently authenticated tenant.\n\n#### Notes\n- Use the expand argument to obtain additional details about the Volume used to\n create each Snapshot.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "items": {
          "enum": [
           "volume"
          ],
          "title": "ExpandSnapshots",
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "snapshots": [
         {
          "created_at": "2022-01-01T00:00:10Z",
          "description": "my snapshot for testing",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "My snapshot",
          "size": 10,
          "state": "available",
          "status": "completed",
          "updated_at": "2022-01-01T00:00:10Z",
          "volume": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         }
        ]
       },
       "properties": {
        "snapshots": {
         "items": {
          "example": {
           "created_at": "2022-01-01T00:00:10Z",
           "description": "my snapshot for testing",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "name": "My snapshot",
           "size": 10,
           "state": "available",
           "status": "completed",
           "updated_at": "2022-01-01T00:00:10Z",
           "volume": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          },
          "properties": {
           "created_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "size": {
            "title": "Size",
            "type": "integer"
           },
           "state": {
            "enum": [
             "new",
             "available",
             "deleted"
            ],
            "title": "SnapshotStateV1",
            "type": "string"
           },
           "status": {
            "enum": [
             "provisioning",
             "creating",
             "creating_error",
             "creating_error_quota",
             "completed",
             "deleting",
             "deleted",
             "deleted_error"
            ],
            "title": "SnapshotStatusV1",
            "type": "string"
           },
           "updated_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "anyOf": [
             {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "properties": {
               "id": {
                "minLength": 1,
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "IdResponse",
              "type": "object"
             },
             {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "name": "My volume",
               "size": 10,
               "type": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "name": "My volume type"
               }
              },
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "size": {
                "title": "Size",
                "type": "integer"
               },
               "type": {
                "example": {
                 "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                 "name": "My volume type"
                },
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 }
                },
                "required": [
                 "id",
                 "name"
                ],
                "title": "SnapshotVolumeType",
                "type": "object"
               }
              },
              "required": [
               "id",
               "name",
               "size",
               "type"
              ],
              "title": "SnapshotVolume",
              "type": "object"
             }
            ],
            "title": "Volume",
            "type": "object"
           }
          },
          "required": [
           "id",
           "name",
           "size",
           "description",
           "state",
           "status",
           "created_at",
           "updated_at",
           "volume"
          ],
          "title": "SnapshotResponse",
          "type": "object"
         },
         "title": "Snapshots",
         "type": "array"
        }
       },
       "required": [
        "snapshots"
       ],
       "title": "SnapshotListResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Rename a Snapshot for the currently authenticated tenant.\n\n#### Rules\n- The Snapshot name must be unique; otherwise, renaming will not be allowed.\n\n#### Notes\n- Utilize the **block-storage snapshots list** command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot you wish to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Restore a Snapshot on a new Volume to the currently\n authenticated tenant.\n\nThe restored Volume can be used when it reaches the \"available\" state and the\n \"completed\" status.\n\n#### Notes\n- To obtain the ID of the Snapshot you wish to restore, you can use the\n **block-storage snapshots list** command to list all Snapshots.\n- Check the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.",
      "isInternal": false,
      "name": "restore",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "title": "Name",
         "type": "string"
        },
        "snapshot_id": {
         "format": "uuid",
         "title": "Snapshot Id",
         "type": "string"
        }
       },
       "required": [
        "name",
        "snapshot_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "minLength": 1,
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "IdResponse",
       "type": "object"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with snapshots for volumes.",
    "isInternal": false,
    "name": "snapshots",
    "version": "v1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Attach a volume to a virtual machine instance",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Detach a volume from a virtual machine instance",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Check if a volume is attached to a virtual machine instance",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "block_storage_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Block Storage Volume Attachment",
    "isInternal": true,
    "name": "volume-attachment",
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List Volume Types allowed in the current region.\n\n#### Notes\n\n- Volume types are managed internally. If you wish to use a Volume Type that\n is not yet available, please contact our support team for assistance.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "types": [
         {
          "disk_type": "nvme",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "iops": {
           "read": 1000,
           "write": 1000
          },
          "name": "my_volume_type",
          "status": "active"
         }
        ]
       },
       "properties": {
        "types": {
         "items": {
          "example": {
           "disk_type": "nvme",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "iops": {
            "read": 1000,
            "write": 1000
           },
           "name": "my_volume_type",
           "status": "active"
          },
          "properties": {
           "disk_type": {
            "enum": [
             "nvme",
             "hdd"
            ],
            "title": "DiskType",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "iops": {
            "properties": {
             "read": {
              "title": "Read",
              "type": "integer"
             },
             "write": {
              "title": "Write",
              "type": "integer"
             }
            },
            "required": [
             "read",
             "write"
            ],
            "title": "VolumeTypeSpec",
            "type": "object"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "status": {
            "enum": [
             "active",
             "deprecated",
             "deleted"
            ],
            "title": "VolumeTypeStatus",
            "type": "string"
           }
          },
          "required": [
           "iops",
           "id",
           "name",
           "disk_type",
           "status"
          ],
          "title": "VolumeTypeResponse",
          "type": "object"
         },
         "title": "Types",
         "type": "array"
        }
       },
       "required": [
        "types"
       ],
       "title": "GenericVolumeTypeList[VolumeTypeResponse]",
       "type": "object"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with volume types for volumes.",
    "isInternal": false,
    "name": "volume-types",
    "version": "v1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Attach a Volume to a Virtual Machine instance for the currently\n authenticated tenant.\n\nThe Volume attachment will be completed when the Volume status returns to\n\"completed\", and the state becomes \"in-use\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"available\".\n- The Virtual Machine's state must be \"stopped\" or \"running\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n**virtual-machine instances get --id [uuid]** command\".",
      "isInternal": false,
      "name": "attach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Id",
         "type": "string"
        },
        "virtual_machine_id": {
         "format": "uuid",
         "magalu.cloud/core/resolved": "true",
         "title": "Virtual Machine Id",
         "type": "string"
        }
       },
       "required": [
        "id",
        "virtual_machine_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Volume for the currently authenticated tenant.\n\nThe Volume can be used when it reaches the \"available\" state and \"completed\"\n status.\n\n#### Rules\n- The Volume name must be unique; otherwise, the creation will be disallowed.\n- The Volume type must be available to use.\n\n#### Notes\n- Utilize the **block-storage volume-types list** command to retrieve a list\n of all available Volume Types.\n- Verify the state and status of your Volume using the\n**block-storage volume get --id [uuid]** command\".",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "size": {
         "description": "Gibibytes (GiB)",
         "maximum": 2147483648,
         "minimum": 10,
         "title": "Size",
         "type": "integer"
        },
        "type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Type",
         "type": "object"
        }
       },
       "required": [
        "name",
        "size",
        "type"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "minLength": 1,
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "IdResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a Volume for the currently authenticated tenant.\n\n#### Rules\n- The Volume cannot be attached to a Virtual Machine, i.e., its state cannot\n be \"in-use\". If necessary, detach the Volume from the Virtual Machine before\n proceeding with deletion.\n- The Volume must not have any snapshots. If necessary, delete the Volume's\n  snapshots before proceeding with deletion.\n- The Volume must have the status \"completed\", i.e., must not have any\n  actions in progress.\n\n\n#### Notes\n- Check the state and status of your Volume using the\n**block-storage volume get --id [uuid]** command\".",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Detach a Volume from a Virtual Machine instance for the\n currently authenticated tenant.\n\nThe Volume detachment will be completed when the Volume state returns to\n \"available,\" and the status becomes \"completed\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"in-use\".\n- The Virtual Machine's state must be \"stopped\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n **virtual-machine instances get --id [uuid]** command.\n- Ensure that any file systems on the device within your operating system are\n unmounted before detaching the Volume.\n\n#### Troubleshooting\n- A failure during detachment can result in the Volume becoming stuck in the\n busy state. If this occurs, detachment may be delayed indefinitely until you\n unmount the Volume, force detachment, reboot the instance, or perform all\n three.",
      "isInternal": false,
      "name": "detach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Extend the size of an existing Volume for the currently\n authenticated tenant.\n\nThe Volume extension will be completed when the Volume status returns to\n \"completed\".\n\n#### Rules\n- The Volume state must be \"available\".\n- The Volume status must be \"completed\" or \"extend_error\".\n- The new Volume size must be larger than the current size.\n\n#### Notes\n- Utilize the block-storage volume list command to retrieve a list of all\n Volumes and obtain the ID of the Volume you want to extend.\n- Storage quotas are managed internally. If the operation fails due to quota\n restrictions, please contact our support team for assistance.",
      "isInternal": false,
      "name": "extend",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "size": {
         "description": "New volume size in GB",
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Size",
         "type": "integer"
        }
       },
       "required": [
        "id",
        "size"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve details of a Volume for the currently authenticated tenant.\n\n#### Notes\n- Use the **expand** argument to obtain additional details about the Volume\n Type.\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume for which you want to retrieve\n details.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['volume_type', 'attachment']",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "attachment": {
         "attached_at": "2022-01-01T00:00:10Z",
         "device": "/dev/vdb",
         "instance": {
          "created_at": "2022-01-01T00:00:10Z",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "machine name",
          "state": "running",
          "status": "completed",
          "updated_at": "2022-01-01T00:00:10Z"
         },
         "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "created_at": "2022-01-01T00:00:10Z",
        "error": {
         "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
         "slug": "creating_error_quota"
        },
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "name": "volume name",
        "size": 10,
        "state": "in-use",
        "status": "completed",
        "type": {
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "updated_at": "2022-01-01T00:00:10Z"
       },
       "properties": {
        "attachment": {
         "example": {
          "attached_at": "2022-01-01T00:00:10Z",
          "device": "/dev/vdb",
          "instance": {
           "created_at": "2022-01-01T00:00:10Z",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "name": "machine name",
           "state": "running",
           "status": "completed",
           "updated_at": "2022-01-01T00:00:10Z"
          },
          "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "properties": {
          "attached_at": {
           "anyOf": [
            {
             "type": "string"
            },
            {
             "format": "date-time",
             "type": "string"
            }
           ],
           "example": "2022-01-01T00:00:10Z",
           "title": "Attached At",
           "type": "string"
          },
          "device": {
           "nullable": true,
           "title": "Device",
           "type": "string"
          },
          "instance": {
           "anyOf": [
            {
             "example": {
              "created_at": "2022-01-01T00:00:10Z",
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "machine name",
              "state": "running",
              "status": "completed",
              "updated_at": "2022-01-01T00:00:10Z"
             },
             "properties": {
              "created_at": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "format": "date-time",
                 "type": "string"
                }
               ],
               "example": "2022-01-01T00:00:10Z",
               "title": "Created At",
               "type": "string"
              },
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "state": {
               "anyOf": [
                {
                 "enum": [
                  "new",
                  "running",
                  "stopped",
                  "suspended",
                  "deleted"
                 ],
                 "title": "InstanceState",
                 "type": "string"
                },
                {
                 "type": "string"
                }
               ],
               "title": "State",
               "type": "string"
              },
              "status": {
               "anyOf": [
                {
                 "enum": [
                  "provisioning",
                  "creating",
                  "creating_error",
                  "creating_error_quota",
                  "completed",
                  "retyping_pending",
                  "retyping",
                  "retyping_confirmed",
                  "retyping_error",
                  "retyping_error_quota",
                  "stopping_pending",
                  "stopping",
                  "suspending_pending",
                  "suspending",
                  "rebooting_pending",
                  "rebooting",
                  "starting_pending",
                  "starting",
                  "deleting_pending",
                  "deleting",
                  "deleting_error",
                  "deleted"
                 ],
                 "title": "InstanceStatus",
                 "type": "string"
                },
                {
                 "type": "string"
                }
               ],
               "title": "Status",
               "type": "string"
              },
              "updated_at": {
               "anyOf": [
                {
                 "type": "string"
                },
                {
                 "format": "date-time",
                 "type": "string"
                }
               ],
               "example": "2022-01-01T00:00:10Z",
               "title": "Updated At",
               "type": "string"
              }
             },
             "required": [
              "id",
              "name",
              "status",
              "state",
              "created_at",
              "updated_at"
             ],
             "title": "AttachmentMachine",
             "type": "object"
            },
            {
             "example": {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
             },
             "properties": {
              "id": {
               "minLength": 1,
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "IdRequest",
             "type": "object"
            }
           ],
           "title": "Instance",
           "type": "object"
          },
          "machine_id": {
           "deprecated": true,
           "title": "Machine Id",
           "type": "string"
          }
         },
         "required": [
          "machine_id",
          "instance",
          "attached_at"
         ],
         "title": "AttachmentResponse",
         "type": "object"
        },
        "created_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "error": {
         "example": {
          "message": "Unauthorized",
          "slug": "Unauthorized"
         },
         "properties": {
          "message": {
           "title": "Message",
           "type": "string"
          },
          "slug": {
           "title": "Slug",
           "type": "string"
          }
         },
         "required": [
          "slug",
          "message"
         ],
         "title": "VolumeResponseError",
         "type": "object"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "size": {
         "title": "Size",
         "type": "integer"
        },
        "state": {
         "enum": [
          "new",
          "available",
          "in-use",
          "deleted",
          "legacy"
         ],
         "title": "VolumeStateV1",
         "type": "string"
        },
        "status": {
         "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_error_quota",
          "completed",
          "extend_pending",
          "extending",
          "extend_error",
          "extend_error_quota",
          "attaching_pending",
          "attaching_error",
          "attaching",
          "detaching_pending",
          "detaching_error",
          "detaching",
          "retype_pending",
          "retyping",
          "retype_error",
          "retype_error_quota",
          "deleting_pending",
          "deleting",
          "deleted",
          "deleted_error"
         ],
         "title": "VolumeStatusV1",
         "type": "string"
        },
        "type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "disk_type": "nvme",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "iops": {
             "read": 1000,
             "write": 1000
            },
            "name": "my_volume_type",
            "status": "active"
           },
           "properties": {
            "disk_type": {
             "enum": [
              "nvme",
              "hdd"
             ],
             "title": "DiskType",
             "type": "string"
            },
            "id": {
             "title": "Id",
             "type": "string"
            },
            "iops": {
             "properties": {
              "read": {
               "title": "Read",
               "type": "integer"
              },
              "write": {
               "title": "Write",
               "type": "integer"
              }
             },
             "required": [
              "read",
              "write"
             ],
             "title": "VolumeTypeSpec",
             "type": "object"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "status": {
             "enum": [
              "active",
              "deprecated",
              "deleted"
             ],
             "title": "VolumeTypeStatus",
             "type": "string"
            }
           },
           "required": [
            "iops",
            "id",
            "name",
            "disk_type",
            "status"
           ],
           "title": "VolumeTypeResponse",
           "type": "object"
          }
         ],
         "title": "Type",
         "type": "object"
        },
        "updated_at": {
         "anyOf": [
          {
           "type": "string"
          },
          {
           "format": "date-time",
           "type": "string"
          }
         ],
         "example": "2022-01-01T00:00:10Z",
         "title": "Updated At",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name",
        "size",
        "status",
        "state",
        "created_at",
        "updated_at",
        "type"
       ],
       "title": "VolumeResponseV1",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve a list of Volumes for the currently authenticated tenant.\n\n#### Notes\n- Use the expand argument to obtain additional details about the Volume Type.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['volume_type', 'attachment']",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "volumes": [
         {
          "attachment": {
           "attached_at": "2022-01-01T00:00:10Z",
           "device": "/dev/vdb",
           "instance": {
            "created_at": "2022-01-01T00:00:10Z",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "machine name",
            "state": "running",
            "status": "completed",
            "updated_at": "2022-01-01T00:00:10Z"
           },
           "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "created_at": "2022-01-01T00:00:10Z",
          "error": {
           "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
           "slug": "creating_error_quota"
          },
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "volume name",
          "size": 10,
          "state": "in-use",
          "status": "completed",
          "type": {
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "updated_at": "2022-01-01T00:00:10Z"
         }
        ]
       },
       "properties": {
        "volumes": {
         "items": {
          "example": {
           "attachment": {
            "attached_at": "2022-01-01T00:00:10Z",
            "device": "/dev/vdb",
            "instance": {
             "created_at": "2022-01-01T00:00:10Z",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "name": "machine name",
             "state": "running",
             "status": "completed",
             "updated_at": "2022-01-01T00:00:10Z"
            },
            "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "created_at": "2022-01-01T00:00:10Z",
           "error": {
            "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
            "slug": "creating_error_quota"
           },
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "name": "volume name",
           "size": 10,
           "state": "in-use",
           "status": "completed",
           "type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "updated_at": "2022-01-01T00:00:10Z"
          },
          "properties": {
           "attachment": {
            "example": {
             "attached_at": "2022-01-01T00:00:10Z",
             "device": "/dev/vdb",
             "instance": {
              "created_at": "2022-01-01T00:00:10Z",
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "machine name",
              "state": "running",
              "status": "completed",
              "updated_at": "2022-01-01T00:00:10Z"
             },
             "machine_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "properties": {
             "attached_at": {
              "anyOf": [
               {
                "type": "string"
               },
               {
                "format": "date-time",
                "type": "string"
               }
              ],
              "example": "2022-01-01T00:00:10Z",
              "title": "Attached At",
              "type": "string"
             },
             "device": {
              "nullable": true,
              "title": "Device",
              "type": "string"
             },
             "instance": {
              "anyOf": [
               {
                "example": {
                 "created_at": "2022-01-01T00:00:10Z",
                 "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                 "name": "machine name",
                 "state": "running",
                 "status": "completed",
                 "updated_at": "2022-01-01T00:00:10Z"
                },
                "properties": {
                 "created_at": {
                  "anyOf": [
                   {
                    "type": "string"
                   },
                   {
                    "format": "date-time",
                    "type": "string"
                   }
                  ],
                  "example": "2022-01-01T00:00:10Z",
                  "title": "Created At",
                  "type": "string"
                 },
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 },
                 "state": {
                  "anyOf": [
                   {
                    "enum": [
                     "new",
                     "running",
                     "stopped",
                     "suspended",
                     "deleted"
                    ],
                    "title": "InstanceState",
                    "type": "string"
                   },
                   {
                    "type": "string"
                   }
                  ],
                  "title": "State",
                  "type": "string"
                 },
                 "status": {
                  "anyOf": [
                   {
                    "enum": [
                     "provisioning",
                     "creating",
                     "creating_error",
                     "creating_error_quota",
                     "completed",
                     "retyping_pending",
                     "retyping",
                     "retyping_confirmed",
                     "retyping_error",
                     "retyping_error_quota",
                     "stopping_pending",
                     "stopping",
                     "suspending_pending",
                     "suspending",
                     "rebooting_pending",
                     "rebooting",
                     "starting_pending",
                     "starting",
                     "deleting_pending",
                     "deleting",
                     "deleting_error",
                     "deleted"
                    ],
                    "title": "InstanceStatus",
                    "type": "string"
                   },
                   {
                    "type": "string"
                   }
                  ],
                  "title": "Status",
                  "type": "string"
                 },
                 "updated_at": {
                  "anyOf": [
                   {
                    "type": "string"
                   },
                   {
                    "format": "date-time",
                    "type": "string"
                   }
                  ],
                  "example": "2022-01-01T00:00:10Z",
                  "title": "Updated At",
                  "type": "string"
                 }
                },
                "required": [
                 "id",
                 "name",
                 "status",
                 "state",
                 "created_at",
                 "updated_at"
                ],
                "title": "AttachmentMachine",
                "type": "object"
               },
               {
                "example": {
                 "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "properties": {
                 "id": {
                  "minLength": 1,
                  "title": "Id",
                  "type": "string"
                 }
                },
                "required": [
                 "id"
                ],
                "title": "IdRequest",
                "type": "object"
               }
              ],
              "title": "Instance",
              "type": "object"
             },
             "machine_id": {
              "deprecated": true,
              "title": "Machine Id",
              "type": "string"
             }
            },
            "required": [
             "machine_id",
             "instance",
             "attached_at"
            ],
            "title": "AttachmentResponse",
            "type": "object"
           },
           "created_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "error": {
            "example": {
             "message": "Unauthorized",
             "slug": "Unauthorized"
            },
            "properties": {
             "message": {
              "title": "Message",
              "type": "string"
             },
             "slug": {
              "title": "Slug",
              "type": "string"
             }
            },
            "required": [
             "slug",
             "message"
            ],
            "title": "VolumeResponseError",
            "type": "object"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "size": {
            "title": "Size",
            "type": "integer"
           },
           "state": {
            "enum": [
             "new",
             "available",
             "in-use",
             "deleted",
             "legacy"
            ],
            "title": "VolumeStateV1",
            "type": "string"
           },
           "status": {
            "enum": [
             "provisioning",
             "creating",
             "creating_error",
             "creating_error_quota",
             "completed",
             "extend_pending",
             "extending",
             "extend_error",
             "extend_error_quota",
             "attaching_pending",
             "attaching_error",
             "attaching",
             "detaching_pending",
             "detaching_error",
             "detaching",
             "retype_pending",
             "retyping",
             "retype_error",
             "retype_error_quota",
             "deleting_pending",
             "deleting",
             "deleted",
             "deleted_error"
            ],
            "title": "VolumeStatusV1",
            "type": "string"
           },
           "type": {
            "anyOf": [
             {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "properties": {
               "id": {
                "minLength": 1,
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "IdRequest",
              "type": "object"
             },
             {
              "example": {
               "disk_type": "nvme",
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "iops": {
                "read": 1000,
                "write": 1000
               },
               "name": "my_volume_type",
               "status": "active"
              },
              "properties": {
               "disk_type": {
                "enum": [
                 "nvme",
                 "hdd"
                ],
                "title": "DiskType",
                "type": "string"
               },
               "id": {
                "title": "Id",
                "type": "string"
               },
               "iops": {
                "properties": {
                 "read": {
                  "title": "Read",
                  "type": "integer"
                 },
                 "write": {
                  "title": "Write",
                  "type": "integer"
                 }
                },
                "required": [
                 "read",
                 "write"
                ],
                "title": "VolumeTypeSpec",
                "type": "object"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "status": {
                "enum": [
                 "active",
                 "deprecated",
                 "deleted"
                ],
                "title": "VolumeTypeStatus",
                "type": "string"
               }
              },
              "required": [
               "iops",
               "id",
               "name",
               "disk_type",
               "status"
              ],
              "title": "VolumeTypeResponse",
              "type": "object"
             }
            ],
            "title": "Type",
            "type": "object"
           },
           "updated_at": {
            "anyOf": [
             {
              "type": "string"
             },
             {
              "format": "date-time",
              "type": "string"
             }
            ],
            "example": "2022-01-01T00:00:10Z",
            "title": "Updated At",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "size",
           "status",
           "state",
           "created_at",
           "updated_at",
           "type"
          ],
          "title": "VolumeResponseV1",
          "type": "object"
         },
         "title": "Volumes",
         "type": "array"
        }
       },
       "required": [
        "volumes"
       ],
       "title": "VolumesResponseV1",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Rename a Volume for the currently authenticated tenant.\n\n#### Rules\n- The Volume name must be unique; otherwise, renaming will not be allowed.\n\n#### Notes\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume you wish to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Change the Volume Type of an existing Volume for the currently\n authenticated tenant.\n\nThe Volume retype will be completed when the Volume status returns to\n \"completed\".\n\n#### Rules\n- The Volume state must be \"available\".\n- The Volume status must be \"completed\" or \"retype_error\".\n- The new Volume Type must belong to the same region as the Volume.\n\n#### Notes\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume you want to retype.\n- Utilize the **block-storage volume-types list** command to retrieve a list of\n all Volume Types and obtain the ID of the Volume Type you want to use.",
      "isInternal": false,
      "name": "retype",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "new_type": {
         "anyOf": [
          {
           "example": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "id": {
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "IdRequest",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "New Type",
         "type": "object"
        }
       },
       "required": [
        "id",
        "new_type"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with volumes, including create, delete, extend, retype, list and other actions.",
    "isInternal": false,
    "name": "volumes",
    "version": "v1"
   }
  ],
  "description": "Block Storage API Product Documentation",
  "isInternal": false,
  "name": "block-storage",
  "version": "v1"
 },
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Delete/unset a Config value that had been previously set. This does not\naffect the environment variables",
    "isInternal": false,
    "name": "delete",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the config to be deleted",
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Get a specific Config value that has been previously set. If there's an env variable\nmatching the key (in uppercase and with the 'MGC_' prefix), it'll be retreived.\nOtherwise, the value will be searched for in the YAML file",
    "isInternal": false,
    "name": "get",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the desired config",
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Get the JSON Schema for the specified Config. The Schema has\ninformation about the accepted values for the Config, constraints, type, description, etc.",
    "isInternal": false,
    "name": "get-schema",
    "parameters": {
     "properties": {
      "key": {
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "nullable": true,
     "properties": {
      "additionalProperties": {
       "properties": {
        "has": {
         "nullable": true,
         "type": "boolean"
        },
        "schema": {
         "$ref": "#/$defs/SchemaRef"
        }
       },
       "type": "object"
      },
      "allOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "allowEmptyValue": {
       "type": "boolean"
      },
      "anyOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "default": {
       "anyOf": [
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "deprecated": {
       "type": "boolean"
      },
      "description": {
       "type": "string"
      },
      "discriminator": {
       "properties": {
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "mapping": {
         "additionalProperties": {
          "type": "string"
         },
         "type": "object"
        },
        "propertyName": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "enum": {
       "items": {
        "anyOf": [
         {
          "type": "boolean"
         },
         {
          "type": "string"
         },
         {
          "type": "number"
         },
         {
          "type": "integer"
         },
         {
          "items": {},
          "type": "array"
         },
         {
          "additionalProperties": true,
          "type": "object"
         }
        ],
        "nullable": true
       },
       "type": "array"
      },
      "example": {
       "anyOf": [
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "exclusiveMax": {
       "type": "boolean"
      },
      "exclusiveMin": {
       "type": "boolean"
      },
      "extensions": {
       "additionalProperties": true,
       "type": "object"
      },
      "externalDocs": {
       "properties": {
        "description": {
         "type": "string"
        },
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "url": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "format": {
       "type": "string"
      },
      "items": {
       "$ref": "#/$defs/SchemaRef"
      },
      "max": {
       "type": "number"
      },
      "maxItems": {
       "format": "int64",
       "type": "integer"
      },
      "maxLength": {
       "format": "int64",
       "type": "integer"
      },
      "maxProps": {
       "format": "int64",
       "type": "integer"
      },
      "min": {
       "type": "number"
      },
      "minItems": {
       "format": "int64",
       "type": "integer"
      },
      "minLength": {
       "format": "int64",
       "type": "integer"
      },
      "minProps": {
       "format": "int64",
       "type": "integer"
      },
      "multipleOf": {
       "type": "number"
      },
      "not": {
       "$ref": "#/$defs/SchemaRef"
      },
      "nullable": {
       "type": "boolean"
      },
      "oneOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "pattern": {
       "type": "string"
      },
      "properties": {
       "$ref": "#/$defs/Schemas"
      },
      "readOnly": {
       "type": "boolean"
      },
      "required": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "title": {
       "type": "string"
      },
      "type": {
       "type": "string"
      },
      "uniqueItems": {
       "type": "boolean"
      },
      "writeOnly": {
       "type": "boolean"
      },
      "xml": {
       "properties": {
        "attribute": {
         "type": "boolean"
        },
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "name": {
         "type": "string"
        },
        "namespace": {
         "type": "string"
        },
        "prefix": {
         "type": "string"
        },
        "wrapped": {
         "type": "boolean"
        }
       },
       "type": "object"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "List all available Configs",
    "isInternal": false,
    "name": "list",
    "parameters": {
     "type": "object"
    },
    "result": {
     "additionalProperties": true,
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Set a specific Config value in the configuration file",
    "isInternal": false,
    "name": "set",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the desired config",
       "type": "string"
      },
      "value": {
       "description": "New flag value"
      }
     },
     "required": [
      "key",
      "value"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   }
  ],
  "description": "Configuration values are available to be set so that they persist between\ndifferent executions of the MgcSDK. They reside in a YAML file when set.\nConfig values may also be loaded via Environment Variables. Any Config available\n(see 'list') may be exported as an env variable in uppercase with the 'MGC_' prefix",
  "isInternal": false,
  "name": "config",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a database backup.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_id": {
         "format": "uuid",
         "title": "Backup Id",
         "type": "string"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        }
       },
       "required": [
        "backup_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get a backup detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_id": {
         "format": "uuid",
         "title": "Backup Id",
         "type": "string"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        }
       },
       "required": [
        "backup_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "db_size": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Db Size",
         "type": "integer"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        },
        "location": {
         "title": "Location",
         "type": "string"
        },
        "mode": {
         "description": "An enumeration.",
         "enum": [
          "FULL",
          "INCREMENTAL"
         ],
         "title": "BackupMode",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "size": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Size",
         "type": "integer"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "PENDING",
          "CREATING",
          "CREATED",
          "ERROR",
          "DELETING",
          "DELETED",
          "ERROR_DELETING"
         ],
         "title": "BackupStatusResponse",
         "type": "string"
        },
        "type": {
         "description": "An enumeration.",
         "enum": [
          "ON_DEMAND",
          "AUTOMATED"
         ],
         "title": "BackupType",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        }
       },
       "required": [
        "id",
        "instance_id",
        "type",
        "status",
        "mode",
        "created_at"
       ],
       "title": "BackupDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List all backups.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 10,
         "maximum": 50,
         "minimum": 1,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "mode": {
         "description": "An enumeration.",
         "enum": [
          "FULL",
          "INCREMENTAL"
         ],
         "title": "BackupMode",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "PENDING",
          "CREATING",
          "CREATED",
          "ERROR",
          "DELETING",
          "DELETED",
          "ERROR_DELETING"
         ],
         "title": "BackupStatusResponse",
         "type": "string"
        },
        "type": {
         "description": "An enumeration.",
         "enum": [
          "ON_DEMAND",
          "AUTOMATED"
         ],
         "title": "BackupType",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "meta": {
         "properties": {
          "page": {
           "properties": {
            "count": {
             "description": "The number of items on the current page.",
             "title": "Count",
             "type": "integer"
            },
            "limit": {
             "description": "The maximum number of items per page.",
             "title": "Limit",
             "type": "integer"
            },
            "max_limit": {
             "description": "The maximum allowable limit for the number of items per page.",
             "title": "Max Limit",
             "type": "integer"
            },
            "offset": {
             "description": "The number of items to skip before starting to collect the result set.",
             "title": "Offset",
             "type": "integer"
            },
            "total": {
             "description": "The total number of items available across all pages.",
             "title": "Total",
             "type": "integer"
            }
           },
           "required": [
            "offset",
            "limit",
            "count",
            "total",
            "max_limit"
           ],
           "title": "PageResponse",
           "type": "object"
          }
         },
         "required": [
          "page"
         ],
         "title": "MetaResponse",
         "type": "object"
        },
        "results": {
         "items": {
          "properties": {
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "db_size": {
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Db Size",
            "type": "integer"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "instance_id": {
            "format": "uuid",
            "title": "Instance Id",
            "type": "string"
           },
           "location": {
            "title": "Location",
            "type": "string"
           },
           "mode": {
            "description": "An enumeration.",
            "enum": [
             "FULL",
             "INCREMENTAL"
            ],
            "title": "BackupMode",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "size": {
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Size",
            "type": "integer"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "PENDING",
             "CREATING",
             "CREATED",
             "ERROR",
             "DELETING",
             "DELETED",
             "ERROR_DELETING"
            ],
            "title": "BackupStatusResponse",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "ON_DEMAND",
             "AUTOMATED"
            ],
            "title": "BackupType",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           }
          },
          "required": [
           "id",
           "instance_id",
           "type",
           "status",
           "mode",
           "created_at"
          ],
          "title": "BackupDetailResponse",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "meta",
        "results"
       ],
       "title": "BackupsResponse",
       "type": "object"
      },
      "version": "1.17.2"
     }
    ],
    "description": "Database backups management.",
    "isInternal": false,
    "name": "backups",
    "version": "1.17.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a engine detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "engine_id": {
         "description": "Value referring to Engine Id.",
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        }
       },
       "required": [
        "engine_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "engine": {
         "deprecated": true,
         "title": "Engine",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "title": "EngineStatus",
         "type": "string"
        },
        "version": {
         "title": "Version",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name",
        "engine",
        "version",
        "status"
       ],
       "title": "EngineResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of available datastore.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 10,
         "maximum": 50,
         "minimum": 1,
         "title": "Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "status": {
         "description": "Value referring to engine status.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "meta": {
         "properties": {
          "page": {
           "properties": {
            "count": {
             "description": "The number of items on the current page.",
             "title": "Count",
             "type": "integer"
            },
            "limit": {
             "description": "The maximum number of items per page.",
             "title": "Limit",
             "type": "integer"
            },
            "max_limit": {
             "description": "The maximum allowable limit for the number of items per page.",
             "title": "Max Limit",
             "type": "integer"
            },
            "offset": {
             "description": "The number of items to skip before starting to collect the result set.",
             "title": "Offset",
             "type": "integer"
            },
            "total": {
             "description": "The total number of items available across all pages.",
             "title": "Total",
             "type": "integer"
            }
           },
           "required": [
            "offset",
            "limit",
            "count",
            "total",
            "max_limit"
           ],
           "title": "PageResponse",
           "type": "object"
          }
         },
         "required": [
          "page"
         ],
         "title": "MetaResponse",
         "type": "object"
        },
        "results": {
         "items": {
          "properties": {
           "engine": {
            "deprecated": true,
            "title": "Engine",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "ACTIVE",
             "DEPRECATED"
            ],
            "title": "EngineStatus",
            "type": "string"
           },
           "version": {
            "title": "Version",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "engine",
           "version",
           "status"
          ],
          "title": "EngineResponse",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "meta",
        "results"
       ],
       "title": "EnginesResponse",
       "type": "object"
      },
      "version": "1.17.2"
     }
    ],
    "description": "Datastores available for database instances.",
    "isInternal": true,
    "name": "datastores",
    "version": "1.17.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a engine detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "engine_id": {
         "description": "Value referring to Engine Id.",
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        }
       },
       "required": [
        "engine_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "engine": {
         "deprecated": true,
         "title": "Engine",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "title": "EngineStatus",
         "type": "string"
        },
        "version": {
         "title": "Version",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name",
        "engine",
        "version",
        "status"
       ],
       "title": "EngineResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of available engines.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 10,
         "maximum": 50,
         "minimum": 1,
         "title": "Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "status": {
         "description": "Value referring to engine status.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "meta": {
         "properties": {
          "page": {
           "properties": {
            "count": {
             "description": "The number of items on the current page.",
             "title": "Count",
             "type": "integer"
            },
            "limit": {
             "description": "The maximum number of items per page.",
             "title": "Limit",
             "type": "integer"
            },
            "max_limit": {
             "description": "The maximum allowable limit for the number of items per page.",
             "title": "Max Limit",
             "type": "integer"
            },
            "offset": {
             "description": "The number of items to skip before starting to collect the result set.",
             "title": "Offset",
             "type": "integer"
            },
            "total": {
             "description": "The total number of items available across all pages.",
             "title": "Total",
             "type": "integer"
            }
           },
           "required": [
            "offset",
            "limit",
            "count",
            "total",
            "max_limit"
           ],
           "title": "PageResponse",
           "type": "object"
          }
         },
         "required": [
          "page"
         ],
         "title": "MetaResponse",
         "type": "object"
        },
        "results": {
         "items": {
          "properties": {
           "engine": {
            "deprecated": true,
            "title": "Engine",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "ACTIVE",
             "DEPRECATED"
            ],
            "title": "EngineStatus",
            "type": "string"
           },
           "version": {
            "title": "Version",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "engine",
           "version",
           "status"
          ],
          "title": "EngineResponse",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "meta",
        "results"
       ],
       "title": "EnginesResponse",
       "type": "object"
      },
      "version": "1.17.2"
     }
    ],
    "description": "Engines available for database instances.",
    "isInternal": false,
    "name": "engines",
    "version": "1.17.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a flavor detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "flavor_id": {
         "description": "Flavor Unique Id.",
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        }
       },
       "required": [
        "flavor_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "family_description": {
         "title": "Family Description",
         "type": "string"
        },
        "family_slug": {
         "title": "Family Slug",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "label": {
         "title": "Label",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "ram": {
         "title": "Ram",
         "type": "string"
        },
        "size": {
         "title": "Size",
         "type": "string"
        },
        "sku_replica": {
         "title": "Sku Replica",
         "type": "string"
        },
        "sku_source": {
         "title": "Sku Source",
         "type": "string"
        },
        "vcpu": {
         "title": "Vcpu",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name",
        "label",
        "family_description",
        "family_slug",
        "size",
        "sku_source",
        "sku_replica",
        "vcpu",
        "ram"
       ],
       "title": "FlavorResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of available flavors. A flavor is a hardware template that defines the size of RAM and vcpu.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 10,
         "maximum": 50,
         "minimum": 1,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "status": {
         "default": "ACTIVE",
         "description": "An enumeration.",
         "enum": [
          "ACTIVE",
          "DEPRECATED"
         ],
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "meta": {
         "properties": {
          "page": {
           "properties": {
            "count": {
             "description": "The number of items on the current page.",
             "title": "Count",
             "type": "integer"
            },
            "limit": {
             "description": "The maximum number of items per page.",
             "title": "Limit",
             "type": "integer"
            },
            "max_limit": {
             "description": "The maximum allowable limit for the number of items per page.",
             "title": "Max Limit",
             "type": "integer"
            },
            "offset": {
             "description": "The number of items to skip before starting to collect the result set.",
             "title": "Offset",
             "type": "integer"
            },
            "total": {
             "description": "The total number of items available across all pages.",
             "title": "Total",
             "type": "integer"
            }
           },
           "required": [
            "offset",
            "limit",
            "count",
            "total",
            "max_limit"
           ],
           "title": "PageResponse",
           "type": "object"
          }
         },
         "required": [
          "page"
         ],
         "title": "MetaResponse",
         "type": "object"
        },
        "results": {
         "items": {
          "properties": {
           "family_description": {
            "title": "Family Description",
            "type": "string"
           },
           "family_slug": {
            "title": "Family Slug",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "label": {
            "title": "Label",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "ram": {
            "title": "Ram",
            "type": "string"
           },
           "size": {
            "title": "Size",
            "type": "string"
           },
           "sku_replica": {
            "title": "Sku Replica",
            "type": "string"
           },
           "sku_source": {
            "title": "Sku Source",
            "type": "string"
           },
           "vcpu": {
            "title": "Vcpu",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "label",
           "family_description",
           "family_slug",
           "size",
           "sku_source",
           "sku_replica",
           "vcpu",
           "ram"
          ],
          "title": "FlavorResponse",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "meta",
        "results"
       ],
       "title": "FlavorsResponse",
       "type": "object"
      },
      "version": "1.17.2"
     }
    ],
    "description": "Flavors available for database instances.",
    "isInternal": false,
    "name": "flavors",
    "version": "1.17.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {},
      "version": "1.17.2"
     }
    ],
    "description": "Health check.",
    "isInternal": true,
    "name": "healthcheck",
    "version": "1.17.2"
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Creates a new backup asynchronously.",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "exchange": {
           "default": "dbaas-internal",
           "title": "Exchange",
           "type": "string"
          },
          "instance_id": {
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          },
          "mode": {
           "description": "An enumeration.",
           "enum": [
            "FULL"
           ],
           "title": "BackupModeRequest",
           "type": "string"
          }
         },
         "required": [
          "instance_id",
          "mode"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "id": {
           "format": "uuid",
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "BackupResponse",
         "type": "object"
        },
        "version": "1.17.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Deletes a database backup.",
        "isInternal": false,
        "name": "delete",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "backup_id": {
           "format": "uuid",
           "title": "Backup Id",
           "type": "string"
          },
          "exchange": {
           "default": "dbaas-internal",
           "title": "Exchange",
           "type": "string"
          },
          "instance_id": {
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          }
         },
         "required": [
          "backup_id",
          "instance_id"
         ],
         "type": "object"
        },
        "result": {},
        "version": "1.17.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Get a backup detail.",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "backup_id": {
           "format": "uuid",
           "title": "Backup Id",
           "type": "string"
          },
          "exchange": {
           "default": "dbaas-internal",
           "title": "Exchange",
           "type": "string"
          },
          "instance_id": {
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          }
         },
         "required": [
          "backup_id",
          "instance_id"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "created_at": {
           "format": "date-time",
           "title": "Created At",
           "type": "string"
          },
          "db_size": {
           "exclusiveMinimum": true,
           "minimum": 0,
           "title": "Db Size",
           "type": "integer"
          },
          "finished_at": {
           "format": "date-time",
           "title": "Finished At",
           "type": "string"
          },
          "id": {
           "format": "uuid",
           "title": "Id",
           "type": "string"
          },
          "instance_id": {
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          },
          "location": {
           "title": "Location",
           "type": "string"
          },
          "mode": {
           "description": "An enumeration.",
           "enum": [
            "FULL",
            "INCREMENTAL"
           ],
           "title": "BackupMode",
           "type": "string"
          },
          "name": {
           "title": "Name",
           "type": "string"
          },
          "size": {
           "exclusiveMinimum": true,
           "minimum": 0,
           "title": "Size",
           "type": "integer"
          },
          "started_at": {
           "format": "date-time",
           "title": "Started At",
           "type": "string"
          },
          "status": {
           "description": "An enumeration.",
           "enum": [
            "PENDING",
            "CREATING",
            "CREATED",
            "ERROR",
            "DELETING",
            "DELETED",
            "ERROR_DELETING"
           ],
           "title": "BackupStatusResponse",
           "type": "string"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "ON_DEMAND",
            "AUTOMATED"
           ],
           "title": "BackupType",
           "type": "string"
          },
          "updated_at": {
           "format": "date-time",
           "title": "Updated At",
           "type": "string"
          }
         },
         "required": [
          "id",
          "instance_id",
          "type",
          "status",
          "mode",
          "created_at"
         ],
         "title": "BackupDetailResponse",
         "type": "object"
        },
        "version": "1.17.2"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "List all backups.",
        "isInternal": false,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "_limit": {
           "default": 10,
           "maximum": 50,
           "minimum": 1,
           "title": " Limit",
           "type": "integer"
          },
          "_offset": {
           "default": 0,
           "minimum": 0,
           "title": "Offset",
           "type": "integer"
          },
          "exchange": {
           "default": "dbaas-internal",
           "title": "Exchange",
           "type": "string"
          },
          "instance_id": {
           "format": "uuid",
           "title": "Instance Id",
           "type": "string"
          },
          "mode": {
           "description": "An enumeration.",
           "enum": [
            "FULL",
            "INCREMENTAL"
           ],
           "title": "BackupMode",
           "type": "string"
          },
          "status": {
           "description": "An enumeration.",
           "enum": [
            "PENDING",
            "CREATING",
            "CREATED",
            "ERROR",
            "DELETING",
            "DELETED",
            "ERROR_DELETING"
           ],
           "title": "BackupStatusResponse",
           "type": "string"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "ON_DEMAND",
            "AUTOMATED"
           ],
           "title": "BackupType",
           "type": "string"
          }
         },
         "required": [
          "instance_id"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "meta": {
           "properties": {
            "page": {
             "properties": {
              "count": {
               "description": "The number of items on the current page.",
               "title": "Count",
               "type": "integer"
              },
              "limit": {
               "description": "The maximum number of items per page.",
               "title": "Limit",
               "type": "integer"
              },
              "max_limit": {
               "description": "The maximum allowable limit for the number of items per page.",
               "title": "Max Limit",
               "type": "integer"
              },
              "offset": {
               "description": "The number of items to skip before starting to collect the result set.",
               "title": "Offset",
               "type": "integer"
              },
              "total": {
               "description": "The total number of items available across all pages.",
               "title": "Total",
               "type": "integer"
              }
             },
             "required": [
              "offset",
              "limit",
              "count",
              "total",
              "max_limit"
             ],
             "title": "PageResponse",
             "type": "object"
            }
           },
           "required": [
            "page"
           ],
           "title": "MetaResponse",
           "type": "object"
          },
          "results": {
           "items": {
            "properties": {
             "created_at": {
              "format": "date-time",
              "title": "Created At",
              "type": "string"
             },
             "db_size": {
              "exclusiveMinimum": true,
              "minimum": 0,
              "title": "Db Size",
              "type": "integer"
             },
             "finished_at": {
              "format": "date-time",
              "title": "Finished At",
              "type": "string"
             },
             "id": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
             },
             "instance_id": {
              "format": "uuid",
              "title": "Instance Id",
              "type": "string"
             },
             "location": {
              "title": "Location",
              "type": "string"
             },
             "mode": {
              "description": "An enumeration.",
              "enum": [
               "FULL",
               "INCREMENTAL"
              ],
              "title": "BackupMode",
              "type": "string"
             },
             "name": {
              "title": "Name",
              "type": "string"
             },
             "size": {
              "exclusiveMinimum": true,
              "minimum": 0,
              "title": "Size",
              "type": "integer"
             },
             "started_at": {
              "format": "date-time",
              "title": "Started At",
              "type": "string"
             },
             "status": {
              "description": "An enumeration.",
              "enum": [
               "PENDING",
               "CREATING",
               "CREATED",
               "ERROR",
               "DELETING",
               "DELETED",
               "ERROR_DELETING"
              ],
              "title": "BackupStatusResponse",
              "type": "string"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "ON_DEMAND",
               "AUTOMATED"
              ],
              "title": "BackupType",
              "type": "string"
             },
             "updated_at": {
              "format": "date-time",
              "title": "Updated At",
              "type": "string"
             }
            },
            "required": [
             "id",
             "instance_id",
             "type",
             "status",
             "mode",
             "created_at"
            ],
            "title": "BackupDetailResponse",
            "type": "object"
           },
           "title": "Results",
           "type": "array"
          }
         },
         "required": [
          "meta",
          "results"
         ],
         "title": "BackupsResponse",
         "type": "object"
        },
        "version": "1.17.2"
       }
      ],
      "description": "Database instances management. | backups",
      "isInternal": false,
      "name": "backups",
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Creates a new database instance asynchronously for a tenant.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_retention_days": {
         "default": 7,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "default": "04:00:00",
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "example": "063f3994-b6c2-4c37-96c9-bab8d82d36f7",
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "flavor_id": {
         "example": "8bbe8e01-40c8-4d2b-80e8-189debc44b1c",
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "name": {
         "example": "dbaas-name",
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "password": {
         "example": "dbaas-password",
         "maxLength": 50,
         "title": "Password",
         "type": "string"
        },
        "user": {
         "example": "dbaas-user",
         "maxLength": 25,
         "title": "User",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "default": "CLOUD_NVME_15K",
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "example": "CLOUD_NVME",
           "type": "string"
          }
         },
         "required": [
          "size"
         ],
         "title": "InstanceVolumeRequest",
         "type": "object"
        }
       },
       "required": [
        "flavor_id",
        "name",
        "password",
        "user",
        "volume"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "InstanceResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a database instance.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a database instance detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_expand": {
         "description": "\nInstance extra attributes or relations to show with the main query. When available, more than one value\ncan be informed using commas. e.g: `_expand=value1,value2`",
         "enum": [
          "replicas"
         ],
         "type": "string"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "instance_id": {
         "description": "Database Instance Unique Id.",
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "InstanceAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "An enumeration.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "AddressAccess",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "description": "An enumeration.",
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "AddressType",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "ReplicaAddressResponse",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "deprecated": true,
            "format": "uuid",
            "title": "Datastore Id",
            "type": "string"
           },
           "engine_id": {
            "format": "uuid",
            "title": "Engine Id",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "generation": {
            "description": "An enumeration.",
            "enum": [
             "G0B",
             "G1B",
             "G2B",
             "G3B"
            ],
            "title": "InstanceGeneration",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING",
             "MAINTENANCE"
            ],
            "title": "InstanceStatusResponse",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "maximum": 50000,
              "minimum": 10,
              "title": "Size",
              "type": "integer"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "title": "VolumeType",
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "title": "ReplicaVolumeResponse",
            "type": "object"
           }
          },
          "required": [
           "id",
           "source_id",
           "name",
           "engine_id",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "generation",
           "created_at"
          ],
          "title": "ReplicaDetailResponse",
          "type": "object"
         },
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "InstanceVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at",
        "backup_retention_days",
        "backup_start_at"
       ],
       "title": "InstanceDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of database instances for a x-tenant-id.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_expand": {
         "description": "\nInstance extra attributes or relations to show with the main query. When available, more than one value\ncan be informed using commas. e.g: `_expand=value1,value2`",
         "enum": [
          "replicas"
         ],
         "type": "string"
        },
        "_limit": {
         "default": 10,
         "maximum": 25,
         "minimum": 1,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "meta": {
         "properties": {
          "page": {
           "properties": {
            "count": {
             "description": "The number of items on the current page.",
             "title": "Count",
             "type": "integer"
            },
            "limit": {
             "description": "The maximum number of items per page.",
             "title": "Limit",
             "type": "integer"
            },
            "max_limit": {
             "description": "The maximum allowable limit for the number of items per page.",
             "title": "Max Limit",
             "type": "integer"
            },
            "offset": {
             "description": "The number of items to skip before starting to collect the result set.",
             "title": "Offset",
             "type": "integer"
            },
            "total": {
             "description": "The total number of items available across all pages.",
             "title": "Total",
             "type": "integer"
            }
           },
           "required": [
            "offset",
            "limit",
            "count",
            "total",
            "max_limit"
           ],
           "title": "PageResponse",
           "type": "object"
          }
         },
         "required": [
          "page"
         ],
         "title": "MetaResponse",
         "type": "object"
        },
        "results": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "An enumeration.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "AddressAccess",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "description": "An enumeration.",
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "AddressType",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "InstanceAddressResponse",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "backup_retention_days": {
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Backup Retention Days",
            "type": "integer"
           },
           "backup_start_at": {
            "format": "time",
            "title": "Backup Start At",
            "type": "string"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "deprecated": true,
            "format": "uuid",
            "title": "Datastore Id",
            "type": "string"
           },
           "engine_id": {
            "format": "uuid",
            "title": "Engine Id",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "generation": {
            "description": "An enumeration.",
            "enum": [
             "G0B",
             "G1B",
             "G2B",
             "G3B"
            ],
            "title": "InstanceGeneration",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "maxLength": 100,
            "title": "Name",
            "type": "string"
           },
           "replicas": {
            "items": {
             "properties": {
              "addresses": {
               "items": {
                "properties": {
                 "access": {
                  "description": "An enumeration.",
                  "enum": [
                   "PRIVATE",
                   "PUBLIC"
                  ],
                  "title": "AddressAccess",
                  "type": "string"
                 },
                 "address": {
                  "title": "Address",
                  "type": "string"
                 },
                 "type": {
                  "description": "An enumeration.",
                  "enum": [
                   "IPv4",
                   "IPv6"
                  ],
                  "title": "AddressType",
                  "type": "string"
                 }
                },
                "required": [
                 "access"
                ],
                "title": "ReplicaAddressResponse",
                "type": "object"
               },
               "title": "Addresses",
               "type": "array"
              },
              "created_at": {
               "format": "date-time",
               "title": "Created At",
               "type": "string"
              },
              "datastore_id": {
               "deprecated": true,
               "format": "uuid",
               "title": "Datastore Id",
               "type": "string"
              },
              "engine_id": {
               "format": "uuid",
               "title": "Engine Id",
               "type": "string"
              },
              "finished_at": {
               "format": "date-time",
               "title": "Finished At",
               "type": "string"
              },
              "flavor_id": {
               "format": "uuid",
               "title": "Flavor Id",
               "type": "string"
              },
              "generation": {
               "description": "An enumeration.",
               "enum": [
                "G0B",
                "G1B",
                "G2B",
                "G3B"
               ],
               "title": "InstanceGeneration",
               "type": "string"
              },
              "id": {
               "format": "uuid",
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "source_id": {
               "format": "uuid",
               "title": "Source Id",
               "type": "string"
              },
              "started_at": {
               "format": "date-time",
               "title": "Started At",
               "type": "string"
              },
              "status": {
               "description": "An enumeration.",
               "enum": [
                "CREATING",
                "ERROR",
                "STOPPED",
                "REBOOT",
                "PENDING",
                "RESIZING",
                "DELETED",
                "ACTIVE",
                "STARTING",
                "STOPPING",
                "BACKING_UP",
                "DELETING",
                "RESTORING",
                "ERROR_DELETING",
                "MAINTENANCE"
               ],
               "title": "InstanceStatusResponse",
               "type": "string"
              },
              "updated_at": {
               "format": "date-time",
               "title": "Updated At",
               "type": "string"
              },
              "volume": {
               "properties": {
                "size": {
                 "maximum": 50000,
                 "minimum": 10,
                 "title": "Size",
                 "type": "integer"
                },
                "type": {
                 "description": "An enumeration.",
                 "enum": [
                  "CLOUD_NVME",
                  "CLOUD_HDD",
                  "CLOUD_NVME_15K"
                 ],
                 "title": "VolumeType",
                 "type": "string"
                }
               },
               "required": [
                "size",
                "type"
               ],
               "title": "ReplicaVolumeResponse",
               "type": "object"
              }
             },
             "required": [
              "id",
              "source_id",
              "name",
              "engine_id",
              "datastore_id",
              "flavor_id",
              "volume",
              "addresses",
              "status",
              "generation",
              "created_at"
             ],
             "title": "ReplicaDetailResponse",
             "type": "object"
            },
            "title": "Replicas",
            "type": "array"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING",
             "MAINTENANCE"
            ],
            "title": "InstanceStatusResponse",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "maximum": 50000,
              "minimum": 10,
              "title": "Size",
              "type": "integer"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "title": "VolumeType",
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "title": "InstanceVolumeResponse",
            "type": "object"
           }
          },
          "required": [
           "id",
           "name",
           "engine_id",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "generation",
           "created_at",
           "backup_retention_days",
           "backup_start_at"
          ],
          "title": "InstanceDetailResponse",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "meta",
        "results"
       ],
       "title": "InstancesResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Resizes a database instance.",
      "isInternal": false,
      "name": "resize",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "example": 30,
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "default": "CLOUD_NVME_15K",
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "example": "CLOUD_NVME",
           "type": "string"
          }
         },
         "required": [
          "size"
         ],
         "title": "InstanceVolumeRequest",
         "type": "object"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "InstanceAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "An enumeration.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "AddressAccess",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "description": "An enumeration.",
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "AddressType",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "ReplicaAddressResponse",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "deprecated": true,
            "format": "uuid",
            "title": "Datastore Id",
            "type": "string"
           },
           "engine_id": {
            "format": "uuid",
            "title": "Engine Id",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "generation": {
            "description": "An enumeration.",
            "enum": [
             "G0B",
             "G1B",
             "G2B",
             "G3B"
            ],
            "title": "InstanceGeneration",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING",
             "MAINTENANCE"
            ],
            "title": "InstanceStatusResponse",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "maximum": 50000,
              "minimum": 10,
              "title": "Size",
              "type": "integer"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "title": "VolumeType",
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "title": "ReplicaVolumeResponse",
            "type": "object"
           }
          },
          "required": [
           "id",
           "source_id",
           "name",
           "engine_id",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "generation",
           "created_at"
          ],
          "title": "ReplicaDetailResponse",
          "type": "object"
         },
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "InstanceVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at",
        "backup_retention_days",
        "backup_start_at"
       ],
       "title": "InstanceDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Restores a backup for an instance asynchronously.",
      "isInternal": false,
      "name": "restores",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_id": {
         "format": "uuid",
         "title": "Backup Id",
         "type": "string"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        }
       },
       "required": [
        "backup_id",
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "RestoreResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Starts a database instance.",
      "isInternal": false,
      "name": "start",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "InstanceAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "An enumeration.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "AddressAccess",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "description": "An enumeration.",
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "AddressType",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "ReplicaAddressResponse",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "deprecated": true,
            "format": "uuid",
            "title": "Datastore Id",
            "type": "string"
           },
           "engine_id": {
            "format": "uuid",
            "title": "Engine Id",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "generation": {
            "description": "An enumeration.",
            "enum": [
             "G0B",
             "G1B",
             "G2B",
             "G3B"
            ],
            "title": "InstanceGeneration",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING",
             "MAINTENANCE"
            ],
            "title": "InstanceStatusResponse",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "maximum": 50000,
              "minimum": 10,
              "title": "Size",
              "type": "integer"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "title": "VolumeType",
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "title": "ReplicaVolumeResponse",
            "type": "object"
           }
          },
          "required": [
           "id",
           "source_id",
           "name",
           "engine_id",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "generation",
           "created_at"
          ],
          "title": "ReplicaDetailResponse",
          "type": "object"
         },
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "InstanceVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at",
        "backup_retention_days",
        "backup_start_at"
       ],
       "title": "InstanceDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Stops a database instance.",
      "isInternal": false,
      "name": "stop",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "InstanceAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "An enumeration.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "AddressAccess",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "description": "An enumeration.",
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "AddressType",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "ReplicaAddressResponse",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "deprecated": true,
            "format": "uuid",
            "title": "Datastore Id",
            "type": "string"
           },
           "engine_id": {
            "format": "uuid",
            "title": "Engine Id",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "generation": {
            "description": "An enumeration.",
            "enum": [
             "G0B",
             "G1B",
             "G2B",
             "G3B"
            ],
            "title": "InstanceGeneration",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING",
             "MAINTENANCE"
            ],
            "title": "InstanceStatusResponse",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "maximum": 50000,
              "minimum": 10,
              "title": "Size",
              "type": "integer"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "title": "VolumeType",
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "title": "ReplicaVolumeResponse",
            "type": "object"
           }
          },
          "required": [
           "id",
           "source_id",
           "name",
           "engine_id",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "generation",
           "created_at"
          ],
          "title": "ReplicaDetailResponse",
          "type": "object"
         },
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "InstanceVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at",
        "backup_retention_days",
        "backup_start_at"
       ],
       "title": "InstanceDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Updates a database instance.",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "backup_retention_days": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "instance_id": {
         "format": "uuid",
         "title": "Instance Id",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "ACTIVE",
          "STOPPED"
         ],
         "title": "InstanceUpdateStatus",
         "type": "string"
        }
       },
       "required": [
        "instance_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "InstanceAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "backup_retention_days": {
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": "Backup Retention Days",
         "type": "integer"
        },
        "backup_start_at": {
         "format": "time",
         "title": "Backup Start At",
         "type": "string"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 100,
         "title": "Name",
         "type": "string"
        },
        "replicas": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "An enumeration.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "AddressAccess",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "description": "An enumeration.",
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "AddressType",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "ReplicaAddressResponse",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "deprecated": true,
            "format": "uuid",
            "title": "Datastore Id",
            "type": "string"
           },
           "engine_id": {
            "format": "uuid",
            "title": "Engine Id",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "generation": {
            "description": "An enumeration.",
            "enum": [
             "G0B",
             "G1B",
             "G2B",
             "G3B"
            ],
            "title": "InstanceGeneration",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING",
             "MAINTENANCE"
            ],
            "title": "InstanceStatusResponse",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "maximum": 50000,
              "minimum": 10,
              "title": "Size",
              "type": "integer"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "title": "VolumeType",
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "title": "ReplicaVolumeResponse",
            "type": "object"
           }
          },
          "required": [
           "id",
           "source_id",
           "name",
           "engine_id",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "generation",
           "created_at"
          ],
          "title": "ReplicaDetailResponse",
          "type": "object"
         },
         "title": "Replicas",
         "type": "array"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "InstanceVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at",
        "backup_retention_days",
        "backup_start_at"
       ],
       "title": "InstanceDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     }
    ],
    "description": "Database instances management.",
    "isInternal": false,
    "name": "instances",
    "version": "1.17.2"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Creates a new replica for an instance asynchronously.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        }
       },
       "required": [
        "name",
        "source_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "ReplicaResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a replica instance.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "replica_id": {
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get an instance replica detail.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "replica_id": {
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "ReplicaAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "ReplicaVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "source_id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at"
       ],
       "title": "ReplicaDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List all replicas for a given instance.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 10,
         "maximum": 50,
         "minimum": 1,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": "Offset",
         "type": "integer"
        },
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "properties": {
        "meta": {
         "properties": {
          "page": {
           "properties": {
            "count": {
             "description": "The number of items on the current page.",
             "title": "Count",
             "type": "integer"
            },
            "limit": {
             "description": "The maximum number of items per page.",
             "title": "Limit",
             "type": "integer"
            },
            "max_limit": {
             "description": "The maximum allowable limit for the number of items per page.",
             "title": "Max Limit",
             "type": "integer"
            },
            "offset": {
             "description": "The number of items to skip before starting to collect the result set.",
             "title": "Offset",
             "type": "integer"
            },
            "total": {
             "description": "The total number of items available across all pages.",
             "title": "Total",
             "type": "integer"
            }
           },
           "required": [
            "offset",
            "limit",
            "count",
            "total",
            "max_limit"
           ],
           "title": "PageResponse",
           "type": "object"
          }
         },
         "required": [
          "page"
         ],
         "title": "MetaResponse",
         "type": "object"
        },
        "results": {
         "items": {
          "properties": {
           "addresses": {
            "items": {
             "properties": {
              "access": {
               "description": "An enumeration.",
               "enum": [
                "PRIVATE",
                "PUBLIC"
               ],
               "title": "AddressAccess",
               "type": "string"
              },
              "address": {
               "title": "Address",
               "type": "string"
              },
              "type": {
               "description": "An enumeration.",
               "enum": [
                "IPv4",
                "IPv6"
               ],
               "title": "AddressType",
               "type": "string"
              }
             },
             "required": [
              "access"
             ],
             "title": "ReplicaAddressResponse",
             "type": "object"
            },
            "title": "Addresses",
            "type": "array"
           },
           "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
           },
           "datastore_id": {
            "deprecated": true,
            "format": "uuid",
            "title": "Datastore Id",
            "type": "string"
           },
           "engine_id": {
            "format": "uuid",
            "title": "Engine Id",
            "type": "string"
           },
           "finished_at": {
            "format": "date-time",
            "title": "Finished At",
            "type": "string"
           },
           "flavor_id": {
            "format": "uuid",
            "title": "Flavor Id",
            "type": "string"
           },
           "generation": {
            "description": "An enumeration.",
            "enum": [
             "G0B",
             "G1B",
             "G2B",
             "G3B"
            ],
            "title": "InstanceGeneration",
            "type": "string"
           },
           "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "source_id": {
            "format": "uuid",
            "title": "Source Id",
            "type": "string"
           },
           "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
           },
           "status": {
            "description": "An enumeration.",
            "enum": [
             "CREATING",
             "ERROR",
             "STOPPED",
             "REBOOT",
             "PENDING",
             "RESIZING",
             "DELETED",
             "ACTIVE",
             "STARTING",
             "STOPPING",
             "BACKING_UP",
             "DELETING",
             "RESTORING",
             "ERROR_DELETING",
             "MAINTENANCE"
            ],
            "title": "InstanceStatusResponse",
            "type": "string"
           },
           "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
           },
           "volume": {
            "properties": {
             "size": {
              "maximum": 50000,
              "minimum": 10,
              "title": "Size",
              "type": "integer"
             },
             "type": {
              "description": "An enumeration.",
              "enum": [
               "CLOUD_NVME",
               "CLOUD_HDD",
               "CLOUD_NVME_15K"
              ],
              "title": "VolumeType",
              "type": "string"
             }
            },
            "required": [
             "size",
             "type"
            ],
            "title": "ReplicaVolumeResponse",
            "type": "object"
           }
          },
          "required": [
           "id",
           "source_id",
           "name",
           "engine_id",
           "datastore_id",
           "flavor_id",
           "volume",
           "addresses",
           "status",
           "generation",
           "created_at"
          ],
          "title": "ReplicaDetailResponse",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "meta",
        "results"
       ],
       "title": "ReplicasResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Resize an instance replica.",
      "isInternal": false,
      "name": "resize",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "replica_id": {
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "flavor_id",
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "ReplicaAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "ReplicaVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "source_id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at"
       ],
       "title": "ReplicaDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Start an instance replica.",
      "isInternal": false,
      "name": "start",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "replica_id": {
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "ReplicaAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "ReplicaVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "source_id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at"
       ],
       "title": "ReplicaDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Stop an instance replica.",
      "isInternal": false,
      "name": "stop",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "exchange": {
         "default": "dbaas-internal",
         "title": "Exchange",
         "type": "string"
        },
        "replica_id": {
         "format": "uuid",
         "title": "Replica Id",
         "type": "string"
        }
       },
       "required": [
        "replica_id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "addresses": {
         "items": {
          "properties": {
           "access": {
            "description": "An enumeration.",
            "enum": [
             "PRIVATE",
             "PUBLIC"
            ],
            "title": "AddressAccess",
            "type": "string"
           },
           "address": {
            "title": "Address",
            "type": "string"
           },
           "type": {
            "description": "An enumeration.",
            "enum": [
             "IPv4",
             "IPv6"
            ],
            "title": "AddressType",
            "type": "string"
           }
          },
          "required": [
           "access"
          ],
          "title": "ReplicaAddressResponse",
          "type": "object"
         },
         "title": "Addresses",
         "type": "array"
        },
        "created_at": {
         "format": "date-time",
         "title": "Created At",
         "type": "string"
        },
        "datastore_id": {
         "deprecated": true,
         "format": "uuid",
         "title": "Datastore Id",
         "type": "string"
        },
        "engine_id": {
         "format": "uuid",
         "title": "Engine Id",
         "type": "string"
        },
        "finished_at": {
         "format": "date-time",
         "title": "Finished At",
         "type": "string"
        },
        "flavor_id": {
         "format": "uuid",
         "title": "Flavor Id",
         "type": "string"
        },
        "generation": {
         "description": "An enumeration.",
         "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B"
         ],
         "title": "InstanceGeneration",
         "type": "string"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        },
        "source_id": {
         "format": "uuid",
         "title": "Source Id",
         "type": "string"
        },
        "started_at": {
         "format": "date-time",
         "title": "Started At",
         "type": "string"
        },
        "status": {
         "description": "An enumeration.",
         "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
         ],
         "title": "InstanceStatusResponse",
         "type": "string"
        },
        "updated_at": {
         "format": "date-time",
         "title": "Updated At",
         "type": "string"
        },
        "volume": {
         "properties": {
          "size": {
           "maximum": 50000,
           "minimum": 10,
           "title": "Size",
           "type": "integer"
          },
          "type": {
           "description": "An enumeration.",
           "enum": [
            "CLOUD_NVME",
            "CLOUD_HDD",
            "CLOUD_NVME_15K"
           ],
           "title": "VolumeType",
           "type": "string"
          }
         },
         "required": [
          "size",
          "type"
         ],
         "title": "ReplicaVolumeResponse",
         "type": "object"
        }
       },
       "required": [
        "id",
        "source_id",
        "name",
        "engine_id",
        "datastore_id",
        "flavor_id",
        "volume",
        "addresses",
        "status",
        "generation",
        "created_at"
       ],
       "title": "ReplicaDetailResponse",
       "type": "object"
      },
      "version": "1.17.2"
     }
    ],
    "description": "Database replicas management.",
    "isInternal": false,
    "name": "replicas",
    "version": "1.17.2"
   }
  ],
  "description": "DBaaS API Product.",
  "isInternal": false,
  "name": "dbaas",
  "version": "1.17.2"
 },
 {
  "children": [
   {
    "configs": {
     "properties": {
      "region": {
       "default": "br-ne-1",
       "description": "Region to reach the service",
       "enum": [
        "br-ne-1",
        "br-se-1",
        "br-mgl-1"
       ],
       "type": "string"
      },
      "serverUrl": {
       "description": "Manually specify the server to use",
       "format": "uri",
       "type": "string"
      }
     },
     "type": "object"
    },
    "description": "Execute generic http request",
    "isInternal": false,
    "name": "do",
    "parameters": {
     "properties": {
      "body": {
       "type": "string"
      },
      "headers": {
       "additionalProperties": true,
       "type": "object"
      },
      "method": {
       "enum": [
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "OPTIONS",
        "HEAD",
        "PATCH",
        "TRACE"
       ],
       "type": "string"
      },
      "security": {
       "items": {
        "additionalProperties": true,
        "type": "object"
       },
       "type": "array"
      },
      "url": {
       "description": "Golang template with the URL",
       "type": "string"
      }
     },
     "required": [
      "url",
      "method"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "body": {
       "type": "string"
      },
      "code": {
       "type": "integer"
      },
      "headers": {
       "additionalProperties": true,
       "type": "object"
      },
      "status": {
       "type": "string"
      }
     },
     "required": [
      "code",
      "status",
      "headers"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP DELETE",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP GET",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP HEAD",
      "isInternal": false,
      "name": "head",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP OPTIONS",
      "isInternal": false,
      "name": "options",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP PATCH",
      "isInternal": false,
      "name": "patch",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP POST",
      "isInternal": false,
      "name": "post",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP PUT",
      "isInternal": false,
      "name": "put",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP TRACE",
      "isInternal": false,
      "name": "trace",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "JSON HTTP access",
    "isInternal": false,
    "name": "json",
    "version": ""
   }
  ],
  "description": "HTTP access",
  "isInternal": true,
  "name": "http",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Creates a Kubernetes cluster in Magalu Cloud.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "default": "",
         "description": "A brief description of the Kubernetes cluster.\n",
         "example": "This is an example cluster.",
         "type": "string"
        },
        "enabled_bastion": {
         "default": false,
         "description": "Enables the use of a bastion host for secure access to the cluster.\n",
         "example": false,
         "type": "boolean"
        },
        "enabled_server_group": {
         "default": true,
         "description": "Enables the use of a server group with anti-affinity policy during the creation of the cluster and its node pools.\n",
         "example": false,
         "type": "boolean"
        },
        "name": {
         "description": "Kubernetes cluster name. The name is primarily intended for idempotence, and must be unique within a namespace. The name cannot be changed.\nThe name must follow the following rules:\n  - must contain a maximum of 63 characters\n  - must contain only lowercase alphanumeric characters or '-'\n  - must start with an alphabetic character\n  - must end with an alphanumeric character\n",
         "example": "cluster-example",
         "type": "string"
        },
        "node_pools": {
         "description": "An array representing a set of nodes within a Kubernetes cluster.\n",
         "example": [
          {
           "auto_scale": {
            "max_replicas": 5,
            "min_replicas": 2
           },
           "flavor": "cloud-k8s.gp1.small",
           "name": "nodepool-example",
           "replicas": 3,
           "tags": [
            "tag-value1"
           ],
           "taints": [
            {
             "effect": "NoSchedule",
             "key": "example-key",
             "value": "valor1"
            }
           ]
          }
         ],
         "items": {
          "description": "Object of the node pool request",
          "properties": {
           "auto_scale": {
            "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
            "properties": {
             "max_replicas": {
              "default": 1,
              "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
              "example": 5,
              "minimum": 1,
              "type": "integer"
             },
             "min_replicas": {
              "default": 1,
              "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
              "example": 2,
              "minimum": 1,
              "type": "integer"
             }
            },
            "required": [
             "min_replicas",
             "max_replicas"
            ],
            "type": "object"
           },
           "flavor": {
            "description": "Definition of the CPU, RAM, and storage capacity of the nodes.\n\n| Flavor                     | vCPUs | RAM (GB) | Root Disk (GB) |\n|----------------------------|-------|----------|----------------|\n| cloud-k8s.gp1.small        | 2     | 4        | 20             |\n| cloud-k8s.gp1.medium       | 4     | 8        | 50             |\n| cloud-k8s.gp1.large        | 8     | 16       | 100            |\n| cloud-k8s.gp2.small        | 2     | 4        | 300            |\n| cloud-k8s.gp2.large        | 8     | 32       | 300            |\n| cloud-k8s.hm1.medium       | 4     | 16       | 50             |\n| cloud-k8s.i1-c48-r96-d300  | 48    | 96       | 300            |\n| cloud-k8s.i1-c1-r8-d100    | 1     | 8        | 100            |\n| cloud-k8s.i1-c8-r8-d40     | 8     | 8        | 40             |\n| cloud-k8s.i1-c4-r16-d100   | 4     | 16       | 100            |\n| cloud-k8s.i1-c4-r32-d100   | 4     | 32       | 100            |\n| cloud-k8s.i1-c8-r32-d100   | 8     | 32       | 100            |\n| cloud-k8s.i1-c16-r32-d40   | 16    | 32       | 40             |\n| cloud-k8s.i1-c16-r64-d100  | 16    | 64       | 100            |\n| cloud-k8s.i1-c32-r64-d100  | 32    | 64       | 100            |\n| cloud-k8s.i1-c32-r128-d500 | 32    | 128      | 500            |\n",
            "example": "cloud-k8s.gp1.small",
            "type": "string"
           },
           "name": {
            "description": "Name of the node pool. The name is primarily for idempotence and must be unique within a namespace. The name cannot be changed.\nThe name must follow the following rules:\n  - Must contain a maximum of 63 characters\n  - Must contain only lowercase alphanumeric characters or '-'\n  - Must start with an alphabetic character\n  - Must end with an alphanumeric character\n",
            "example": "nodepool-example",
            "type": "string"
           },
           "replicas": {
            "default": 1,
            "description": "Number of replicas of the nodes in the node pool.",
            "example": 3,
            "type": "integer"
           },
           "tags": {
            "description": "List of tags applied to the node pool.",
            "items": {
             "description": "Items from the list of tags applied to the node pool.",
             "example": "tag-value1",
             "type": "string"
            },
            "type": "array"
           },
           "taints": {
            "description": "Property associating a set of nodes.",
            "items": {
             "properties": {
              "effect": {
               "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "Key of the taint to be applied to the node.",
               "example": "example-key",
               "type": "string"
              },
              "value": {
               "description": "Value corresponding to the taint key.",
               "example": "value1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           }
          },
          "required": [
           "name",
           "flavor",
           "replicas"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "version": {
         "default": "v1.28.5",
         "description": "The native Kubernetes version of the cluster.\nPlease specify the Kubernetes version using the standard \"vX.Y.Z\" format.\n",
         "enum": [
          "v1.26.12",
          "v1.28.5"
         ],
         "example": "v1.28.5",
         "type": "string"
        }
       },
       "required": [
        "enabled_bastion",
        "name",
        "node_pools"
       ],
       "type": "object"
      },
      "result": {
       "description": "Object of the cluster response request.",
       "properties": {
        "id": {
         "description": "Cluster's UUID.",
         "example": "10113826-624a-4801-900f-6a5742433411",
         "format": "uuid",
         "type": "string"
        },
        "name": {
         "description": "Name of the Kubernetes cluster.",
         "example": "cluster-example",
         "type": "string"
        },
        "status": {
         "description": "Details about the status of the Kubernetes cluster or node.\n",
         "properties": {
          "message": {
           "description": "Detailed message about the status of the cluster or node.\n",
           "example": "Ready",
           "type": "string"
          },
          "state": {
           "description": "Current state of the cluster or node.\n\n| Component | Possible States                              |\n|-----------|---------------------------------------------|\n| Cluster   | Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed |\n| Node      | Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown   |\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "message"
         ],
         "type": "object"
        }
       },
       "required": [
        "name",
        "id",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a cluster by cluster_uuid.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lists detailed cluster information by cluster_uuid.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Object of the cluster response request by uuid.",
       "properties": {
        "addons": {
         "description": "Object representing addons that extend the functionality of the Kubernetes cluster.\n",
         "properties": {
          "loadbalance": {
           "description": "Flag indicating whether the load balancer service is enabled/disabled in the cluster.\n",
           "type": "string"
          },
          "secrets": {
           "description": "Native Kubernetes secret to be included in the cluster during provisioning.\n",
           "type": "string"
          },
          "volume": {
           "description": "Flag indicating whether the storage class service is configured by default.\n",
           "type": "string"
          }
         },
         "required": [
          "loadbalance",
          "volume",
          "secrets"
         ],
         "type": "object"
        },
        "controlplane": {
         "description": "Object of the node pool response.",
         "properties": {
          "auto_scale": {
           "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
           "properties": {
            "max_replicas": {
             "default": 1,
             "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
             "example": 5,
             "minimum": 1,
             "type": "integer"
            },
            "min_replicas": {
             "default": 1,
             "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
             "example": 2,
             "minimum": 1,
             "type": "integer"
            }
           },
           "required": [
            "min_replicas",
            "max_replicas"
           ],
           "type": "object"
          },
          "created_at": {
           "description": "Date of creation of the Kubernetes cluster.",
           "example": "2023-03-01T09:00:00Z",
           "format": "date-time",
           "type": "string"
          },
          "id": {
           "description": "Node pool's UUID.",
           "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
           "format": "uuid",
           "type": "string"
          },
          "instance_template": {
           "description": "Template for the instance object used to create machine instances and managed instance groups.\n",
           "properties": {
            "disk_size": {
             "description": "Size of the disk attached to each node.",
             "type": "integer"
            },
            "disk_type": {
             "description": "Type of disk attached to each node.",
             "type": "string"
            },
            "flavor": {
             "description": "Definition of CPU capacity, RAM, and storage for nodes.",
             "properties": {
              "id": {
               "default": "",
               "description": "Unique identifier for the Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Name of the Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Amount of RAM, measured in MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Amount of disk space, measured in GB.",
               "example": 20,
               "type": "integer"
              },
              "vcpu": {
               "default": 0,
               "description": "Number of available vCPUs.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size"
             ],
             "type": "object"
            },
            "node_image": {
             "description": "Operating system image running on each node.",
             "example": "ubuntu-2004-kube-v1.22.9-v1",
             "type": "string"
            }
           },
           "required": [
            "flavor",
            "node_image",
            "disk_size",
            "disk_type"
           ],
           "type": "object"
          },
          "labels": {
           "additionalProperties": {
            "type": "string"
           },
           "description": "Key/value pairs attached to the object and used for specification.",
           "example": {
            "key1": "value1"
           },
           "type": "object"
          },
          "name": {
           "description": "Node pool name",
           "example": "nodepool-example",
           "type": "string"
          },
          "replicas": {
           "description": "Number of replicas of the nodes in the node pool.",
           "example": 3,
           "type": "integer"
          },
          "securityGroups": {
           "description": "Name of the security group to define rules allowing network traffic in the worker node pool.",
           "items": {
            "description": "Items from the security groups defining rules allowing network traffic in the worker node pool.",
            "example": "security-group-name",
            "type": "string"
           },
           "type": "array"
          },
          "status": {
           "description": "Details about the status of the node pool or control plane.\n",
           "properties": {
            "messages": {
             "description": "Detailed message about the status of the node pool or control plane.\n",
             "items": {
              "description": "Messages returned by the control planes or node pools.\n",
              "example": "Ready",
              "type": "string"
             },
             "type": "array"
            },
            "state": {
             "description": "Current state of the node pool or control plane.\n\n| Component       | Possible States                                           |\n|-----------------|-----------------------------------------------------------|\n| Node pool       | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n| Control Plane   | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n",
             "example": "Pending",
             "type": "string"
            }
           },
           "required": [
            "state",
            "messages"
           ],
           "type": "object"
          },
          "tags": {
           "description": "List of tags applied to the node pool.",
           "items": {
            "description": "Items from the list of tags applied to the node pool.",
            "example": "tag-example",
            "nullable": true,
            "type": "string"
           },
           "type": "array"
          },
          "taints": {
           "description": "Property for associating a set of nodes.",
           "items": {
            "properties": {
             "effect": {
              "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
              "enum": [
               "NoSchedule",
               "PreferNoSchedule",
               "NoExecute"
              ],
              "example": "NoSchedule",
              "type": "string"
             },
             "key": {
              "description": "Key of the taint to be applied to the node.",
              "example": "example-key",
              "type": "string"
             },
             "value": {
              "description": "Value corresponding to the taint key.",
              "example": "value1",
              "type": "string"
             }
            },
            "required": [
             "key",
             "value",
             "effect"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "updated_at": {
           "description": "Date of the last change to the Kubernetes cluster.",
           "example": "2023-03-01T09:10:00Z",
           "format": "date-time",
           "type": "string"
          },
          "zone": {
           "description": "Availability zone for creating the Kubernetes cluster.",
           "items": {
            "description": "Items from the list of availability zones for creating the Kubernetes cluster.",
            "example": "br-ne-1b",
            "type": "string"
           },
           "nullable": true,
           "type": "array"
          }
         },
         "required": [
          "id",
          "name",
          "instance_template",
          "replicas",
          "zone",
          "labels",
          "auto_scale",
          "status"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Creation date of the Kubernetes cluster.",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "description": {
         "description": "Description of the Kubernetes cluster.",
         "example": "This is an example cluster",
         "type": "string"
        },
        "id": {
         "description": "Cluster's UUID.",
         "example": "10113826-624a-4801-900f-6a5742433411",
         "type": "string"
        },
        "kube_api_server": {
         "description": "Information about the Kubernetes API Server of the cluster.",
         "properties": {
          "disable_api_server_fip": {
           "default": false,
           "description": "Enables or disables the use of Floating IP on the API Server.",
           "example": true,
           "type": "boolean"
          },
          "fixed_ip": {
           "description": "Fixed IP configured for the Kubernetes API Server.",
           "example": "172.100.10.1",
           "type": "string"
          },
          "floating_ip": {
           "description": "Floating IP created for the Kubernetes API Server.",
           "example": "172.100.10.1",
           "type": "string"
          },
          "port": {
           "description": "Port used by the Kubernetes API Server.",
           "example": 6443,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "name": {
         "description": "Name of the Kubernetes cluster.",
         "example": "cluster-example",
         "type": "string"
        },
        "network": {
         "description": "Response object for the Kubernetes cluster network resource request.\n",
         "properties": {
          "cidr": {
           "description": "Available IP addresses used for provisioning nodes in the cluster.\n",
           "example": "00.0.0.0/00",
           "type": "string"
          },
          "name": {
           "description": "Name of the node pool.",
           "example": "k8s-clusterapi-cluster-example",
           "type": "string"
          },
          "subnet_id": {
           "description": "Identifier of the internal subnet where the cluster will be provisioned.\n",
           "example": "c5f750a0-a032-477e-a23a-bcffab8b0707",
           "type": "string"
          },
          "uuid": {
           "description": "Nodepool's UUID.",
           "example": "7c24eb01-9423-4f09-a2d2-99ba5df01411",
           "type": "string"
          }
         },
         "required": [
          "uuid",
          "cidr",
          "name",
          "subnet_id"
         ],
         "type": "object"
        },
        "node_pools": {
         "description": "Set of nodes in a Kubernetes cluster.",
         "items": {
          "description": "Object of the node pool response.",
          "properties": {
           "auto_scale": {
            "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
            "properties": {
             "max_replicas": {
              "default": 1,
              "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
              "example": 5,
              "minimum": 1,
              "type": "integer"
             },
             "min_replicas": {
              "default": 1,
              "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
              "example": 2,
              "minimum": 1,
              "type": "integer"
             }
            },
            "required": [
             "min_replicas",
             "max_replicas"
            ],
            "type": "object"
           },
           "created_at": {
            "description": "Date of creation of the Kubernetes cluster.",
            "example": "2023-03-01T09:00:00Z",
            "format": "date-time",
            "type": "string"
           },
           "id": {
            "description": "Node pool's UUID.",
            "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
            "format": "uuid",
            "type": "string"
           },
           "instance_template": {
            "description": "Template for the instance object used to create machine instances and managed instance groups.\n",
            "properties": {
             "disk_size": {
              "description": "Size of the disk attached to each node.",
              "type": "integer"
             },
             "disk_type": {
              "description": "Type of disk attached to each node.",
              "type": "string"
             },
             "flavor": {
              "description": "Definition of CPU capacity, RAM, and storage for nodes.",
              "properties": {
               "id": {
                "default": "",
                "description": "Unique identifier for the Flavor.",
                "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
                "type": "string"
               },
               "name": {
                "description": "Name of the Flavor.",
                "example": "cloud-k8s.gp1.small",
                "type": "string"
               },
               "ram": {
                "default": 0,
                "description": "Amount of RAM, measured in MB.",
                "example": 4096,
                "type": "integer"
               },
               "size": {
                "default": 0,
                "description": "Amount of disk space, measured in GB.",
                "example": 20,
                "type": "integer"
               },
               "vcpu": {
                "default": 0,
                "description": "Number of available vCPUs.",
                "example": 2,
                "type": "integer"
               }
              },
              "required": [
               "name",
               "id",
               "vcpu",
               "ram",
               "size"
              ],
              "type": "object"
             },
             "node_image": {
              "description": "Operating system image running on each node.",
              "example": "ubuntu-2004-kube-v1.22.9-v1",
              "type": "string"
             }
            },
            "required": [
             "flavor",
             "node_image",
             "disk_size",
             "disk_type"
            ],
            "type": "object"
           },
           "labels": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Key/value pairs attached to the object and used for specification.",
            "example": {
             "key1": "value1"
            },
            "type": "object"
           },
           "name": {
            "description": "Node pool name",
            "example": "nodepool-example",
            "type": "string"
           },
           "replicas": {
            "description": "Number of replicas of the nodes in the node pool.",
            "example": 3,
            "type": "integer"
           },
           "securityGroups": {
            "description": "Name of the security group to define rules allowing network traffic in the worker node pool.",
            "items": {
             "description": "Items from the security groups defining rules allowing network traffic in the worker node pool.",
             "example": "security-group-name",
             "type": "string"
            },
            "type": "array"
           },
           "status": {
            "description": "Details about the status of the node pool or control plane.\n",
            "properties": {
             "messages": {
              "description": "Detailed message about the status of the node pool or control plane.\n",
              "items": {
               "description": "Messages returned by the control planes or node pools.\n",
               "example": "Ready",
               "type": "string"
              },
              "type": "array"
             },
             "state": {
              "description": "Current state of the node pool or control plane.\n\n| Component       | Possible States                                           |\n|-----------------|-----------------------------------------------------------|\n| Node pool       | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n| Control Plane   | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "messages"
            ],
            "type": "object"
           },
           "tags": {
            "description": "List of tags applied to the node pool.",
            "items": {
             "description": "Items from the list of tags applied to the node pool.",
             "example": "tag-example",
             "nullable": true,
             "type": "string"
            },
            "type": "array"
           },
           "taints": {
            "description": "Property for associating a set of nodes.",
            "items": {
             "properties": {
              "effect": {
               "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "Key of the taint to be applied to the node.",
               "example": "example-key",
               "type": "string"
              },
              "value": {
               "description": "Value corresponding to the taint key.",
               "example": "value1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "updated_at": {
            "description": "Date of the last change to the Kubernetes cluster.",
            "example": "2023-03-01T09:10:00Z",
            "format": "date-time",
            "type": "string"
           },
           "zone": {
            "description": "Availability zone for creating the Kubernetes cluster.",
            "items": {
             "description": "Items from the list of availability zones for creating the Kubernetes cluster.",
             "example": "br-ne-1b",
             "type": "string"
            },
            "nullable": true,
            "type": "array"
           }
          },
          "required": [
           "id",
           "name",
           "instance_template",
           "replicas",
           "zone",
           "labels",
           "auto_scale",
           "status"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "project_id": {
         "description": "(Deprecated) Unique identifier of the project where the cluster was provisioned.",
         "example": "0000806e53ec429792a7885e63264411",
         "type": "string"
        },
        "region": {
         "description": "Identifier of the region where the Kubernetes cluster is located.",
         "example": "br-ne-1a",
         "type": "string"
        },
        "status": {
         "description": "Details about the status of the Kubernetes cluster or node.\n",
         "properties": {
          "message": {
           "description": "Detailed message about the status of the cluster or node.\n",
           "example": "Ready",
           "type": "string"
          },
          "state": {
           "description": "Current state of the cluster or node.\n\n| Component | Possible States                              |\n|-----------|---------------------------------------------|\n| Cluster   | Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed |\n| Node      | Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown   |\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "message"
         ],
         "type": "object"
        },
        "tags": {
         "description": "List of tags applied to the Kubernetes cluster.",
         "items": {
          "description": "Items from the list of tags applied to the Kubernetes cluster.",
          "example": "tag-example",
          "nullable": true,
          "type": "string"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Date of the last modification of the Kubernetes cluster.",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "version": {
         "description": "Native Kubernetes version of the cluster.",
         "example": "v1.22.9",
         "type": "string"
        }
       },
       "required": [
        "name",
        "id",
        "version",
        "region"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieves the kubeconfig of a Kubernetes cluster by cluster_uuid.",
      "isInternal": false,
      "name": "kubeconfig",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Schema to get the cluster's kubeconfig file.",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lists all clusters for a user.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Object of the clusters response request.",
       "properties": {
        "results": {
         "description": "List of Kubernetes clusters.",
         "items": {
          "description": "Object of the cluster response request.",
          "properties": {
           "description": {
            "description": "Description of the Kubernetes cluster.",
            "example": "This is an example cluster",
            "type": "string"
           },
           "id": {
            "description": "Cluster's UUID.",
            "example": "10113826-624a-4801-900f-6a5742433411",
            "type": "string"
           },
           "kube_api_server": {
            "description": "Information about the Kubernetes API Server of the cluster.",
            "properties": {
             "disable_api_server_fip": {
              "default": false,
              "description": "Enables or disables the use of Floating IP on the API Server.",
              "example": true,
              "type": "boolean"
             },
             "fixed_ip": {
              "description": "Fixed IP configured for the Kubernetes API Server.",
              "example": "172.100.10.1",
              "type": "string"
             },
             "floating_ip": {
              "description": "Floating IP created for the Kubernetes API Server.",
              "example": "172.100.10.1",
              "type": "string"
             },
             "port": {
              "description": "Port used by the Kubernetes API Server.",
              "example": 6443,
              "type": "integer"
             }
            },
            "type": "object"
           },
           "name": {
            "description": "Name of the Kubernetes cluster.",
            "example": "cluster-example",
            "type": "string"
           },
           "project_id": {
            "description": "(Deprecated) Unique identifier of the project where the cluster was provisioned.",
            "example": "0000806e53ec429792a7885e63264411",
            "type": "string"
           },
           "region": {
            "description": "Identifier of the region where the Kubernetes cluster is located.",
            "example": "br-ne-1a",
            "type": "string"
           },
           "status": {
            "description": "Details about the status of the Kubernetes cluster or node.\n",
            "properties": {
             "message": {
              "description": "Detailed message about the status of the cluster or node.\n",
              "example": "Ready",
              "type": "string"
             },
             "state": {
              "description": "Current state of the cluster or node.\n\n| Component | Possible States                              |\n|-----------|---------------------------------------------|\n| Cluster   | Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed |\n| Node      | Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown   |\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "message"
            ],
            "type": "object"
           },
           "tags": {
            "description": "List of tags applied to the Kubernetes cluster.",
            "items": {
             "description": "Items from the list of tags applied to the Kubernetes cluster.",
             "example": "tag-example",
             "nullable": true,
             "type": "string"
            },
            "type": "array"
           },
           "version": {
            "description": "Native Kubernetes version of the cluster.",
            "example": "v1.22.9",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Endpoints related to the creation, listing, deletion, and retrieval of the kubeconfig for a Kubernetes cluster.",
    "isInternal": false,
    "name": "cluster",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lists all available flavors.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Response object for the Flavor request.",
       "properties": {
        "results": {
         "items": {
          "description": "Lists of available flavors provided by the application.",
          "properties": {
           "bastion": {
            "description": "Lists of available flavors for the Bastion.",
            "items": {
             "description": "Definition of CPU capacity, RAM, and storage for nodes.",
             "properties": {
              "id": {
               "default": "",
               "description": "Unique identifier for the Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Name of the Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Amount of RAM, measured in MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Amount of disk space, measured in GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU associated with the Flavor.",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Number of available vCPUs.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "controlplane": {
            "description": "Lists of available flavors for the Control Plane.",
            "items": {
             "description": "Definition of CPU capacity, RAM, and storage for nodes.",
             "properties": {
              "id": {
               "default": "",
               "description": "Unique identifier for the Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Name of the Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Amount of RAM, measured in MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Amount of disk space, measured in GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU associated with the Flavor.",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Number of available vCPUs.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "nodepool": {
            "description": "Lists of available flavors for the Node Pools.",
            "items": {
             "description": "Definition of CPU capacity, RAM, and storage for nodes.",
             "properties": {
              "id": {
               "default": "",
               "description": "Unique identifier for the Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Name of the Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Amount of RAM, measured in MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Amount of disk space, measured in GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU associated with the Flavor.",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Number of available vCPUs.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           }
          },
          "required": [
           "bastion",
           "nodepool",
           "controlplane"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Endpoints related to listing available flavors for a Kubernetes cluster.",
    "isInternal": false,
    "name": "flavor",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lists all available flavors.",
      "isInternal": false,
      "name": "flavors",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Response object for the Flavor request.",
       "properties": {
        "results": {
         "items": {
          "description": "Lists of available flavors provided by the application.",
          "properties": {
           "bastion": {
            "description": "Lists of available flavors for the Bastion.",
            "items": {
             "description": "Definition of CPU capacity, RAM, and storage for nodes.",
             "properties": {
              "id": {
               "default": "",
               "description": "Unique identifier for the Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Name of the Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Amount of RAM, measured in MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Amount of disk space, measured in GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU associated with the Flavor.",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Number of available vCPUs.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "controlplane": {
            "description": "Lists of available flavors for the Control Plane.",
            "items": {
             "description": "Definition of CPU capacity, RAM, and storage for nodes.",
             "properties": {
              "id": {
               "default": "",
               "description": "Unique identifier for the Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Name of the Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Amount of RAM, measured in MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Amount of disk space, measured in GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU associated with the Flavor.",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Number of available vCPUs.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "nodepool": {
            "description": "Lists of available flavors for the Node Pools.",
            "items": {
             "description": "Definition of CPU capacity, RAM, and storage for nodes.",
             "properties": {
              "id": {
               "default": "",
               "description": "Unique identifier for the Flavor.",
               "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
               "type": "string"
              },
              "name": {
               "description": "Name of the Flavor.",
               "example": "cloud-k8s.gp1.small",
               "type": "string"
              },
              "ram": {
               "default": 0,
               "description": "Amount of RAM, measured in MB.",
               "example": 4096,
               "type": "integer"
              },
              "size": {
               "default": 0,
               "description": "Amount of disk space, measured in GB.",
               "example": 20,
               "type": "integer"
              },
              "sku": {
               "description": "SKU associated with the Flavor.",
               "example": "sku-1234",
               "type": "string"
              },
              "vcpu": {
               "default": 0,
               "description": "Number of available vCPUs.",
               "example": 2,
               "type": "integer"
              }
             },
             "required": [
              "name",
              "id",
              "vcpu",
              "ram",
              "size",
              "sku"
             ],
             "type": "object"
            },
            "type": "array"
           }
          },
          "required": [
           "bastion",
           "nodepool",
           "controlplane"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lists all available Kubernetes versions.",
      "isInternal": false,
      "name": "versions",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Response object for the Version request.",
       "properties": {
        "results": {
         "description": "Lists of Kubernetes cluster versions.",
         "items": {
          "description": "Object representing a Kubernetes version.",
          "properties": {
           "deprecated": {
            "description": "Indicates whether the version is deprecated.",
            "example": false,
            "type": "boolean"
           },
           "version": {
            "description": "Kubernetes version.",
            "example": "v1.22.9",
            "type": "string"
           }
          },
          "required": [
           "version",
           "deprecated"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Endpoints related to listing available flavors (resource configurations) and Kubernetes versions for a Kubernetes cluster.",
    "isInternal": false,
    "name": "info",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Creates a node pool in a Kubernetes cluster.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "auto_scale": {
         "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        },
        "flavor": {
         "description": "Definition of the CPU, RAM, and storage capacity of the nodes.\n\n| Flavor                     | vCPUs | RAM (GB) | Root Disk (GB) |\n|----------------------------|-------|----------|----------------|\n| cloud-k8s.gp1.small        | 2     | 4        | 20             |\n| cloud-k8s.gp1.medium       | 4     | 8        | 50             |\n| cloud-k8s.gp1.large        | 8     | 16       | 100            |\n| cloud-k8s.gp2.small        | 2     | 4        | 300            |\n| cloud-k8s.gp2.large        | 8     | 32       | 300            |\n| cloud-k8s.hm1.medium       | 4     | 16       | 50             |\n| cloud-k8s.i1-c48-r96-d300  | 48    | 96       | 300            |\n| cloud-k8s.i1-c1-r8-d100    | 1     | 8        | 100            |\n| cloud-k8s.i1-c8-r8-d40     | 8     | 8        | 40             |\n| cloud-k8s.i1-c4-r16-d100   | 4     | 16       | 100            |\n| cloud-k8s.i1-c4-r32-d100   | 4     | 32       | 100            |\n| cloud-k8s.i1-c8-r32-d100   | 8     | 32       | 100            |\n| cloud-k8s.i1-c16-r32-d40   | 16    | 32       | 40             |\n| cloud-k8s.i1-c16-r64-d100  | 16    | 64       | 100            |\n| cloud-k8s.i1-c32-r64-d100  | 32    | 64       | 100            |\n| cloud-k8s.i1-c32-r128-d500 | 32    | 128      | 500            |\n",
         "example": "cloud-k8s.gp1.small",
         "type": "string"
        },
        "name": {
         "description": "Name of the node pool. The name is primarily for idempotence and must be unique within a namespace. The name cannot be changed.\nThe name must follow the following rules:\n  - Must contain a maximum of 63 characters\n  - Must contain only lowercase alphanumeric characters or '-'\n  - Must start with an alphabetic character\n  - Must end with an alphanumeric character\n",
         "example": "nodepool-example",
         "type": "string"
        },
        "replicas": {
         "default": 1,
         "description": "Number of replicas of the nodes in the node pool.",
         "example": 3,
         "type": "integer"
        },
        "tags": {
         "description": "List of tags applied to the node pool.",
         "items": {
          "description": "Items from the list of tags applied to the node pool.",
          "example": "tag-value1",
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Property associating a set of nodes.",
         "items": {
          "properties": {
           "effect": {
            "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "Key of the taint to be applied to the node.",
            "example": "example-key",
            "type": "string"
           },
           "value": {
            "description": "Value corresponding to the taint key.",
            "example": "value1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "cluster_id",
        "flavor",
        "name",
        "replicas"
       ],
       "type": "object"
      },
      "result": {
       "description": "Object of the node pool response.",
       "properties": {
        "auto_scale": {
         "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Date of creation of the Kubernetes cluster.",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "id": {
         "description": "Node pool's UUID.",
         "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
         "format": "uuid",
         "type": "string"
        },
        "instance_template": {
         "description": "Template for the instance object used to create machine instances and managed instance groups.\n",
         "properties": {
          "disk_size": {
           "description": "Size of the disk attached to each node.",
           "type": "integer"
          },
          "disk_type": {
           "description": "Type of disk attached to each node.",
           "type": "string"
          },
          "flavor": {
           "description": "Definition of CPU capacity, RAM, and storage for nodes.",
           "properties": {
            "id": {
             "default": "",
             "description": "Unique identifier for the Flavor.",
             "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
             "type": "string"
            },
            "name": {
             "description": "Name of the Flavor.",
             "example": "cloud-k8s.gp1.small",
             "type": "string"
            },
            "ram": {
             "default": 0,
             "description": "Amount of RAM, measured in MB.",
             "example": 4096,
             "type": "integer"
            },
            "size": {
             "default": 0,
             "description": "Amount of disk space, measured in GB.",
             "example": 20,
             "type": "integer"
            },
            "vcpu": {
             "default": 0,
             "description": "Number of available vCPUs.",
             "example": 2,
             "type": "integer"
            }
           },
           "required": [
            "name",
            "id",
            "vcpu",
            "ram",
            "size"
           ],
           "type": "object"
          },
          "node_image": {
           "description": "Operating system image running on each node.",
           "example": "ubuntu-2004-kube-v1.22.9-v1",
           "type": "string"
          }
         },
         "required": [
          "flavor",
          "node_image",
          "disk_size",
          "disk_type"
         ],
         "type": "object"
        },
        "labels": {
         "additionalProperties": {
          "type": "string"
         },
         "description": "Key/value pairs attached to the object and used for specification.",
         "example": {
          "key1": "value1"
         },
         "type": "object"
        },
        "name": {
         "description": "Node pool name",
         "example": "nodepool-example",
         "type": "string"
        },
        "replicas": {
         "description": "Number of replicas of the nodes in the node pool.",
         "example": 3,
         "type": "integer"
        },
        "securityGroups": {
         "description": "Name of the security group to define rules allowing network traffic in the worker node pool.",
         "items": {
          "description": "Items from the security groups defining rules allowing network traffic in the worker node pool.",
          "example": "security-group-name",
          "type": "string"
         },
         "type": "array"
        },
        "status": {
         "description": "Details about the status of the node pool or control plane.\n",
         "properties": {
          "messages": {
           "description": "Detailed message about the status of the node pool or control plane.\n",
           "items": {
            "description": "Messages returned by the control planes or node pools.\n",
            "example": "Ready",
            "type": "string"
           },
           "type": "array"
          },
          "state": {
           "description": "Current state of the node pool or control plane.\n\n| Component       | Possible States                                           |\n|-----------------|-----------------------------------------------------------|\n| Node pool       | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n| Control Plane   | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "messages"
         ],
         "type": "object"
        },
        "tags": {
         "description": "List of tags applied to the node pool.",
         "items": {
          "description": "Items from the list of tags applied to the node pool.",
          "example": "tag-example",
          "nullable": true,
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Property for associating a set of nodes.",
         "items": {
          "properties": {
           "effect": {
            "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "Key of the taint to be applied to the node.",
            "example": "example-key",
            "type": "string"
           },
           "value": {
            "description": "Value corresponding to the taint key.",
            "example": "value1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Date of the last change to the Kubernetes cluster.",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "zone": {
         "description": "Availability zone for creating the Kubernetes cluster.",
         "items": {
          "description": "Items from the list of availability zones for creating the Kubernetes cluster.",
          "example": "br-ne-1b",
          "type": "string"
         },
         "nullable": true,
         "type": "array"
        }
       },
       "required": [
        "id",
        "name",
        "instance_template",
        "replicas",
        "zone",
        "labels",
        "auto_scale",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes a node pool in a Kubernetes cluster by nodepool_uuid.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        },
        "node_pool_id": {
         "description": "Nodepool's UUID.",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id",
        "node_pool_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Gets nodes in a node pool by nodepool_uuid.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        },
        "node_pool_id": {
         "description": "Nodepool's UUID.",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id",
        "node_pool_id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Object of the node pool response.",
       "properties": {
        "auto_scale": {
         "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Date of creation of the Kubernetes cluster.",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "id": {
         "description": "Node pool's UUID.",
         "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
         "format": "uuid",
         "type": "string"
        },
        "instance_template": {
         "description": "Template for the instance object used to create machine instances and managed instance groups.\n",
         "properties": {
          "disk_size": {
           "description": "Size of the disk attached to each node.",
           "type": "integer"
          },
          "disk_type": {
           "description": "Type of disk attached to each node.",
           "type": "string"
          },
          "flavor": {
           "description": "Definition of CPU capacity, RAM, and storage for nodes.",
           "properties": {
            "id": {
             "default": "",
             "description": "Unique identifier for the Flavor.",
             "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
             "type": "string"
            },
            "name": {
             "description": "Name of the Flavor.",
             "example": "cloud-k8s.gp1.small",
             "type": "string"
            },
            "ram": {
             "default": 0,
             "description": "Amount of RAM, measured in MB.",
             "example": 4096,
             "type": "integer"
            },
            "size": {
             "default": 0,
             "description": "Amount of disk space, measured in GB.",
             "example": 20,
             "type": "integer"
            },
            "vcpu": {
             "default": 0,
             "description": "Number of available vCPUs.",
             "example": 2,
             "type": "integer"
            }
           },
           "required": [
            "name",
            "id",
            "vcpu",
            "ram",
            "size"
           ],
           "type": "object"
          },
          "node_image": {
           "description": "Operating system image running on each node.",
           "example": "ubuntu-2004-kube-v1.22.9-v1",
           "type": "string"
          }
         },
         "required": [
          "flavor",
          "node_image",
          "disk_size",
          "disk_type"
         ],
         "type": "object"
        },
        "labels": {
         "additionalProperties": {
          "type": "string"
         },
         "description": "Key/value pairs attached to the object and used for specification.",
         "example": {
          "key1": "value1"
         },
         "type": "object"
        },
        "name": {
         "description": "Node pool name",
         "example": "nodepool-example",
         "type": "string"
        },
        "replicas": {
         "description": "Number of replicas of the nodes in the node pool.",
         "example": 3,
         "type": "integer"
        },
        "securityGroups": {
         "description": "Name of the security group to define rules allowing network traffic in the worker node pool.",
         "items": {
          "description": "Items from the security groups defining rules allowing network traffic in the worker node pool.",
          "example": "security-group-name",
          "type": "string"
         },
         "type": "array"
        },
        "status": {
         "description": "Details about the status of the node pool or control plane.\n",
         "properties": {
          "messages": {
           "description": "Detailed message about the status of the node pool or control plane.\n",
           "items": {
            "description": "Messages returned by the control planes or node pools.\n",
            "example": "Ready",
            "type": "string"
           },
           "type": "array"
          },
          "state": {
           "description": "Current state of the node pool or control plane.\n\n| Component       | Possible States                                           |\n|-----------------|-----------------------------------------------------------|\n| Node pool       | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n| Control Plane   | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "messages"
         ],
         "type": "object"
        },
        "tags": {
         "description": "List of tags applied to the node pool.",
         "items": {
          "description": "Items from the list of tags applied to the node pool.",
          "example": "tag-example",
          "nullable": true,
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Property for associating a set of nodes.",
         "items": {
          "properties": {
           "effect": {
            "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "Key of the taint to be applied to the node.",
            "example": "example-key",
            "type": "string"
           },
           "value": {
            "description": "Value corresponding to the taint key.",
            "example": "value1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Date of the last change to the Kubernetes cluster.",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "zone": {
         "description": "Availability zone for creating the Kubernetes cluster.",
         "items": {
          "description": "Items from the list of availability zones for creating the Kubernetes cluster.",
          "example": "br-ne-1b",
          "type": "string"
         },
         "nullable": true,
         "type": "array"
        }
       },
       "required": [
        "id",
        "name",
        "instance_template",
        "replicas",
        "zone",
        "labels",
        "auto_scale",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Gets a node pool from a Kubernetes cluster by cluster_uuid.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Object of the node pool response in the cluster.",
       "properties": {
        "results": {
         "description": "List of node pools.",
         "items": {
          "description": "Object of the node pool response.",
          "properties": {
           "auto_scale": {
            "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
            "properties": {
             "max_replicas": {
              "default": 1,
              "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
              "example": 5,
              "minimum": 1,
              "type": "integer"
             },
             "min_replicas": {
              "default": 1,
              "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
              "example": 2,
              "minimum": 1,
              "type": "integer"
             }
            },
            "required": [
             "min_replicas",
             "max_replicas"
            ],
            "type": "object"
           },
           "created_at": {
            "description": "Date of creation of the Kubernetes cluster.",
            "example": "2023-03-01T09:00:00Z",
            "format": "date-time",
            "type": "string"
           },
           "id": {
            "description": "Node pool's UUID.",
            "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
            "format": "uuid",
            "type": "string"
           },
           "instance_template": {
            "description": "Template for the instance object used to create machine instances and managed instance groups.\n",
            "properties": {
             "disk_size": {
              "description": "Size of the disk attached to each node.",
              "type": "integer"
             },
             "disk_type": {
              "description": "Type of disk attached to each node.",
              "type": "string"
             },
             "flavor": {
              "description": "Definition of CPU capacity, RAM, and storage for nodes.",
              "properties": {
               "id": {
                "default": "",
                "description": "Unique identifier for the Flavor.",
                "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
                "type": "string"
               },
               "name": {
                "description": "Name of the Flavor.",
                "example": "cloud-k8s.gp1.small",
                "type": "string"
               },
               "ram": {
                "default": 0,
                "description": "Amount of RAM, measured in MB.",
                "example": 4096,
                "type": "integer"
               },
               "size": {
                "default": 0,
                "description": "Amount of disk space, measured in GB.",
                "example": 20,
                "type": "integer"
               },
               "vcpu": {
                "default": 0,
                "description": "Number of available vCPUs.",
                "example": 2,
                "type": "integer"
               }
              },
              "required": [
               "name",
               "id",
               "vcpu",
               "ram",
               "size"
              ],
              "type": "object"
             },
             "node_image": {
              "description": "Operating system image running on each node.",
              "example": "ubuntu-2004-kube-v1.22.9-v1",
              "type": "string"
             }
            },
            "required": [
             "flavor",
             "node_image",
             "disk_size",
             "disk_type"
            ],
            "type": "object"
           },
           "labels": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Key/value pairs attached to the object and used for specification.",
            "example": {
             "key1": "value1"
            },
            "type": "object"
           },
           "name": {
            "description": "Node pool name",
            "example": "nodepool-example",
            "type": "string"
           },
           "replicas": {
            "description": "Number of replicas of the nodes in the node pool.",
            "example": 3,
            "type": "integer"
           },
           "securityGroups": {
            "description": "Name of the security group to define rules allowing network traffic in the worker node pool.",
            "items": {
             "description": "Items from the security groups defining rules allowing network traffic in the worker node pool.",
             "example": "security-group-name",
             "type": "string"
            },
            "type": "array"
           },
           "status": {
            "description": "Details about the status of the node pool or control plane.\n",
            "properties": {
             "messages": {
              "description": "Detailed message about the status of the node pool or control plane.\n",
              "items": {
               "description": "Messages returned by the control planes or node pools.\n",
               "example": "Ready",
               "type": "string"
              },
              "type": "array"
             },
             "state": {
              "description": "Current state of the node pool or control plane.\n\n| Component       | Possible States                                           |\n|-----------------|-----------------------------------------------------------|\n| Node pool       | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n| Control Plane   | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "messages"
            ],
            "type": "object"
           },
           "tags": {
            "description": "List of tags applied to the node pool.",
            "items": {
             "description": "Items from the list of tags applied to the node pool.",
             "example": "tag-example",
             "nullable": true,
             "type": "string"
            },
            "type": "array"
           },
           "taints": {
            "description": "Property for associating a set of nodes.",
            "items": {
             "properties": {
              "effect": {
               "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "Key of the taint to be applied to the node.",
               "example": "example-key",
               "type": "string"
              },
              "value": {
               "description": "Value corresponding to the taint key.",
               "example": "value1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "updated_at": {
            "description": "Date of the last change to the Kubernetes cluster.",
            "example": "2023-03-01T09:10:00Z",
            "format": "date-time",
            "type": "string"
           },
           "zone": {
            "description": "Availability zone for creating the Kubernetes cluster.",
            "items": {
             "description": "Items from the list of availability zones for creating the Kubernetes cluster.",
             "example": "br-ne-1b",
             "type": "string"
            },
            "nullable": true,
            "type": "array"
           }
          },
          "required": [
           "id",
           "name",
           "instance_template",
           "replicas",
           "zone",
           "labels",
           "auto_scale",
           "status"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lists nodes in a node pool by nodepool_uuid.",
      "isInternal": false,
      "name": "nodes",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        },
        "node_pool_id": {
         "description": "Nodepool's UUID.",
         "format": "uuid",
         "type": "string"
        }
       },
       "required": [
        "cluster_id",
        "node_pool_id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Object of the node response.",
       "properties": {
        "results": {
         "description": "List of nodes.",
         "items": {
          "description": "Object of the node response request.",
          "properties": {
           "addresses": {
            "description": "List of addresses accessible to the node.",
            "items": {
             "description": "Information for the node's address.",
             "properties": {
              "address": {
               "description": "The node's address",
               "example": "address-example",
               "type": "string"
              },
              "type": {
               "description": "Type of the node's address, one of Hostname, ExternalIP, or InternalIP.\n**HostName** - The host name reported by the node's kernel. Can be overridden through the kubelet parameter --hostname-override.\n**ExternalIP** - Typically, the node's IP address that is externally routable (available outside the cluster).\n**InternalIP** - Typically, the node's IP address that is routable only within the cluster.\n",
               "example": "Hostname",
               "type": "string"
              }
             },
             "required": [
              "type",
              "address"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "annotations": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Key/value pairs attached to the object and used for specification.",
            "example": {
             "annotation-key1": "value1"
            },
            "type": "object"
           },
           "cluster_name": {
            "description": "Name of the cluster to which the node belongs.",
            "example": "cluster-example",
            "type": "string"
           },
           "created_at": {
            "description": "Creation date of the node.",
            "example": "2023-03-01T09:00:00Z",
            "format": "date-time",
            "type": "string"
           },
           "flavor": {
            "description": "Name of the flavor.",
            "example": "cloud-k8s.gp1.small",
            "type": "string"
           },
           "id": {
            "description": "UUID identifier to uniquely identify the node.",
            "example": "77b3a951-dc2c-4802-a246-63a3c7f7ecac",
            "format": "uuid",
            "type": "string"
           },
           "infrastructure": {
            "description": "Information about the node's infrastructure.",
            "properties": {
             "allocatable": {
              "description": "Information about node resources.",
              "properties": {
               "cpu": {
                "description": "Number of CPUs.",
                "example": "2",
                "type": "string"
               },
               "ephemeral_storage": {
                "description": "Amount of ephemeral storage.",
                "example": "18859814062",
                "type": "string"
               },
               "hugepages_1Gi": {
                "description": "Allocation and consumption of 1Gi pages.",
                "type": "string"
               },
               "hugepages_2Mi": {
                "description": "Allocation and consumption of 2Mi pages.",
                "type": "string"
               },
               "memory": {
                "description": "Amount of memory.",
                "example": "3923640Ki",
                "type": "string"
               },
               "pods": {
                "description": "Number of pods.",
                "example": "110",
                "type": "string"
               }
              },
              "required": [
               "cpu",
               "ephemeral_storage",
               "hugepages_1Gi",
               "hugepages_2Mi",
               "memory",
               "pods"
              ],
              "type": "object"
             },
             "architecture": {
              "description": "Architecture reported by the node.",
              "example": "amd64",
              "type": "string"
             },
             "capacity": {
              "description": "Information about node resources.",
              "properties": {
               "cpu": {
                "description": "Number of CPUs.",
                "example": "2",
                "type": "string"
               },
               "ephemeral_storage": {
                "description": "Amount of ephemeral storage.",
                "example": "18859814062",
                "type": "string"
               },
               "hugepages_1Gi": {
                "description": "Allocation and consumption of 1Gi pages.",
                "type": "string"
               },
               "hugepages_2Mi": {
                "description": "Allocation and consumption of 2Mi pages.",
                "type": "string"
               },
               "memory": {
                "description": "Amount of memory.",
                "example": "3923640Ki",
                "type": "string"
               },
               "pods": {
                "description": "Number of pods.",
                "example": "110",
                "type": "string"
               }
              },
              "required": [
               "cpu",
               "ephemeral_storage",
               "hugepages_1Gi",
               "hugepages_2Mi",
               "memory",
               "pods"
              ],
              "type": "object"
             },
             "containerRuntimeVersion": {
              "description": "Version of Container Runtime reported by the node through the remote runtime API.",
              "example": "containerd://1.6.2",
              "type": "string"
             },
             "kernelVersion": {
              "description": "Kernel version reported by the node from 'uname -r'.",
              "example": "5.4.0-122-generic",
              "type": "string"
             },
             "kubeProxyVersion": {
              "description": "Version of KubeProxy reported by the node.",
              "example": "v1.22.9",
              "type": "string"
             },
             "kubeletVersion": {
              "description": "Version of Kubelet reported by the node.",
              "example": "v1.22.9",
              "type": "string"
             },
             "operatingSystem": {
              "description": "Operating system reported by the node.",
              "example": "linux",
              "type": "string"
             },
             "osImage": {
              "description": "OS image reported by the node from /etc/os-release.",
              "example": "Ubuntu 20.04.4 LTS",
              "type": "string"
             }
            },
            "required": [
             "architecture",
             "containerRuntimeVersion",
             "kernelVersion",
             "kubeProxyVersion",
             "kubeletVersion",
             "operatingSystem",
             "osImage",
             "allocatable",
             "capacity"
            ],
            "type": "object"
           },
           "labels": {
            "additionalProperties": {
             "type": "string"
            },
            "description": "Key/value pairs attached to the object and used for specification.",
            "example": {
             "label-key1": "value1"
            },
            "type": "object"
           },
           "name": {
            "description": "Name of the node.",
            "example": "node-example",
            "type": "string"
           },
           "namespace": {
            "description": "Namespace of the node.",
            "example": "namespace-example",
            "type": "string"
           },
           "node_image": {
            "description": "Operating system image run by the node.",
            "example": "ubuntu-2004-kube-v1.22.9-v1",
            "type": "string"
           },
           "nodepool_name": {
            "description": "Name of the node pool to which the node belongs.",
            "example": "nodepool-example",
            "type": "string"
           },
           "status": {
            "description": "Details about the status of the Kubernetes cluster or node.\n",
            "properties": {
             "message": {
              "description": "Detailed message about the status of the cluster or node.\n",
              "example": "Ready",
              "type": "string"
             },
             "state": {
              "description": "Current state of the cluster or node.\n\n| Component | Possible States                              |\n|-----------|---------------------------------------------|\n| Cluster   | Pending, Provisioning, Running, Provisioned, Terminating, Deleting, Failed |\n| Node      | Pending, Provisioning, Provisioned, Running, Deleting, Failed, Unknown   |\n",
              "example": "Pending",
              "type": "string"
             }
            },
            "required": [
             "state",
             "message"
            ],
            "type": "object"
           },
           "taints": {
            "description": "Property for associating a set of nodes.",
            "items": {
             "properties": {
              "effect": {
               "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
               "enum": [
                "NoSchedule",
                "PreferNoSchedule",
                "NoExecute"
               ],
               "example": "NoSchedule",
               "type": "string"
              },
              "key": {
               "description": "Key of the taint to be applied to the node.",
               "example": "example-key",
               "type": "string"
              },
              "value": {
               "description": "Value corresponding to the taint key.",
               "example": "value1",
               "type": "string"
              }
             },
             "required": [
              "key",
              "value",
              "effect"
             ],
             "type": "object"
            },
            "type": "array"
           },
           "zone": {
            "description": "Identifier of the region where the node is located.",
            "example": "br-ne-1c",
            "nullable": true,
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "namespace",
           "cluster_name",
           "nodepool_name",
           "created_at",
           "annotations",
           "labels",
           "taints",
           "addresses",
           "flavor",
           "node_image",
           "zone",
           "infrastructure",
           "status"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Updates nodes from a node pool by nodepool_uuid.",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "auto_scale": {
         "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "cluster_id": {
         "description": "Cluster's UUID.",
         "format": "uuid",
         "type": "string"
        },
        "node_pool_id": {
         "description": "Nodepool's UUID.",
         "format": "uuid",
         "type": "string"
        },
        "replicas": {
         "description": "Number of replicas of the nodes in the node pool.",
         "type": "integer"
        }
       },
       "required": [
        "cluster_id",
        "node_pool_id"
       ],
       "type": "object"
      },
      "result": {
       "description": "Object of the node pool response.",
       "properties": {
        "auto_scale": {
         "description": "Object specifying properties for updating workload resources in the Kubernetes cluster.\n",
         "properties": {
          "max_replicas": {
           "default": 1,
           "description": "Maximum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 5,
           "minimum": 1,
           "type": "integer"
          },
          "min_replicas": {
           "default": 1,
           "description": "Minimum number of replicas for autoscaling. If not provided, or if the value is equal to or less than zero, the autoscaler value will be assumed based on the \"replicas\" field.\n",
           "example": 2,
           "minimum": 1,
           "type": "integer"
          }
         },
         "required": [
          "min_replicas",
          "max_replicas"
         ],
         "type": "object"
        },
        "created_at": {
         "description": "Date of creation of the Kubernetes cluster.",
         "example": "2023-03-01T09:00:00Z",
         "format": "date-time",
         "type": "string"
        },
        "id": {
         "description": "Node pool's UUID.",
         "example": "2cc6f625-7d67-4ed2-8c5e-24e5b40b951b",
         "format": "uuid",
         "type": "string"
        },
        "instance_template": {
         "description": "Template for the instance object used to create machine instances and managed instance groups.\n",
         "properties": {
          "disk_size": {
           "description": "Size of the disk attached to each node.",
           "type": "integer"
          },
          "disk_type": {
           "description": "Type of disk attached to each node.",
           "type": "string"
          },
          "flavor": {
           "description": "Definition of CPU capacity, RAM, and storage for nodes.",
           "properties": {
            "id": {
             "default": "",
             "description": "Unique identifier for the Flavor.",
             "example": "c777eaa7-d67c-46f4-9e4f-232bc9b67b58",
             "type": "string"
            },
            "name": {
             "description": "Name of the Flavor.",
             "example": "cloud-k8s.gp1.small",
             "type": "string"
            },
            "ram": {
             "default": 0,
             "description": "Amount of RAM, measured in MB.",
             "example": 4096,
             "type": "integer"
            },
            "size": {
             "default": 0,
             "description": "Amount of disk space, measured in GB.",
             "example": 20,
             "type": "integer"
            },
            "vcpu": {
             "default": 0,
             "description": "Number of available vCPUs.",
             "example": 2,
             "type": "integer"
            }
           },
           "required": [
            "name",
            "id",
            "vcpu",
            "ram",
            "size"
           ],
           "type": "object"
          },
          "node_image": {
           "description": "Operating system image running on each node.",
           "example": "ubuntu-2004-kube-v1.22.9-v1",
           "type": "string"
          }
         },
         "required": [
          "flavor",
          "node_image",
          "disk_size",
          "disk_type"
         ],
         "type": "object"
        },
        "labels": {
         "additionalProperties": {
          "type": "string"
         },
         "description": "Key/value pairs attached to the object and used for specification.",
         "example": {
          "key1": "value1"
         },
         "type": "object"
        },
        "name": {
         "description": "Node pool name",
         "example": "nodepool-example",
         "type": "string"
        },
        "replicas": {
         "description": "Number of replicas of the nodes in the node pool.",
         "example": 3,
         "type": "integer"
        },
        "securityGroups": {
         "description": "Name of the security group to define rules allowing network traffic in the worker node pool.",
         "items": {
          "description": "Items from the security groups defining rules allowing network traffic in the worker node pool.",
          "example": "security-group-name",
          "type": "string"
         },
         "type": "array"
        },
        "status": {
         "description": "Details about the status of the node pool or control plane.\n",
         "properties": {
          "messages": {
           "description": "Detailed message about the status of the node pool or control plane.\n",
           "items": {
            "description": "Messages returned by the control planes or node pools.\n",
            "example": "Ready",
            "type": "string"
           },
           "type": "array"
          },
          "state": {
           "description": "Current state of the node pool or control plane.\n\n| Component       | Possible States                                           |\n|-----------------|-----------------------------------------------------------|\n| Node pool       | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n| Control Plane   | ScalingUp, ScalingDown, Pending, Running, Failed, Unknown |\n",
           "example": "Pending",
           "type": "string"
          }
         },
         "required": [
          "state",
          "messages"
         ],
         "type": "object"
        },
        "tags": {
         "description": "List of tags applied to the node pool.",
         "items": {
          "description": "Items from the list of tags applied to the node pool.",
          "example": "tag-example",
          "nullable": true,
          "type": "string"
         },
         "type": "array"
        },
        "taints": {
         "description": "Property for associating a set of nodes.",
         "items": {
          "properties": {
           "effect": {
            "description": "The effect of the taint on pods that do not tolerate the taint.\n- **NoSchedule**: Prevents new pods from being scheduled on the node, unless they tolerate the taint. Allows all existing pods to continue running.\n- **PreferNoSchedule**: Similar to NoSchedule, but attempts not to schedule new pods on the node, rather than completely prohibiting new pod scheduling on the node.\n- **NoExecute**: Removes all already running pods that do not tolerate the taint.\n",
            "enum": [
             "NoSchedule",
             "PreferNoSchedule",
             "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
           },
           "key": {
            "description": "Key of the taint to be applied to the node.",
            "example": "example-key",
            "type": "string"
           },
           "value": {
            "description": "Value corresponding to the taint key.",
            "example": "value1",
            "type": "string"
           }
          },
          "required": [
           "key",
           "value",
           "effect"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "updated_at": {
         "description": "Date of the last change to the Kubernetes cluster.",
         "example": "2023-03-01T09:10:00Z",
         "format": "date-time",
         "type": "string"
        },
        "zone": {
         "description": "Availability zone for creating the Kubernetes cluster.",
         "items": {
          "description": "Items from the list of availability zones for creating the Kubernetes cluster.",
          "example": "br-ne-1b",
          "type": "string"
         },
         "nullable": true,
         "type": "array"
        }
       },
       "required": [
        "id",
        "name",
        "instance_template",
        "replicas",
        "zone",
        "labels",
        "auto_scale",
        "status"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Endpoints related to the creation, listing of nodepools and nodes, updating, and deletion of nodepools for a Kubernetes cluster.",
    "isInternal": false,
    "name": "nodepool",
    "version": "0.1.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Lists all available Kubernetes versions.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "description": "Response object for the Version request.",
       "properties": {
        "results": {
         "description": "Lists of Kubernetes cluster versions.",
         "items": {
          "description": "Object representing a Kubernetes version.",
          "properties": {
           "deprecated": {
            "description": "Indicates whether the version is deprecated.",
            "example": false,
            "type": "boolean"
           },
           "version": {
            "description": "Kubernetes version.",
            "example": "v1.22.9",
            "type": "string"
           }
          },
          "required": [
           "version",
           "deprecated"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "type": "object"
      },
      "version": "0.1.0"
     }
    ],
    "description": "Endpoints related to listing available Kubernetes versions for a Kubernetes cluster.",
    "isInternal": false,
    "name": "version",
    "version": "0.1.0"
   }
  ],
  "description": "APIs related to the Kubernetes product.",
  "isInternal": false,
  "name": "kubernetes",
  "version": "0.1.0"
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Check api status",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "status": "OK"
       },
       "properties": {
        "status": {
         "title": "Status",
         "type": "string"
        }
       },
       "required": [
        "status"
       ],
       "title": "Healthcheck",
       "type": "object"
      },
      "version": "1.119.0"
     }
    ],
    "description": "healthcheck",
    "isInternal": true,
    "name": "healthcheck",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Attach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
      "isInternal": false,
      "name": "attach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "description": "ID of the Port to attach security group",
         "magalu.cloud/core/resolved": "true",
         "title": "port_id",
         "type": "string"
        },
        "security_group_id": {
         "description": "ID of the Security Group to attach",
         "magalu.cloud/core/resolved": "true",
         "title": "security_group_id",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "x-zone": {
         "nullable": true,
         "title": "X-Zone",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Port with provided vpc_id and x-tenant-id. You can provide a list of security_groups_id or subnets",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "has_pip": {
         "default": true,
         "nullable": true,
         "title": "Has Pip",
         "type": "boolean"
        },
        "has_sg": {
         "default": true,
         "nullable": true,
         "title": "Has Sg",
         "type": "boolean"
        },
        "name": {
         "maxLength": 100,
         "minLength": 5,
         "title": "Name",
         "type": "string"
        },
        "security_groups_id": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Security Groups Id",
         "type": "array"
        },
        "subnets": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Subnets",
         "type": "array"
        },
        "vpc_id": {
         "description": "ID of the VPC to create port",
         "title": "vpc_id",
         "type": "string"
        }
       },
       "required": [
        "name",
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "PortCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "x-zone": {
         "nullable": true,
         "title": "X-Zone",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Port on the default VPC. Uses VPC default in the provided x-tenant-id. You can provide a list of security_groups_id or subnets.",
      "isInternal": true,
      "name": "create-default-vpc",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "has_pip": {
         "default": true,
         "nullable": true,
         "title": "Has Pip",
         "type": "boolean"
        },
        "has_sg": {
         "default": true,
         "nullable": true,
         "title": "Has Sg",
         "type": "boolean"
        },
        "name": {
         "maxLength": 100,
         "minLength": 5,
         "title": "Name",
         "type": "string"
        },
        "security_groups_id": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Security Groups Id",
         "type": "array"
        },
        "subnets": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Subnets",
         "type": "array"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "PortCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a port from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "description": "ID of the Port to delete",
         "title": "port_id",
         "type": "string"
        }
       },
       "required": [
        "port_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a all ports from the provided tenant_id",
      "isInternal": true,
      "name": "delete-all",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "deleted_ports": [
         {
          "openstack": 0
         },
         {
          "database": 0
         }
        ],
        "deleted_public_ips": [
         {
          "openstack": 0
         },
         {
          "database": 0
         }
        ]
       },
       "properties": {
        "deleted_ports": {
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Ports",
         "type": "array"
        },
        "deleted_public_ips": {
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Public Ips",
         "type": "array"
        }
       },
       "required": [
        "deleted_ports",
        "deleted_public_ips"
       ],
       "title": "PortDeletedAllResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Detach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
      "isInternal": false,
      "name": "detach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "description": "ID of the Port to detach security group",
         "title": "port_id",
         "type": "string"
        },
        "security_group_id": {
         "description": "ID of the Security Group to detach",
         "title": "security_group_id",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a port details from the provided tenant_id",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "title": "Port Id",
         "type": "string"
        }
       },
       "required": [
        "port_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "port description",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "ip_address": [
         {
          "ip_address": "172.20.0.2",
          "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ],
        "is_admin_state_up": true,
        "is_port_security_enabled": true,
        "name": "port_name",
        "public_ip": [
         {
          "public_ip": "100.94.5.31",
          "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ],
        "security_groups": [
         "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ],
        "updated": "2022-01-01 00:00:00",
        "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "ip_address": {
         "default": [],
         "items": {
          "example": {
           "ip_address": "172.20.0.2",
           "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "ip_address": {
            "title": "Ip Address",
            "type": "string"
           },
           "subnet_id": {
            "title": "Subnet Id",
            "type": "string"
           }
          },
          "required": [
           "ip_address",
           "subnet_id"
          ],
          "title": "IpAddress",
          "type": "object"
         },
         "title": "Ip Address",
         "type": "array"
        },
        "is_admin_state_up": {
         "nullable": true,
         "title": "Is Admin State Up",
         "type": "boolean"
        },
        "is_port_security_enabled": {
         "nullable": true,
         "title": "Is Port Security Enabled",
         "type": "boolean"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "public_ip": {
         "default": [],
         "items": {
          "example": {
           "public_ip": "100.94.5.31",
           "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "public_ip": {
            "nullable": true,
            "title": "Public Ip",
            "type": "string"
           },
           "public_ip_id": {
            "nullable": true,
            "title": "Public Ip Id",
            "type": "string"
           }
          },
          "title": "PublicIpResponsePort",
          "type": "object"
         },
         "nullable": true,
         "title": "Public Ip",
         "type": "array"
        },
        "security_groups": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "Security Groups",
         "type": "array"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        },
        "vpc_id": {
         "nullable": true,
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "title": "PortResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a detailed list of ports from the provided tenant_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id_list": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "Port Id List",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "items": {
        "example": {
         "created_at": "2022-01-01 00:00:00",
         "description": "port description",
         "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
         "ip_address": [
          {
           "ip_address": "172.20.0.2",
           "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         ],
         "is_admin_state_up": true,
         "is_port_security_enabled": true,
         "name": "port_name",
         "public_ip": [
          {
           "public_ip": "100.94.5.31",
           "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
         ],
         "security_groups": [
          "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         ],
         "updated": "2022-01-01 00:00:00",
         "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "properties": {
         "created_at": {
          "format": "date-time",
          "nullable": true,
          "title": "Created At",
          "type": "string"
         },
         "description": {
          "nullable": true,
          "title": "Description",
          "type": "string"
         },
         "id": {
          "nullable": true,
          "title": "Id",
          "type": "string"
         },
         "ip_address": {
          "default": [],
          "items": {
           "example": {
            "ip_address": "172.20.0.2",
            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "ip_address": {
             "title": "Ip Address",
             "type": "string"
            },
            "subnet_id": {
             "title": "Subnet Id",
             "type": "string"
            }
           },
           "required": [
            "ip_address",
            "subnet_id"
           ],
           "title": "IpAddress",
           "type": "object"
          },
          "title": "Ip Address",
          "type": "array"
         },
         "is_admin_state_up": {
          "nullable": true,
          "title": "Is Admin State Up",
          "type": "boolean"
         },
         "is_port_security_enabled": {
          "nullable": true,
          "title": "Is Port Security Enabled",
          "type": "boolean"
         },
         "name": {
          "nullable": true,
          "title": "Name",
          "type": "string"
         },
         "public_ip": {
          "default": [],
          "items": {
           "example": {
            "public_ip": "100.94.5.31",
            "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           },
           "properties": {
            "public_ip": {
             "nullable": true,
             "title": "Public Ip",
             "type": "string"
            },
            "public_ip_id": {
             "nullable": true,
             "title": "Public Ip Id",
             "type": "string"
            }
           },
           "title": "PublicIpResponsePort",
           "type": "object"
          },
          "nullable": true,
          "title": "Public Ip",
          "type": "array"
         },
         "security_groups": {
          "default": [],
          "items": {
           "type": "string"
          },
          "title": "Security Groups",
          "type": "array"
         },
         "updated": {
          "format": "date-time",
          "nullable": true,
          "title": "Updated",
          "type": "string"
         },
         "vpc_id": {
          "nullable": true,
          "title": "Vpc Id",
          "type": "string"
         }
        },
        "title": "PortResponse",
        "type": "object"
       },
       "title": "Response Portsdetailedlist",
       "type": "array"
      },
      "version": "1.119.0"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Attach a Security Group to a Port",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "ID of the Port to attach security group",
           "magalu.cloud/core/resolved": "true",
           "title": "port_id",
           "type": "string"
          },
          "security_group_id": {
           "description": "ID of the Security Group to attach",
           "magalu.cloud/core/resolved": "true",
           "title": "security_group_id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "ID of the Port to attach security group",
           "magalu.cloud/core/resolved": "true",
           "title": "port_id",
           "type": "string"
          },
          "security_group_id": {
           "description": "ID of the Security Group to attach",
           "magalu.cloud/core/resolved": "true",
           "title": "security_group_id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Detach a Security Group from a Port",
        "isInternal": false,
        "name": "delete",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "ID of the Port to attach security group",
           "magalu.cloud/core/resolved": "true",
           "title": "port_id",
           "type": "string"
          },
          "security_group_id": {
           "description": "ID of the Security Group to attach",
           "magalu.cloud/core/resolved": "true",
           "title": "security_group_id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "ID of the Port to attach security group",
           "magalu.cloud/core/resolved": "true",
           "title": "port_id",
           "type": "string"
          },
          "security_group_id": {
           "description": "ID of the Security Group to attach",
           "magalu.cloud/core/resolved": "true",
           "title": "security_group_id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Check if a Public IP is attached to a Port",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "ID of the Port to attach security group",
           "magalu.cloud/core/resolved": "true",
           "title": "port_id",
           "type": "string"
          },
          "security_group_id": {
           "description": "ID of the Security Group to attach",
           "magalu.cloud/core/resolved": "true",
           "title": "security_group_id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "ID of the Port to attach security group",
           "magalu.cloud/core/resolved": "true",
           "title": "port_id",
           "type": "string"
          },
          "security_group_id": {
           "description": "ID of the Security Group to attach",
           "magalu.cloud/core/resolved": "true",
           "title": "security_group_id",
           "type": "string"
          }
         },
         "required": [
          "security_group_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       }
      ],
      "description": "Manage the attachment between a Security Group and a Port",
      "isInternal": true,
      "name": "security-group-attachment",
      "version": ""
     }
    ],
    "description": "VPC Port",
    "isInternal": false,
    "name": "ports",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Attach a Public IP to a Port",
      "isInternal": false,
      "name": "attach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "description": "Id of the Port to attach the Public IP",
         "magalu.cloud/core/resolved": "true",
         "title": "Port ID",
         "type": "string"
        },
        "public_ip_id": {
         "description": "Id of the Public IP to attach port to",
         "magalu.cloud/core/resolved": "true",
         "title": "Public IP ID",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create async Public IP in a VPC with provided vpc_id and x_tenant_id",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "description": {
         "default": "",
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "validate_quota": {
         "default": true,
         "description": "Validate the quota before creating the Public IP",
         "title": "validateQuota",
         "type": "boolean"
        },
        "vpc_id": {
         "description": "Id of the VPC to create the Public IP in",
         "title": "Vpc ID",
         "type": "string"
        },
        "wait": {
         "default": true,
         "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
         "title": "wait",
         "type": "boolean"
        },
        "wait_timeout": {
         "default": 120,
         "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
         "nullable": true,
         "title": "waitTimeout",
         "type": "integer"
        }
       },
       "required": [
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "PublicIpCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a Public IP from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "public_ip_id": {
         "description": "Id of the Public IP to delete",
         "title": "Public IP ID",
         "type": "string"
        }
       },
       "required": [
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Detach a Public IP to a Port",
      "isInternal": false,
      "name": "detach",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "port_id": {
         "description": "Id of the Port to detach the Public IP",
         "title": "Port ID",
         "type": "string"
        },
        "public_ip_id": {
         "description": "Id of the Public IP to detach port to",
         "title": "Public IP ID",
         "type": "string"
        }
       },
       "required": [
        "port_id",
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {},
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a Public IP details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "public_ip_id": {
         "description": "Id of the Public IP to retrieve",
         "title": "Public IP ID",
         "type": "string"
        }
       },
       "required": [
        "public_ip_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "port description",
        "error": "error",
        "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "public_ip": "100.94.5.31",
        "status": "created",
        "updated": "2022-01-01 00:00:00",
        "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "error": {
         "nullable": true,
         "title": "Error",
         "type": "string"
        },
        "external_id": {
         "nullable": true,
         "title": "External Id",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "port_id": {
         "nullable": true,
         "title": "Port Id",
         "type": "string"
        },
        "public_ip": {
         "nullable": true,
         "title": "Public Ip",
         "type": "string"
        },
        "status": {
         "nullable": true,
         "title": "Status",
         "type": "string"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        },
        "vpc_id": {
         "nullable": true,
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "title": "PublicIpDb",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a tenant's public ip list",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "public_ips": [
         {
          "created_at": "2022-01-01 00:00:00",
          "description": "port description",
          "error": "error",
          "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "port_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "public_ip": "100.94.5.31",
          "status": "created",
          "updated": "2022-01-01 00:00:00",
          "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ]
       },
       "properties": {
        "public_ips": {
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "description": "port description",
           "error": "error",
           "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "public_ip": "100.94.5.31",
           "status": "created",
           "updated": "2022-01-01 00:00:00",
           "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "external_id": {
            "nullable": true,
            "title": "External Id",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "port_id": {
            "nullable": true,
            "title": "Port Id",
            "type": "string"
           },
           "public_ip": {
            "nullable": true,
            "title": "Public Ip",
            "type": "string"
           },
           "status": {
            "nullable": true,
            "title": "Status",
            "type": "string"
           },
           "updated": {
            "format": "date-time",
            "nullable": true,
            "title": "Updated",
            "type": "string"
           },
           "vpc_id": {
            "nullable": true,
            "title": "Vpc Id",
            "type": "string"
           }
          },
          "title": "PublicIpDb",
          "type": "object"
         },
         "title": "Public Ips",
         "type": "array"
        }
       },
       "required": [
        "public_ips"
       ],
       "title": "PublicIpsList",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Attach a Public IP to a Port",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "Id of the Port to attach the Public IP",
           "magalu.cloud/core/resolved": "true",
           "title": "Port ID",
           "type": "string"
          },
          "public_ip_id": {
           "description": "Id of the Public IP to attach port to",
           "magalu.cloud/core/resolved": "true",
           "title": "Public IP ID",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "Id of the Port to attach the Public IP",
           "magalu.cloud/core/resolved": "true",
           "title": "Port ID",
           "type": "string"
          },
          "public_ip_id": {
           "description": "Id of the Public IP to attach port to",
           "magalu.cloud/core/resolved": "true",
           "title": "Public IP ID",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Detach a Public IP from a Port",
        "isInternal": false,
        "name": "delete",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "Id of the Port to attach the Public IP",
           "magalu.cloud/core/resolved": "true",
           "title": "Port ID",
           "type": "string"
          },
          "public_ip_id": {
           "description": "Id of the Public IP to attach port to",
           "magalu.cloud/core/resolved": "true",
           "title": "Public IP ID",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "Id of the Port to attach the Public IP",
           "magalu.cloud/core/resolved": "true",
           "title": "Port ID",
           "type": "string"
          },
          "public_ip_id": {
           "description": "Id of the Public IP to attach port to",
           "magalu.cloud/core/resolved": "true",
           "title": "Public IP ID",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Check if a Public IP is attached to a Port",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "Id of the Port to attach the Public IP",
           "magalu.cloud/core/resolved": "true",
           "title": "Port ID",
           "type": "string"
          },
          "public_ip_id": {
           "description": "Id of the Public IP to attach port to",
           "magalu.cloud/core/resolved": "true",
           "title": "Public IP ID",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "result": {
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "port_id": {
           "description": "Id of the Port to attach the Public IP",
           "magalu.cloud/core/resolved": "true",
           "title": "Port ID",
           "type": "string"
          },
          "public_ip_id": {
           "description": "Id of the Public IP to attach port to",
           "magalu.cloud/core/resolved": "true",
           "title": "Public IP ID",
           "type": "string"
          }
         },
         "required": [
          "public_ip_id",
          "port_id"
         ],
         "type": "object"
        },
        "version": ""
       }
      ],
      "description": "Manage the attachment between a Public IP and a Port",
      "isInternal": true,
      "name": "port-attachment",
      "version": ""
     }
    ],
    "description": "VPC Public IPs",
    "isInternal": false,
    "name": "public_ips",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a list of selected usage quotas from a provided tenant",
      "isInternal": true,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "quota_slug": {
         "description": "Service to check quota usage",
         "enum": [
          "public_ips",
          "subnets",
          "subnet_pools",
          "security_groups",
          "security_group_rules",
          "vpcs",
          "nics"
         ],
         "title": "quota_slug",
         "type": "string"
        }
       },
       "required": [
        "quota_slug"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "results": [
         {
          "quota_slug": "public_ips",
          "used": 10
         }
        ]
       },
       "properties": {
        "results": {
         "items": {
          "example": {
           "quota_slug": "public_ips",
           "used": 10
          },
          "properties": {
           "quota_slug": {
            "title": "Quota Slug",
            "type": "string"
           },
           "used": {
            "title": "Used",
            "type": "integer"
           }
          },
          "required": [
           "quota_slug",
           "used"
          ],
          "title": "QuotaModel",
          "type": "object"
         },
         "title": "Results",
         "type": "array"
        }
       },
       "required": [
        "results"
       ],
       "title": "QuotaResult",
       "type": "object"
      },
      "version": "1.119.0"
     }
    ],
    "description": "VPC Quotas",
    "isInternal": true,
    "name": "quotas",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Rule async, returning its ID. To monitor the creation progress, please check the status in the service message or implement polling.Either a remote_ip_prefix or a remote_group_id can be specified.With remote_ip_prefix, all IPs that match the criteria will be allowed.With remote_group_id, only the specified security group is allowed to communicatefollowing the specified protocol, direction and port_range_min/max",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "direction": {
         "nullable": true,
         "title": "Direction",
         "type": "string"
        },
        "ethertype": {
         "nullable": true,
         "title": "Ethertype",
         "type": "string"
        },
        "port_range_max": {
         "nullable": true,
         "title": "Port Range Max",
         "type": "integer"
        },
        "port_range_min": {
         "nullable": true,
         "title": "Port Range Min",
         "type": "integer"
        },
        "protocol": {
         "nullable": true,
         "title": "Protocol",
         "type": "string"
        },
        "remote_group_id": {
         "nullable": true,
         "title": "Remote Group Id",
         "type": "string"
        },
        "remote_ip_prefix": {
         "nullable": true,
         "title": "Remote Ip Prefix",
         "type": "string"
        },
        "security_group_id": {
         "description": "Id of the Security Group",
         "title": "Security Group ID",
         "type": "string"
        },
        "validate_quota": {
         "default": true,
         "description": "Validate the quota before creating Rule",
         "title": "validateQuota",
         "type": "boolean"
        },
        "wait": {
         "default": true,
         "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
         "nullable": true,
         "title": "wait",
         "type": "boolean"
        },
        "wait_timeout": {
         "default": 120,
         "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
         "nullable": true,
         "title": "waitTimeout",
         "type": "integer"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "RuleCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a rule from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "rule_id": {
         "description": "Id of the Rule",
         "title": "Rule ID",
         "type": "string"
        }
       },
       "required": [
        "rule_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a rule details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "rule_id": {
         "description": "Id of the Rule",
         "title": "Rule ID",
         "type": "string"
        }
       },
       "required": [
        "rule_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "direction": "egress",
        "ethertype": "IPv4",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "port_range_max": 8028,
        "port_range_min": 8028,
        "protocol": "tcp",
        "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "remote_ip_prefix": "100.94.0.0/24",
        "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "status": "created"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "direction": {
         "nullable": true,
         "title": "Direction",
         "type": "string"
        },
        "error": {
         "nullable": true,
         "title": "Error",
         "type": "string"
        },
        "ethertype": {
         "nullable": true,
         "title": "Ethertype",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "port_range_max": {
         "nullable": true,
         "title": "Port Range Max",
         "type": "integer"
        },
        "port_range_min": {
         "nullable": true,
         "title": "Port Range Min",
         "type": "integer"
        },
        "protocol": {
         "nullable": true,
         "title": "Protocol",
         "type": "string"
        },
        "remote_group_id": {
         "nullable": true,
         "title": "Remote Group Id",
         "type": "string"
        },
        "remote_ip_prefix": {
         "nullable": true,
         "title": "Remote Ip Prefix",
         "type": "string"
        },
        "security_group_id": {
         "nullable": true,
         "title": "Security Group Id",
         "type": "string"
        },
        "status": {
         "enum": [
          "created",
          "pending",
          "error"
         ],
         "title": "RuleStatus",
         "type": "string"
        }
       },
       "required": [
        "status"
       ],
       "title": "RuleResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of rules for a provided security_group_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "security_group_id": {
         "description": "Id of the Security Group",
         "title": "Security Group ID",
         "type": "string"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "rules": [
         {
          "created_at": "2022-01-01 00:00:00",
          "direction": "egress",
          "ethertype": "IPv4",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "port_range_max": 8028,
          "port_range_min": 8028,
          "protocol": "tcp",
          "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "remote_ip_prefix": "100.94.0.0/24",
          "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "status": "created"
         }
        ]
       },
       "magalu.cloud/core/resolved": "true",
       "properties": {
        "rules": {
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "direction": "egress",
           "ethertype": "IPv4",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "port_range_max": 8028,
           "port_range_min": 8028,
           "protocol": "tcp",
           "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "remote_ip_prefix": "100.94.0.0/24",
           "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "status": "created"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "direction": {
            "nullable": true,
            "title": "Direction",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "ethertype": {
            "nullable": true,
            "title": "Ethertype",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "port_range_max": {
            "nullable": true,
            "title": "Port Range Max",
            "type": "integer"
           },
           "port_range_min": {
            "nullable": true,
            "title": "Port Range Min",
            "type": "integer"
           },
           "protocol": {
            "nullable": true,
            "title": "Protocol",
            "type": "string"
           },
           "remote_group_id": {
            "nullable": true,
            "title": "Remote Group Id",
            "type": "string"
           },
           "remote_ip_prefix": {
            "nullable": true,
            "title": "Remote Ip Prefix",
            "type": "string"
           },
           "security_group_id": {
            "nullable": true,
            "title": "Security Group Id",
            "type": "string"
           },
           "status": {
            "enum": [
             "created",
             "pending",
             "error"
            ],
            "title": "RuleStatus",
            "type": "string"
           }
          },
          "required": [
           "status"
          ],
          "title": "RuleResponse",
          "type": "object"
         },
         "title": "Rules",
         "type": "array"
        }
       },
       "required": [
        "rules"
       ],
       "title": "RulesList",
       "type": "object"
      },
      "version": "1.119.0"
     }
    ],
    "description": "VPC Rules",
    "isInternal": false,
    "name": "rules",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Security Group",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "default": "",
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "name": {
         "maxLength": 100,
         "minLength": 5,
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "validate_quota": {
         "default": true,
         "description": "Validate the quota before creating Security Group",
         "title": "validateQuota",
         "type": "boolean"
        },
        "wait": {
         "default": true,
         "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
         "title": "wait",
         "type": "boolean"
        },
        "wait_timeout": {
         "default": 120,
         "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
         "title": "waitTimeout",
         "type": "integer"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "SecurityGroupCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Security Group Default",
      "isInternal": true,
      "name": "create-default",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "SecurityGroupCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a security group from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "security_group_id": {
         "description": "Id of the security group to delete",
         "title": "Security Group ID",
         "type": "string"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete all security groups from the provided tenant_id",
      "isInternal": true,
      "name": "delete-all",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "deleted_security_groups": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ]
       },
       "properties": {
        "deleted_security_groups": {
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Security Groups",
         "type": "array"
        }
       },
       "required": [
        "deleted_security_groups"
       ],
       "title": "SecurityGroupDeletedAllResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a security group details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "security_group_id": {
         "description": "Id of the security group to detail",
         "title": "Security Group ID",
         "type": "string"
        }
       },
       "required": [
        "security_group_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "security group description",
        "error": "null",
        "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "is_default": true,
        "name": "security_group_name",
        "project_type": "default",
        "rules": [
         {
          "created_at": "2022-01-01 00:00:00",
          "direction": "egress",
          "error": "null",
          "ethertype": "IPv4",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "port_range_max": 8028,
          "port_range_min": 8028,
          "protocol": "tcp",
          "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "remote_ip_prefix": "100.94.0.0/24",
          "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "status": "created"
         }
        ],
        "status": "created",
        "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "updated": "2022-01-01 00:00:00",
        "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "error": {
         "nullable": true,
         "title": "Error",
         "type": "string"
        },
        "external_id": {
         "nullable": true,
         "title": "External Id",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "is_default": {
         "nullable": true,
         "title": "Is Default",
         "type": "boolean"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "project_type": {
         "nullable": true,
         "title": "Project Type",
         "type": "string"
        },
        "rules": {
         "default": [],
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "direction": "egress",
           "error": "null",
           "ethertype": "IPv4",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "port_range_max": 8028,
           "port_range_min": 8028,
           "protocol": "tcp",
           "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "remote_ip_prefix": "100.94.0.0/24",
           "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "status": "created"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "direction": {
            "nullable": true,
            "title": "Direction",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "ethertype": {
            "nullable": true,
            "title": "Ethertype",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "port_range_max": {
            "nullable": true,
            "title": "Port Range Max",
            "type": "integer"
           },
           "port_range_min": {
            "nullable": true,
            "title": "Port Range Min",
            "type": "integer"
           },
           "protocol": {
            "nullable": true,
            "title": "Protocol",
            "type": "string"
           },
           "remote_group_id": {
            "nullable": true,
            "title": "Remote Group Id",
            "type": "string"
           },
           "remote_ip_prefix": {
            "nullable": true,
            "title": "Remote Ip Prefix",
            "type": "string"
           },
           "security_group_id": {
            "nullable": true,
            "title": "Security Group Id",
            "type": "string"
           },
           "status": {
            "enum": [
             "created",
             "pending",
             "error"
            ],
            "title": "RuleStatus",
            "type": "string"
           }
          },
          "title": "RuleResponseEvent",
          "type": "object"
         },
         "nullable": true,
         "title": "Rules",
         "type": "array"
        },
        "status": {
         "enum": [
          "created",
          "pending",
          "error"
         ],
         "title": "SecurityGroupStatus",
         "type": "string"
        },
        "tenant_id": {
         "nullable": true,
         "title": "Tenant Id",
         "type": "string"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        },
        "vpc_id": {
         "nullable": true,
         "title": "Vpc Id",
         "type": "string"
        }
       },
       "required": [
        "status"
       ],
       "title": "SecurityGroupDetailEvent",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of security groups for a provided tenant_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "security_groups": [
         {
          "created_at": "2022-01-01 00:00:00",
          "description": "security group description",
          "error": "null",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "is_default": true,
          "name": "security_group_name",
          "project_type": "default",
          "status": "created",
          "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "updated": "2022-01-01 00:00:00",
          "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         }
        ]
       },
       "properties": {
        "security_groups": {
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "description": "security group description",
           "error": "null",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "is_default": true,
           "name": "security_group_name",
           "project_type": "default",
           "status": "created",
           "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "updated": "2022-01-01 00:00:00",
           "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "error": {
            "nullable": true,
            "title": "Error",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "is_default": {
            "nullable": true,
            "title": "Is Default",
            "type": "boolean"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "project_type": {
            "nullable": true,
            "title": "Project Type",
            "type": "string"
           },
           "status": {
            "enum": [
             "created",
             "pending",
             "error"
            ],
            "title": "SecurityGroupStatus",
            "type": "string"
           },
           "tenant_id": {
            "nullable": true,
            "title": "Tenant Id",
            "type": "string"
           },
           "updated": {
            "format": "date-time",
            "nullable": true,
            "title": "Updated",
            "type": "string"
           },
           "vpc_id": {
            "nullable": true,
            "title": "Vpc Id",
            "type": "string"
           }
          },
          "required": [
           "status"
          ],
          "title": "SecurityGroupResponseEvent",
          "type": "object"
         },
         "title": "Security Groups",
         "type": "array"
        }
       },
       "required": [
        "security_groups"
       ],
       "title": "SecurityGroupListEvent",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Rule async, returning its ID. To monitor the creation progress, please check the status in the service message or implement polling.Either a remote_ip_prefix or a remote_group_id can be specified.With remote_ip_prefix, all IPs that match the criteria will be allowed.With remote_group_id, only the specified security group is allowed to communicatefollowing the specified protocol, direction and port_range_min/max",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "direction": {
           "nullable": true,
           "title": "Direction",
           "type": "string"
          },
          "ethertype": {
           "nullable": true,
           "title": "Ethertype",
           "type": "string"
          },
          "port_range_max": {
           "nullable": true,
           "title": "Port Range Max",
           "type": "integer"
          },
          "port_range_min": {
           "nullable": true,
           "title": "Port Range Min",
           "type": "integer"
          },
          "protocol": {
           "nullable": true,
           "title": "Protocol",
           "type": "string"
          },
          "remote_group_id": {
           "nullable": true,
           "title": "Remote Group Id",
           "type": "string"
          },
          "remote_ip_prefix": {
           "nullable": true,
           "title": "Remote Ip Prefix",
           "type": "string"
          },
          "security_group_id": {
           "description": "Id of the Security Group",
           "title": "Security Group ID",
           "type": "string"
          },
          "validate_quota": {
           "default": true,
           "description": "Validate the quota before creating Rule",
           "title": "validateQuota",
           "type": "boolean"
          },
          "wait": {
           "default": true,
           "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
           "nullable": true,
           "title": "wait",
           "type": "boolean"
          },
          "wait_timeout": {
           "default": 120,
           "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
           "nullable": true,
           "title": "waitTimeout",
           "type": "integer"
          }
         },
         "required": [
          "security_group_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "RuleCreateResponse",
         "type": "object"
        },
        "version": "1.119.0"
       },
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of rules for a provided security_group_id",
        "isInternal": true,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "security_group_id": {
           "description": "Id of the Security Group",
           "title": "Security Group ID",
           "type": "string"
          }
         },
         "required": [
          "security_group_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "rules": [
           {
            "created_at": "2022-01-01 00:00:00",
            "direction": "egress",
            "ethertype": "IPv4",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "port_range_max": 8028,
            "port_range_min": 8028,
            "protocol": "tcp",
            "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "remote_ip_prefix": "100.94.0.0/24",
            "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "status": "created"
           }
          ]
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "rules": {
           "items": {
            "example": {
             "created_at": "2022-01-01 00:00:00",
             "direction": "egress",
             "ethertype": "IPv4",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "port_range_max": 8028,
             "port_range_min": 8028,
             "protocol": "tcp",
             "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "remote_ip_prefix": "100.94.0.0/24",
             "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "status": "created"
            },
            "properties": {
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "direction": {
              "nullable": true,
              "title": "Direction",
              "type": "string"
             },
             "error": {
              "nullable": true,
              "title": "Error",
              "type": "string"
             },
             "ethertype": {
              "nullable": true,
              "title": "Ethertype",
              "type": "string"
             },
             "id": {
              "nullable": true,
              "title": "Id",
              "type": "string"
             },
             "port_range_max": {
              "nullable": true,
              "title": "Port Range Max",
              "type": "integer"
             },
             "port_range_min": {
              "nullable": true,
              "title": "Port Range Min",
              "type": "integer"
             },
             "protocol": {
              "nullable": true,
              "title": "Protocol",
              "type": "string"
             },
             "remote_group_id": {
              "nullable": true,
              "title": "Remote Group Id",
              "type": "string"
             },
             "remote_ip_prefix": {
              "nullable": true,
              "title": "Remote Ip Prefix",
              "type": "string"
             },
             "security_group_id": {
              "nullable": true,
              "title": "Security Group Id",
              "type": "string"
             },
             "status": {
              "enum": [
               "created",
               "pending",
               "error"
              ],
              "title": "RuleStatus",
              "type": "string"
             }
            },
            "required": [
             "status"
            ],
            "title": "RuleResponse",
            "type": "object"
           },
           "title": "Rules",
           "type": "array"
          }
         },
         "required": [
          "rules"
         ],
         "title": "RulesList",
         "type": "object"
        },
        "version": "1.119.0"
       }
      ],
      "description": "VPC Security Groups | rules",
      "isInternal": true,
      "name": "rules",
      "version": "1.119.0"
     }
    ],
    "description": "VPC Security Groups",
    "isInternal": false,
    "name": "security_groups",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Delete a subnet from the provided tenant_id",
        "isInternal": false,
        "name": "delete",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "subnet_id": {
           "description": "Id of the Subnet to delete",
           "title": "Subnet Id",
           "type": "string"
          }
         },
         "required": [
          "subnet_id"
         ],
         "type": "object"
        },
        "result": {
         "nullable": true,
         "type": "null"
        },
        "version": "1.119.0"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a subnet details",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "subnet_id": {
           "description": "Id of the Subnet to detail",
           "title": "Subnet Id",
           "type": "string"
          }
         },
         "required": [
          "subnet_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "cidr_block": "172.20.0.0/24",
          "created_at": "2022-01-01 00:00:00",
          "description": "vpc description",
          "dhcp_pools": [
           {
            "end": "172.50.0.254",
            "start": "172.50.0.2"
           }
          ],
          "dns_nameservers": [
           "8.8.8.8"
          ],
          "gateway_ip": "172.50.0.1",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "ip_version": "4",
          "name": "vpc_name",
          "updated": "2022-01-01 00:00:00",
          "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "zone": "a"
         },
         "properties": {
          "cidr_block": {
           "title": "Cidr Block",
           "type": "string"
          },
          "created_at": {
           "format": "date-time",
           "nullable": true,
           "title": "Created At",
           "type": "string"
          },
          "description": {
           "nullable": true,
           "title": "Description",
           "type": "string"
          },
          "dhcp_pools": {
           "items": {
            "properties": {
             "end": {
              "title": "End",
              "type": "string"
             },
             "start": {
              "title": "Start",
              "type": "string"
             }
            },
            "required": [
             "start",
             "end"
            ],
            "title": "DhcpPoolStr",
            "type": "object"
           },
           "title": "Dhcp Pools",
           "type": "array"
          },
          "dns_nameservers": {
           "items": {
            "type": "string"
           },
           "title": "Dns Nameservers",
           "type": "array"
          },
          "gateway_ip": {
           "title": "Gateway Ip",
           "type": "string"
          },
          "id": {
           "title": "Id",
           "type": "string"
          },
          "ip_version": {
           "title": "Ip Version",
           "type": "string"
          },
          "name": {
           "nullable": true,
           "title": "Name",
           "type": "string"
          },
          "updated": {
           "format": "date-time",
           "nullable": true,
           "title": "Updated",
           "type": "string"
          },
          "vpc_id": {
           "title": "Vpc Id",
           "type": "string"
          },
          "zone": {
           "title": "Zone",
           "type": "string"
          }
         },
         "required": [
          "id",
          "vpc_id",
          "cidr_block",
          "ip_version",
          "zone",
          "gateway_ip",
          "dns_nameservers",
          "dhcp_pools"
         ],
         "title": "SubnetResponseDetail",
         "type": "object"
        },
        "version": "1.119.0"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Update a subnet from the provided tenant_id",
        "isInternal": false,
        "name": "update",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "dns_nameservers": {
           "default": [],
           "items": {
            "format": "ipvanyaddress",
            "type": "string"
           },
           "title": "Dns Nameservers",
           "type": "array"
          },
          "subnet_id": {
           "title": "Subnet Id",
           "type": "string"
          }
         },
         "required": [
          "subnet_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "SubnetResponseId",
         "type": "object"
        },
        "version": "1.119.0"
       }
      ],
      "description": "VPC Subnets | subnets",
      "isInternal": false,
      "name": "subnets",
      "version": "1.119.0"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "x-zone": {
           "nullable": true,
           "title": "X-Zone",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Subnet",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "cidr_block": {
           "nullable": true,
           "title": "Cidr Block",
           "type": "string"
          },
          "description": {
           "nullable": true,
           "title": "Description",
           "type": "string"
          },
          "dns_nameservers": {
           "default": [],
           "items": {
            "format": "ipvanyaddress",
            "type": "string"
           },
           "title": "Dns Nameservers",
           "type": "array"
          },
          "ip_version": {
           "title": "Ip Version",
           "type": "integer"
          },
          "name": {
           "title": "Name",
           "type": "string"
          },
          "vpc_id": {
           "description": "Id of the VPC to create Subnet",
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "ip_version",
          "name",
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "SubnetCreateResponse",
         "type": "object"
        },
        "version": "1.119.0"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of subnets for a provided vpc_id",
        "isInternal": true,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "vpc_id": {
           "description": "Id of the VPC to list Subnets",
           "title": "Vpc Id",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "subnets": [
           {
            "cidr_block": "172.20.0.0/24",
            "created_at": "2022-01-01 00:00:00",
            "description": "vpc description",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "ip_version": "4",
            "name": "vpc_name",
            "updated": "2022-01-01 00:00:00",
            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "zone": "a"
           }
          ]
         },
         "properties": {
          "subnets": {
           "default": [],
           "items": {
            "example": {
             "cidr_block": "172.20.0.0/24",
             "created_at": "2022-01-01 00:00:00",
             "description": "vpc description",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "ip_version": "4",
             "name": "vpc_name",
             "updated": "2022-01-01 00:00:00",
             "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "zone": "a"
            },
            "properties": {
             "cidr_block": {
              "title": "Cidr Block",
              "type": "string"
             },
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "description": {
              "nullable": true,
              "title": "Description",
              "type": "string"
             },
             "id": {
              "title": "Id",
              "type": "string"
             },
             "ip_version": {
              "title": "Ip Version",
              "type": "string"
             },
             "name": {
              "nullable": true,
              "title": "Name",
              "type": "string"
             },
             "updated": {
              "format": "date-time",
              "nullable": true,
              "title": "Updated",
              "type": "string"
             },
             "vpc_id": {
              "title": "Vpc Id",
              "type": "string"
             },
             "zone": {
              "title": "Zone",
              "type": "string"
             }
            },
            "required": [
             "id",
             "vpc_id",
             "cidr_block",
             "ip_version",
             "zone"
            ],
            "title": "SubnetResponse",
            "type": "object"
           },
           "title": "Subnets",
           "type": "array"
          }
         },
         "title": "SubnetsResponse",
         "type": "object"
        },
        "version": "1.119.0"
       }
      ],
      "description": "VPC Subnets | vpcs-subnets",
      "isInternal": true,
      "name": "vpcs-subnets",
      "version": "1.119.0"
     }
    ],
    "description": "VPC Subnets",
    "isInternal": false,
    "name": "subnets",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a VPC",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "name": {
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        }
       },
       "title": "VpcCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "",
      "isInternal": true,
      "name": "create-default",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        }
       },
       "title": "VpcCreateResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a VPC from the provided tenant_id",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "vpc_id": {
         "description": "ID of the VPC to delete",
         "title": "VPC Id",
         "type": "string"
        }
       },
       "required": [
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete all VPCs from the provided tenant_id",
      "isInternal": true,
      "name": "delete-all",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "deleted_networks": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_routers": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_security_groups": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_subnet_pools": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ],
        "deleted_vpcs": [
         {
          "database": 0
         },
         {
          "openstack": 0
         }
        ]
       },
       "properties": {
        "deleted_networks": {
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Networks",
         "type": "array"
        },
        "deleted_routers": {
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Routers",
         "type": "array"
        },
        "deleted_security_groups": {
         "default": [],
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Security Groups",
         "type": "array"
        },
        "deleted_subnet_pools": {
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Subnet Pools",
         "type": "array"
        },
        "deleted_vpcs": {
         "items": {
          "additionalProperties": {
           "type": "integer"
          },
          "type": "object"
         },
         "title": "Deleted Vpcs",
         "type": "array"
        }
       },
       "required": [
        "deleted_vpcs",
        "deleted_subnet_pools",
        "deleted_routers",
        "deleted_networks"
       ],
       "title": "VpcDeletedAllResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Return a VPC details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "vpc_id": {
         "description": "ID of the VPC to detail",
         "title": "VPC Id",
         "type": "string"
        }
       },
       "required": [
        "vpc_id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-01-01 00:00:00",
        "description": "DESCRIPTION",
        "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "is_default": true,
        "name": "vpc_name",
        "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "security_groups": [
         "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ],
        "subnets": [
         "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ],
        "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "updated": "2022-01-01 00:00:00"
       },
       "properties": {
        "created_at": {
         "format": "date-time",
         "nullable": true,
         "title": "Created At",
         "type": "string"
        },
        "description": {
         "nullable": true,
         "title": "Description",
         "type": "string"
        },
        "external_network": {
         "nullable": true,
         "title": "External Network",
         "type": "string"
        },
        "id": {
         "nullable": true,
         "title": "Id",
         "type": "string"
        },
        "is_default": {
         "nullable": true,
         "title": "Is Default",
         "type": "boolean"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "network_id": {
         "nullable": true,
         "title": "Network Id",
         "type": "string"
        },
        "router_id": {
         "nullable": true,
         "title": "Router Id",
         "type": "string"
        },
        "security_groups": {
         "default": [],
         "items": {
          "type": "string"
         },
         "title": "Security Groups",
         "type": "array"
        },
        "subnets": {
         "default": [],
         "items": {
          "type": "string"
         },
         "nullable": true,
         "title": "Subnets",
         "type": "array"
        },
        "tenant_id": {
         "nullable": true,
         "title": "Tenant Id",
         "type": "string"
        },
        "updated": {
         "format": "date-time",
         "nullable": true,
         "title": "Updated",
         "type": "string"
        }
       },
       "title": "VpcResponse",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Returns a list of VPCs for a provided tenant_id",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "type": "object"
      },
      "result": {
       "example": {
        "vpcs": [
         {
          "created_at": "2022-01-01 00:00:00",
          "description": "DESCRIPTION",
          "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "is_default": true,
          "name": "vpc_name",
          "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "security_groups": [
           "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          ],
          "subnets": [
           "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          ],
          "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "updated": "2022-01-01 00:00:00"
         }
        ]
       },
       "properties": {
        "vpcs": {
         "default": [],
         "items": {
          "example": {
           "created_at": "2022-01-01 00:00:00",
           "description": "DESCRIPTION",
           "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "is_default": true,
           "name": "vpc_name",
           "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "security_groups": [
            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           ],
           "subnets": [
            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           ],
           "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
           "updated": "2022-01-01 00:00:00"
          },
          "properties": {
           "created_at": {
            "format": "date-time",
            "nullable": true,
            "title": "Created At",
            "type": "string"
           },
           "description": {
            "nullable": true,
            "title": "Description",
            "type": "string"
           },
           "external_network": {
            "nullable": true,
            "title": "External Network",
            "type": "string"
           },
           "id": {
            "nullable": true,
            "title": "Id",
            "type": "string"
           },
           "is_default": {
            "nullable": true,
            "title": "Is Default",
            "type": "boolean"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "network_id": {
            "nullable": true,
            "title": "Network Id",
            "type": "string"
           },
           "router_id": {
            "nullable": true,
            "title": "Router Id",
            "type": "string"
           },
           "security_groups": {
            "default": [],
            "items": {
             "type": "string"
            },
            "title": "Security Groups",
            "type": "array"
           },
           "subnets": {
            "default": [],
            "items": {
             "type": "string"
            },
            "nullable": true,
            "title": "Subnets",
            "type": "array"
           },
           "tenant_id": {
            "nullable": true,
            "title": "Tenant Id",
            "type": "string"
           },
           "updated": {
            "format": "date-time",
            "nullable": true,
            "title": "Updated",
            "type": "string"
           }
          },
          "title": "VpcResponse",
          "type": "object"
         },
         "nullable": true,
         "title": "Vpcs",
         "type": "array"
        }
       },
       "title": "VpcResponseList",
       "type": "object"
      },
      "version": "1.119.0"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "x-zone": {
           "nullable": true,
           "title": "X-Zone",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Port with provided vpc_id and x-tenant-id. You can provide a list of security_groups_id or subnets",
        "isInternal": false,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "has_pip": {
           "default": true,
           "nullable": true,
           "title": "Has Pip",
           "type": "boolean"
          },
          "has_sg": {
           "default": true,
           "nullable": true,
           "title": "Has Sg",
           "type": "boolean"
          },
          "name": {
           "maxLength": 100,
           "minLength": 5,
           "title": "Name",
           "type": "string"
          },
          "security_groups_id": {
           "default": [],
           "items": {
            "type": "string"
           },
           "nullable": true,
           "title": "Security Groups Id",
           "type": "array"
          },
          "subnets": {
           "default": [],
           "items": {
            "type": "string"
           },
           "nullable": true,
           "title": "Subnets",
           "type": "array"
          },
          "vpc_id": {
           "description": "ID of the VPC to create port",
           "title": "vpc_id",
           "type": "string"
          }
         },
         "required": [
          "name",
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "PortCreateResponse",
         "type": "object"
        },
        "version": "1.119.0"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "List VPC ports",
        "isInternal": false,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "_limit": {
           "default": 10,
           "description": "Items Per Page",
           "minimum": 1,
           "title": "Items Per Page",
           "type": "integer"
          },
          "_offset": {
           "default": 1,
           "description": "Page Number",
           "minimum": 1,
           "title": "Page Number",
           "type": "integer"
          },
          "detailed": {
           "default": true,
           "title": "Detailed",
           "type": "boolean"
          },
          "port_id_list": {
           "default": [],
           "items": {
            "type": "string"
           },
           "title": "Port Id List",
           "type": "array"
          },
          "vpc_id": {
           "description": "ID of VPC to list ports",
           "title": "vpc_id",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "example": {
            "ports_simplified": [
             {
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "ip_address": [
               {
                "ip_address": "172.20.0.2",
                "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               }
              ]
             }
            ]
           },
           "properties": {
            "ports_simplified": {
             "items": {
              "example": {
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "ip_address": [
                {
                 "ip_address": "172.20.0.2",
                 "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
               ]
              },
              "properties": {
               "id": {
                "nullable": true,
                "title": "Id",
                "type": "string"
               },
               "ip_address": {
                "default": [],
                "items": {
                 "example": {
                  "ip_address": "172.20.0.2",
                  "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                 },
                 "properties": {
                  "ip_address": {
                   "title": "Ip Address",
                   "type": "string"
                  },
                  "subnet_id": {
                   "title": "Subnet Id",
                   "type": "string"
                  }
                 },
                 "required": [
                  "ip_address",
                  "subnet_id"
                 ],
                 "title": "IpAddress",
                 "type": "object"
                },
                "title": "Ip Address",
                "type": "array"
               }
              },
              "title": "PortSimpleResponse",
              "type": "object"
             },
             "title": "Ports Simplified",
             "type": "array"
            }
           },
           "required": [
            "ports_simplified"
           ],
           "title": "PortsListSimplified",
           "type": "object"
          },
          {
           "example": {
            "ports": [
             {
              "created_at": "2022-01-01 00:00:00",
              "description": "port description",
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "ip_address": [
               {
                "ip_address": "172.20.0.2",
                "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               }
              ],
              "is_admin_state_up": true,
              "is_port_security_enabled": true,
              "name": "port_name",
              "public_ip": [
               {
                "public_ip": "100.94.5.31",
                "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               }
              ],
              "security_groups": [
               "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              ],
              "updated": "2022-01-01 00:00:00",
              "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
             }
            ]
           },
           "properties": {
            "ports": {
             "items": {
              "example": {
               "created_at": "2022-01-01 00:00:00",
               "description": "port description",
               "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
               "ip_address": [
                {
                 "ip_address": "172.20.0.2",
                 "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
               ],
               "is_admin_state_up": true,
               "is_port_security_enabled": true,
               "name": "port_name",
               "public_ip": [
                {
                 "public_ip": "100.94.5.31",
                 "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
               ],
               "security_groups": [
                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
               ],
               "updated": "2022-01-01 00:00:00",
               "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "properties": {
               "created_at": {
                "format": "date-time",
                "nullable": true,
                "title": "Created At",
                "type": "string"
               },
               "description": {
                "nullable": true,
                "title": "Description",
                "type": "string"
               },
               "id": {
                "nullable": true,
                "title": "Id",
                "type": "string"
               },
               "ip_address": {
                "default": [],
                "items": {
                 "example": {
                  "ip_address": "172.20.0.2",
                  "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                 },
                 "properties": {
                  "ip_address": {
                   "title": "Ip Address",
                   "type": "string"
                  },
                  "subnet_id": {
                   "title": "Subnet Id",
                   "type": "string"
                  }
                 },
                 "required": [
                  "ip_address",
                  "subnet_id"
                 ],
                 "title": "IpAddress",
                 "type": "object"
                },
                "title": "Ip Address",
                "type": "array"
               },
               "is_admin_state_up": {
                "nullable": true,
                "title": "Is Admin State Up",
                "type": "boolean"
               },
               "is_port_security_enabled": {
                "nullable": true,
                "title": "Is Port Security Enabled",
                "type": "boolean"
               },
               "name": {
                "nullable": true,
                "title": "Name",
                "type": "string"
               },
               "public_ip": {
                "default": [],
                "items": {
                 "example": {
                  "public_ip": "100.94.5.31",
                  "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                 },
                 "properties": {
                  "public_ip": {
                   "nullable": true,
                   "title": "Public Ip",
                   "type": "string"
                  },
                  "public_ip_id": {
                   "nullable": true,
                   "title": "Public Ip Id",
                   "type": "string"
                  }
                 },
                 "title": "PublicIpResponsePort",
                 "type": "object"
                },
                "nullable": true,
                "title": "Public Ip",
                "type": "array"
               },
               "security_groups": {
                "default": [],
                "items": {
                 "type": "string"
                },
                "title": "Security Groups",
                "type": "array"
               },
               "updated": {
                "format": "date-time",
                "nullable": true,
                "title": "Updated",
                "type": "string"
               },
               "vpc_id": {
                "nullable": true,
                "title": "Vpc Id",
                "type": "string"
               }
              },
              "title": "PortResponse",
              "type": "object"
             },
             "title": "Ports",
             "type": "array"
            }
           },
           "required": [
            "ports"
           ],
           "title": "PortsList",
           "type": "object"
          }
         ],
         "title": "Response Listports",
         "type": "object"
        },
        "version": "1.119.0"
       }
      ],
      "description": "Virtual Private Cloud (VPC) | ports",
      "isInternal": false,
      "name": "ports",
      "version": "1.119.0"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create async Public IP in a VPC with provided vpc_id and x_tenant_id",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "description": {
           "default": "",
           "nullable": true,
           "title": "Description",
           "type": "string"
          },
          "validate_quota": {
           "default": true,
           "description": "Validate the quota before creating the Public IP",
           "title": "validateQuota",
           "type": "boolean"
          },
          "vpc_id": {
           "description": "Id of the VPC to create the Public IP in",
           "title": "Vpc ID",
           "type": "string"
          },
          "wait": {
           "default": true,
           "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
           "title": "wait",
           "type": "boolean"
          },
          "wait_timeout": {
           "default": 120,
           "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
           "nullable": true,
           "title": "waitTimeout",
           "type": "integer"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "magalu.cloud/core/resolved": "true",
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "PublicIpCreateResponse",
         "type": "object"
        },
        "version": "1.119.0"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of Public IPs for a provided vpc_id",
        "isInternal": false,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "vpc_id": {
           "description": "Id of the VPC to list the Public IPs in",
           "title": "Vpc ID",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "public_ips": [
           {
            "created_at": "2022-01-01 00:00:00",
            "description": "port description",
            "error": "error",
            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "port_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "public_ip": "100.94.5.31",
            "status": "created",
            "updated": "2022-01-01 00:00:00",
            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          ]
         },
         "properties": {
          "public_ips": {
           "items": {
            "example": {
             "created_at": "2022-01-01 00:00:00",
             "description": "port description",
             "error": "error",
             "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "public_ip": "100.94.5.31",
             "status": "created",
             "updated": "2022-01-01 00:00:00",
             "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "properties": {
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "description": {
              "nullable": true,
              "title": "Description",
              "type": "string"
             },
             "error": {
              "nullable": true,
              "title": "Error",
              "type": "string"
             },
             "external_id": {
              "nullable": true,
              "title": "External Id",
              "type": "string"
             },
             "id": {
              "nullable": true,
              "title": "Id",
              "type": "string"
             },
             "port_id": {
              "nullable": true,
              "title": "Port Id",
              "type": "string"
             },
             "public_ip": {
              "nullable": true,
              "title": "Public Ip",
              "type": "string"
             },
             "status": {
              "nullable": true,
              "title": "Status",
              "type": "string"
             },
             "updated": {
              "format": "date-time",
              "nullable": true,
              "title": "Updated",
              "type": "string"
             },
             "vpc_id": {
              "nullable": true,
              "title": "Vpc Id",
              "type": "string"
             }
            },
            "title": "PublicIpDb",
            "type": "object"
           },
           "title": "Public Ips",
           "type": "array"
          }
         },
         "required": [
          "public_ips"
         ],
         "title": "PublicIpsList",
         "type": "object"
        },
        "version": "1.119.0"
       }
      ],
      "description": "Virtual Private Cloud (VPC) | public-ips",
      "isInternal": false,
      "name": "public-ips",
      "version": "1.119.0"
     },
     {
      "children": [
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Create a Security Group",
        "isInternal": true,
        "name": "create",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "description": {
           "default": "",
           "nullable": true,
           "title": "Description",
           "type": "string"
          },
          "name": {
           "maxLength": 100,
           "minLength": 5,
           "nullable": true,
           "title": "Name",
           "type": "string"
          },
          "vpc_id": {
           "description": "Id of the vpc to create the security group in",
           "nullable": true,
           "title": "VPC Id",
           "type": "string"
          },
          "wait": {
           "default": true,
           "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
           "nullable": true,
           "title": "wait",
           "type": "boolean"
          },
          "wait_timeout": {
           "default": 120,
           "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
           "nullable": true,
           "title": "waitTimeout",
           "type": "integer"
          }
         },
         "required": [
          "name",
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
         },
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          }
         },
         "required": [
          "id"
         ],
         "title": "SecurityGroupCreateResponse",
         "type": "object"
        },
        "version": "1.119.0"
       },
       {
        "configs": {
         "additionalProperties": false,
         "properties": {
          "env": {
           "default": "prod",
           "description": "Environment to use",
           "enum": [
            "prod",
            "pre-prod"
           ],
           "type": "string"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          }
         },
         "type": "object"
        },
        "description": "Returns a list of security groups for a provided vpc_id",
        "isInternal": true,
        "name": "list",
        "parameters": {
         "additionalProperties": false,
         "properties": {
          "vpc_id": {
           "description": "Id of the VPC to create the Security Group in",
           "title": "Vpc ID",
           "type": "string"
          }
         },
         "required": [
          "vpc_id"
         ],
         "type": "object"
        },
        "result": {
         "example": {
          "security_groups": [
           {
            "created_at": "2022-01-01 00:00:00",
            "description": "security group description",
            "error": "null",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "is_default": true,
            "name": "security_group_name",
            "project_type": "default",
            "status": "created",
            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "updated": "2022-01-01 00:00:00",
            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
           }
          ]
         },
         "properties": {
          "security_groups": {
           "items": {
            "example": {
             "created_at": "2022-01-01 00:00:00",
             "description": "security group description",
             "error": "null",
             "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "is_default": true,
             "name": "security_group_name",
             "project_type": "default",
             "status": "created",
             "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
             "updated": "2022-01-01 00:00:00",
             "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "properties": {
             "created_at": {
              "format": "date-time",
              "nullable": true,
              "title": "Created At",
              "type": "string"
             },
             "description": {
              "nullable": true,
              "title": "Description",
              "type": "string"
             },
             "error": {
              "nullable": true,
              "title": "Error",
              "type": "string"
             },
             "id": {
              "nullable": true,
              "title": "Id",
              "type": "string"
             },
             "is_default": {
              "nullable": true,
              "title": "Is Default",
              "type": "boolean"
             },
             "name": {
              "nullable": true,
              "title": "Name",
              "type": "string"
             },
             "project_type": {
              "nullable": true,
              "title": "Project Type",
              "type": "string"
             },
             "status": {
              "enum": [
               "created",
               "pending",
               "error"
              ],
              "title": "SecurityGroupStatus",
              "type": "string"
             },
             "tenant_id": {
              "nullable": true,
              "title": "Tenant Id",
              "type": "string"
             },
             "updated": {
              "format": "date-time",
              "nullable": true,
              "title": "Updated",
              "type": "string"
             },
             "vpc_id": {
              "nullable": true,
              "title": "Vpc Id",
              "type": "string"
             }
            },
            "required": [
             "status"
            ],
            "title": "SecurityGroupResponseEvent",
            "type": "object"
           },
           "title": "Security Groups",
           "type": "array"
          }
         },
         "required": [
          "security_groups"
         ],
         "title": "SecurityGroupListEvent",
         "type": "object"
        },
        "version": "1.119.0"
       }
      ],
      "description": "Virtual Private Cloud (VPC) | security-groups",
      "isInternal": true,
      "name": "security-groups",
      "version": "1.119.0"
     }
    ],
    "description": "Virtual Private Cloud (VPC)",
    "isInternal": false,
    "name": "vpcs",
    "version": "1.119.0"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Update a public ip from the provided tenant_id",
      "isInternal": true,
      "name": "update",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "error": {
         "nullable": true,
         "title": "Error",
         "type": "string"
        },
        "external_id": {
         "nullable": true,
         "title": "External Id",
         "type": "string"
        },
        "public_ip": {
         "nullable": true,
         "title": "Public Ip",
         "type": "string"
        },
        "public_ip_id": {
         "description": "Id of the public ip to update",
         "title": "Public Ip Id",
         "type": "string"
        },
        "status": {
         "enum": [
          "created",
          "pending",
          "error"
         ],
         "title": "PublicIpStatus",
         "type": "string"
        }
       },
       "required": [
        "public_ip_id",
        "status"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "PublicIpResponseId",
       "type": "object"
      },
      "version": "1.119.0"
     }
    ],
    "description": "worker_public_ips",
    "isInternal": true,
    "name": "worker_public_ips",
    "version": "1.119.0"
   }
  ],
  "description": "APIs referentes ao produto de VPC",
  "isInternal": false,
  "name": "network",
  "version": "1.119.0"
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "Change current Object Storage credential",
      "isInternal": true,
      "name": "add",
      "parameters": {
       "properties": {
        "keyId": {
         "description": "ID of api key to use",
         "type": "string"
        },
        "keySecret": {
         "description": "Secret of api key to use",
         "type": "string"
        }
       },
       "required": [
        "keyId",
        "keySecret"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Create new credentials used for Object Storage requests",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "properties": {
        "description": {
         "description": "Description of new api key",
         "type": "string"
        },
        "expiration": {
         "description": "Date to expire new api",
         "example": "2024-11-07 (YYYY-MM-DD)",
         "type": "string"
        },
        "name": {
         "description": "Name of new api key",
         "type": "string"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "used": {
         "type": "boolean"
        },
        "uuid": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Get the current Object Storage credentials",
      "isInternal": false,
      "name": "current",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Get details about a specific key",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "properties": {
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List valid Object Storage credentials",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "description": {
          "type": "string"
         },
         "end_validity": {
          "type": "string"
         },
         "key_pair_id": {
          "type": "string"
         },
         "key_pair_secret": {
          "type": "string"
         },
         "name": {
          "type": "string"
         },
         "revoked_at": {
          "type": "string"
         },
         "start_validity": {
          "type": "string"
         },
         "tenant_name": {
          "type": "string"
         },
         "uuid": {
          "type": "string"
         }
        },
        "required": [
         "uuid",
         "name",
         "description",
         "key_pair_id",
         "key_pair_secret",
         "start_validity"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Revoke credentials used in Object Storage requests",
      "isInternal": false,
      "name": "revoke",
      "parameters": {
       "properties": {
        "uuid": {
         "description": "UUID of api key to revoke",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "uuid": {
         "description": "UUID of api key to revoke",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Change current Object Storage credential to selected",
      "isInternal": false,
      "name": "set",
      "parameters": {
       "properties": {
        "uuid": {
         "description": "UUID of api key to select",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "",
    "isInternal": false,
    "name": "api-key",
    "version": ""
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Get the ACL for the specified bucket",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "properties": {
          "dst": {
           "description": "Specifies the bucket whose ACL is being requested",
           "type": "string"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "AccessControlList": {
           "properties": {
            "Grant": {
             "items": {
              "properties": {
               "Grantee": {
                "properties": {
                 "DisplayName": {
                  "type": "string"
                 },
                 "ID": {
                  "type": "string"
                 },
                 "URI": {
                  "type": "string"
                 }
                },
                "required": [
                 "DisplayName",
                 "ID",
                 "URI"
                ],
                "type": "object"
               },
               "Permission": {
                "type": "string"
               }
              },
              "required": [
               "Grantee",
               "Permission"
              ],
              "type": "object"
             },
             "type": "array"
            }
           },
           "required": [
            "Grant"
           ],
           "type": "object"
          },
          "Owner": {
           "properties": {
            "DisplayName": {
             "type": "string"
            },
            "ID": {
             "type": "string"
            }
           },
           "required": [
            "DisplayName",
            "ID"
           ],
           "type": "object"
          }
         },
         "required": [
          "Owner",
          "AccessControlList"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "set permission information for the specified bucket",
        "isInternal": false,
        "name": "set",
        "parameters": {
         "properties": {
          "authenticated_read": {
           "description": "Owner gets FULL_CONTROL. Authenticated users have READ rights",
           "type": "boolean"
          },
          "aws_exec_read": {
           "type": "boolean"
          },
          "dst": {
           "description": "Name of the bucket to set permissions for",
           "example": "my-bucket",
           "type": "string"
          },
          "grant_full_control": {
           "description": "Grantees get FULL_CONTROL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read": {
           "description": "Allows grantees to list the objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read_acp": {
           "description": "Allows grantees to read the bucket ACL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write": {
           "description": "Allows grantees to create objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write_acp": {
           "description": "Allows grantees to write the ACL for the applicable bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "private": {
           "description": "Owner gets FULL_CONTROL. Delegated users have access. No one else has access rights",
           "type": "boolean"
          },
          "public_read": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ rights",
           "type": "boolean"
          },
          "public_read_write": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ and WRITE rights",
           "type": "boolean"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       }
      ],
      "description": "ACL-related commands",
      "isInternal": false,
      "name": "acl",
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Buckets are \"containers\" that are able to store various Objects inside",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "properties": {
        "authenticated_read": {
         "description": "Owner gets FULL_CONTROL. Authenticated users have READ rights",
         "type": "boolean"
        },
        "aws_exec_read": {
         "type": "boolean"
        },
        "enable_versioning": {
         "default": true,
         "description": "Enable versioning for this bucket",
         "type": "boolean"
        },
        "grant_full_control": {
         "description": "Grantees get FULL_CONTROL",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_read": {
         "description": "Allows grantees to list the objects in the bucket",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_read_acp": {
         "description": "Allows grantees to read the bucket ACL",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_write": {
         "description": "Allows grantees to create objects in the bucket",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_write_acp": {
         "description": "Allows grantees to write the ACL for the applicable bucket",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "name": {
         "description": "Name of the bucket to be created",
         "type": "string"
        },
        "private": {
         "description": "Owner gets FULL_CONTROL. Delegated users have access. No one else has access rights",
         "type": "boolean"
        },
        "public_read": {
         "description": "Owner gets FULL_CONTROL. Everyone else has READ rights",
         "type": "boolean"
        },
        "public_read_write": {
         "description": "Owner gets FULL_CONTROL. Everyone else has READ and WRITE rights",
         "type": "boolean"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete an existing Bucket",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "bucket": {
         "description": "Name of the bucket to be deleted",
         "type": "string"
        },
        "recursive": {
         "default": false,
         "description": "Delete bucket including objects inside",
         "type": "boolean"
        }
       },
       "required": [
        "bucket",
        "recursive"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "List all existing Buckets",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "Buckets": {
         "items": {
          "properties": {
           "CreationDate": {
            "type": "string"
           },
           "Name": {
            "type": "string"
           }
          },
          "required": [
           "CreationDate",
           "Name"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "Owner": {
         "properties": {
          "DisplayName": {
           "type": "string"
          },
          "ID": {
           "type": "string"
          }
         },
         "required": [
          "DisplayName",
          "ID"
         ],
         "type": "object"
        }
       },
       "required": [
        "Buckets",
        "Owner"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Get bucket public url",
      "isInternal": false,
      "name": "public-url",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the bucket to generate the public url",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "url": {
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "children": [
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Enable versioning for a Bucket",
        "isInternal": false,
        "name": "enable",
        "parameters": {
         "properties": {
          "bucket": {
           "description": "Bucket name to enable versioning",
           "type": "string"
          }
         },
         "required": [
          "bucket"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Get versioning info for a Bucket",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "properties": {
          "bucket": {
           "description": "Bucket name to get versioning info from",
           "type": "string"
          }
         },
         "required": [
          "bucket"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "MfaDelete": {
           "type": "string"
          },
          "Status": {
           "type": "string"
          }
         },
         "required": [
          "Status",
          "MfaDelete"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Suspend versioning for a Bucket",
        "isInternal": false,
        "name": "suspend",
        "parameters": {
         "properties": {
          "bucket": {
           "description": "Bucket name to suspend versioning",
           "type": "string"
          }
         },
         "required": [
          "bucket"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       }
      ],
      "description": "Manage bucket versioning",
      "isInternal": false,
      "name": "versioning",
      "version": ""
     }
    ],
    "description": "Bucket operations for Object Storage API",
    "isInternal": false,
    "name": "buckets",
    "version": ""
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Get ACL information for the specified object",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "properties": {
          "dst": {
           "description": "The full object URL to get the ACL information from",
           "format": "uri",
           "type": "string"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "AccessControlList": {
           "properties": {
            "Grant": {
             "items": {
              "properties": {
               "Grantee": {
                "properties": {
                 "DisplayName": {
                  "type": "string"
                 },
                 "ID": {
                  "type": "string"
                 },
                 "URI": {
                  "type": "string"
                 }
                },
                "required": [
                 "DisplayName",
                 "ID",
                 "URI"
                ],
                "type": "object"
               },
               "Permission": {
                "type": "string"
               }
              },
              "required": [
               "Grantee",
               "Permission"
              ],
              "type": "object"
             },
             "type": "array"
            }
           },
           "required": [
            "Grant"
           ],
           "type": "object"
          },
          "Owner": {
           "properties": {
            "DisplayName": {
             "type": "string"
            },
            "ID": {
             "type": "string"
            }
           },
           "required": [
            "DisplayName",
            "ID"
           ],
           "type": "object"
          }
         },
         "required": [
          "Owner",
          "AccessControlList"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Set ACL information for the specified object",
        "isInternal": false,
        "name": "set",
        "parameters": {
         "properties": {
          "authenticated_read": {
           "description": "Owner gets FULL_CONTROL. Authenticated users have READ rights",
           "type": "boolean"
          },
          "aws_exec_read": {
           "type": "boolean"
          },
          "bucket_owner_full_control": {
           "type": "boolean"
          },
          "bucket_owner_read": {
           "type": "boolean"
          },
          "dst": {
           "description": "The full object URL to set the ACL information",
           "format": "uri",
           "type": "string"
          },
          "grant_full_control": {
           "description": "Grantees get FULL_CONTROL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read": {
           "description": "Allows grantees to list the objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read_acp": {
           "description": "Allows grantees to read the bucket ACL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write": {
           "description": "Allows grantees to create objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write_acp": {
           "description": "Allows grantees to write the ACL for the applicable bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "obj_version": {
           "description": "Version of the object to set the ACL",
           "type": "string"
          },
          "private": {
           "description": "Owner gets FULL_CONTROL. Delegated users have access. No one else has access rights",
           "type": "boolean"
          },
          "public_read": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ rights",
           "type": "boolean"
          },
          "public_read_write": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ and WRITE rights",
           "type": "boolean"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       }
      ],
      "description": "ACL related operations",
      "isInternal": false,
      "name": "acl",
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Copy an object from a bucket to another bucket",
      "isInternal": false,
      "name": "copy",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket with desired filename",
         "example": "bucket2/dir/file.txt",
         "format": "uri",
         "type": "string"
        },
        "obj_version": {
         "description": "Version of the object to be copied",
         "type": "string"
        },
        "src": {
         "description": "Path of the object in a bucket to be copied",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Copy all objects from a bucket to another bucket",
      "isInternal": false,
      "name": "copy-all",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "bucket2/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects in a bucket to be copied",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "bucket2/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects in a bucket to be copied",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete an object from a bucket",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to be deleted",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        },
        "objVersion": {
         "description": "Version of the object to be deleted",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete all objects from a bucket",
      "isInternal": false,
      "name": "delete-all",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to delete",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "bucket": {
         "description": "Name of the bucket to delete objects from",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "bucket"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Download an object from a bucket. If no destination is specified, the default is the current working directory",
      "isInternal": false,
      "name": "download",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path and file name to be saved (relative or absolute).If not specified it defaults to the current working directory",
         "example": "file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "obj_version": {
         "description": "Version of the object to be downloaded",
         "type": "string"
        },
        "src": {
         "description": "Path of the object to be downloaded",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Download all objects from a bucket",
      "isInternal": false,
      "name": "download-all",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path to save files",
         "example": "path/to/folder",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects to be downloaded",
         "example": "mybucket",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dst": {
         "description": "Path and file name to be saved (relative or absolute).If not specified it defaults to the current working directory",
         "example": "file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "obj_version": {
         "description": "Version of the object to be downloaded",
         "type": "string"
        },
        "src": {
         "description": "Path of the object to be downloaded",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Get object metadata",
      "isInternal": false,
      "name": "head",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to be get metadata from",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        },
        "objVersion": {
         "description": "Version of the object to be get metadata from",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "AcceptRanges": {
         "type": "string"
        },
        "ContentLength": {
         "type": "integer"
        },
        "ContentType": {
         "type": "string"
        },
        "ETag": {
         "type": "string"
        },
        "LastModified": {
         "type": "string"
        }
       },
       "required": [
        "AcceptRanges",
        "LastModified",
        "ContentLength",
        "ETag",
        "ContentType"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "List all objects from a bucket",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "properties": {
        "continuation-token": {
         "description": "Token of result page to continue from",
         "type": "string"
        },
        "dst": {
         "description": "Path of the bucket to list objects from",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "max-items": {
         "default": 1000,
         "description": "Limit of items to be listed",
         "example": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "recursive": {
         "default": false,
         "description": "List folders and subfolders",
         "type": "boolean"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "CommonPrefixes": {
         "items": {
          "properties": {
           "Path": {
            "type": "string"
           }
          },
          "required": [
           "Path"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "Contents": {
         "items": {
          "properties": {
           "ContentSize": {
            "type": "integer"
           },
           "Key": {
            "type": "string"
           },
           "LastModified": {
            "type": "string"
           }
          },
          "required": [
           "Key",
           "LastModified",
           "ContentSize"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "Contents",
        "CommonPrefixes"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Moves one object from a source to a destination.\nIt can be either local or remote but not both local (Local -> Remote, Remote -> Local, Remote -> Remote)",
      "isInternal": false,
      "name": "move",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Destination to put the file into",
         "example": "s3://my-bucket/test.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "A file to move to the Destination",
         "example": "./hello.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dst": {
         "description": "Destination to put the file into",
         "example": "s3://my-bucket/test.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "A file to move to the Destination",
         "example": "./hello.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Moves objects from a source to a destination.\nThey can be either local or remote but not both local (Local -> Remote, Remote -> Local, Remote -> Remote)",
      "isInternal": false,
      "name": "move-dir",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to process",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "dst": {
         "description": "Destination to put files into",
         "example": "s3://my-bucket/dir",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source path or uri to move files from",
         "example": "./dir",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to process",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "dst": {
         "description": "Destination to put files into",
         "example": "s3://my-bucket/dir",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source path or uri to move files from",
         "example": "./dir",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Generate a pre-signed URL for accessing an object",
      "isInternal": false,
      "name": "presign",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to generate pre-signed URL for",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        },
        "expires-in": {
         "description": "Expiration time for the pre-signed URL. Valid time units are 'ns, 'us' (or 'µs'), 'ms', 's',  'm', and 'h'.default=5m",
         "example": "2h",
         "type": "string"
        },
        "method": {
         "default": "GET",
         "enum": [
          "GET",
          "PUT"
         ],
         "type": "string"
        }
       },
       "required": [
        "dst",
        "method"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "url": {
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Get object public url",
      "isInternal": false,
      "name": "public-url",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to generate the public url",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "url": {
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "This command uploads any file from the source to the destination if it's not present or has a different size. Additionally any file in the destination not present on the source is deleted.",
      "isInternal": false,
      "name": "sync",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to delete",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "delete": {
         "default": false,
         "description": "Deletes any item at the destination not present on the source",
         "type": "boolean"
        },
        "dst": {
         "description": "Full destination path to sync with the source path",
         "example": "s3://my-bucket/dir/",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source path to sync the remote with",
         "example": "./",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Upload a file to a bucket",
      "isInternal": false,
      "name": "upload",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket with desired filename",
         "example": "my-bucket/dir/file.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source file path to be uploaded",
         "example": "./file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "file": {
         "type": "string"
        },
        "uri": {
         "type": "string"
        }
       },
       "required": [
        "file",
        "uri"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Upload a directory to a bucket",
      "isInternal": false,
      "name": "upload-dir",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "my-bucket/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "shallow": {
         "default": false,
         "description": "Don't upload subdirectories",
         "type": "boolean"
        },
        "src": {
         "description": "Source directory path for upload",
         "example": "path/to/folder",
         "type": "string",
         "x-contentMediaType": "inode/directory"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dir": {
         "type": "string"
        },
        "uri": {
         "type": "string"
        }
       },
       "required": [
        "dir",
        "uri"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Retrieve all versions of an object",
      "isInternal": false,
      "name": "versions",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to retrieve versions from",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "ETag": {
          "type": "string"
         },
         "IsLatest": {
          "type": "boolean"
         },
         "Key": {
          "type": "string"
         },
         "LastModified": {
          "type": "string"
         },
         "Owner": {
          "properties": {
           "DisplayName": {
            "type": "string"
           },
           "ID": {
            "type": "string"
           }
          },
          "required": [
           "DisplayName",
           "ID"
          ],
          "type": "object"
         },
         "Size": {
          "type": "integer"
         },
         "StorageClass": {
          "type": "string"
         },
         "Text": {
          "type": "string"
         },
         "VersionID": {
          "type": "string"
         }
        },
        "required": [
         "Text",
         "VersionID",
         "IsLatest",
         "Key",
         "LastModified",
         "ETag",
         "Size",
         "Owner",
         "StorageClass"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     }
    ],
    "description": "Object operations for Object Storage API",
    "isInternal": false,
    "name": "objects",
    "version": ""
   }
  ],
  "description": "Create and manage Buckets and Objects via the Object Storage API",
  "isInternal": false,
  "name": "object-storage",
  "version": ""
 },
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Creates a new profile",
    "isInternal": false,
    "name": "create",
    "parameters": {
     "properties": {
      "copy": {
       "description": "Name of the profile to copy content from. If this parameter is passed, the new Profile will be pre-populated with the contents of the Profile with the specified name",
       "type": "string"
      },
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Shows current selected profile. Any changes to auth or config values will only affect this profile",
    "isInternal": false,
    "name": "current",
    "parameters": {
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Deletes the profile with the specified name",
    "isInternal": false,
    "name": "delete",
    "parameters": {
     "properties": {
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "List all available profiles",
    "isInternal": false,
    "name": "list",
    "parameters": {
     "type": "object"
    },
    "result": {
     "items": {
      "properties": {
       "name": {
        "type": "string"
       }
      },
      "required": [
       "name"
      ],
      "type": "object"
     },
     "type": "array"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Sets profile to be used",
    "isInternal": false,
    "name": "set-current",
    "parameters": {
     "properties": {
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   }
  ],
  "description": "Profiles hold auth and runtime configuration for the MgcSDK, like tokens and log filter settings.\nUsers can create as many profiles as they choose to. Auth and config operations will affect only the\ncurrent profile, so users can alter and switch between profiles without loosing the previous configuration",
  "isInternal": false,
  "name": "profile",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieve a list of images allowed for the current tenant which is logged in.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "platform:asc,end_life_at:desc",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "images": [
         {
          "end_life_at": "2022-06-10T18:33:12Z",
          "end_standard_support_at": "2022-06-10T18:33:12Z",
          "id": "c47e974f-8002-46e9-8a63-d66505be2aa1",
          "minimum_requirements": {
           "disk": 2,
           "ram": 1,
           "vcpu": 1
          },
          "name": "ubuntu 22.10",
          "platform": "linux",
          "release_at": "2022-06-10T18:33:12Z",
          "status": "active",
          "version": "22.10"
         }
        ]
       },
       "properties": {
        "images": {
         "items": {
          "example": {
           "end_life_at": "2022-06-10T18:33:12Z",
           "end_standard_support_at": "2022-06-10T18:33:12Z",
           "id": "c47e974f-8002-46e9-8a63-d66505be2aa1",
           "minimum_requirements": {
            "disk": 2,
            "ram": 1,
            "vcpu": 1
           },
           "name": "ubuntu 22.10",
           "platform": "linux",
           "release_at": "2022-06-10T18:33:12Z",
           "status": "active",
           "version": "22.10"
          },
          "properties": {
           "end_life_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "End Life At",
            "type": "string"
           },
           "end_standard_support_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "End Standard Support At",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "minimum_requirements": {
            "properties": {
             "disk": {
              "title": "Disk",
              "type": "integer"
             },
             "ram": {
              "title": "Ram",
              "type": "integer"
             },
             "vcpu": {
              "title": "Vcpu",
              "type": "integer"
             }
            },
            "required": [
             "vcpu",
             "ram",
             "disk"
            ],
            "title": "ImageReqMin",
            "type": "object"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "platform": {
            "nullable": true,
            "title": "Platform",
            "type": "string"
           },
           "release_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "Release At",
            "type": "string"
           },
           "status": {
            "enum": [
             "active",
             "deprecated",
             "deleted",
             "pending",
             "creating",
             "importing",
             "error"
            ],
            "title": "ImageV1Status",
            "type": "string"
           },
           "version": {
            "nullable": true,
            "title": "Version",
            "type": "string"
           }
          },
          "required": [
           "id",
           "name",
           "status",
           "minimum_requirements"
          ],
          "title": "ImageResponseExternalV1",
          "type": "object"
         },
         "title": "Images",
         "type": "array"
        }
       },
       "required": [
        "images"
       ],
       "title": "ListImageExternalV1",
       "type": "object"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with images for instances.",
    "isInternal": false,
    "name": "images",
    "version": "v1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a Virtual Machine instance",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "availability_zone": {
         "maxLength": 255,
         "minLength": 1,
         "nullable": true,
         "title": "Availability Zone",
         "type": "string"
        },
        "image": {
         "anyOf": [
          {
           "example": {
            "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Image",
         "type": "object"
        },
        "machine_type": {
         "anyOf": [
          {
           "example": {
            "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "network": {
         "default": {
          "associate_public_ip": true,
          "vpc": {
           "name": "default"
          }
         },
         "example": {
          "associate_public_ip": true,
          "vpc": {
           "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
          }
         },
         "properties": {
          "associate_public_ip": {
           "default": true,
           "title": "Associate Public Ip",
           "type": "boolean"
          },
          "vpc": {
           "anyOf": [
            {
             "example": {
              "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
             },
             "properties": {
              "id": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "ID",
             "type": "object"
            },
            {
             "example": {
              "name": "some_resource_name"
             },
             "properties": {
              "name": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "name"
             ],
             "title": "Name",
             "type": "object"
            }
           ],
           "default": {
            "name": "default"
           },
           "title": "Vpc",
           "type": "object"
          }
         },
         "type": "object"
        },
        "ssh_key_name": {
         "title": "Ssh Key Name",
         "type": "string"
        },
        "user_data": {
         "maxLength": 65000,
         "minLength": 1,
         "nullable": true,
         "title": "User Data",
         "type": "string"
        }
       },
       "required": [
        "image",
        "machine_type",
        "name",
        "ssh_key_name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "CreateResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Delete a Virtual Machine instance",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "delete_public_ip": {
         "default": false,
         "title": "Delete Public Ip",
         "type": "boolean"
        },
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get a Virtual Machine instance details",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type', 'network'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "availability_zone": "br-regiao-1a",
        "created_at": "2022-06-10T18:33:12Z",
        "error": {
         "message": "An error occurred while creating your instance. Please contact our support for assistance.",
         "slug": "create_instance.keypair.not_found"
        },
        "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6",
        "image": {
         "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
        },
        "machine_type": {
         "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
        },
        "name": "instance name",
        "network": {
         "ports": [
          {
           "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
          }
         ]
        },
        "ssh_key_name": "keypair_name_here",
        "state": "running",
        "status": "completed",
        "updated_at": "2022-06-11T18:33:12Z",
        "user_data": "some_base_64_str"
       },
       "properties": {
        "availability_zone": {
         "nullable": true,
         "title": "Availability Zone",
         "type": "string"
        },
        "created_at": {
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "error": {
         "example": {
          "message": "Unauthorized",
          "slug": "Unauthorized"
         },
         "properties": {
          "message": {
           "title": "Message",
           "type": "string"
          },
          "slug": {
           "title": "Slug",
           "type": "string"
          }
         },
         "required": [
          "slug",
          "message"
         ],
         "title": "ErrorMessageV1",
         "type": "object"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "image": {
         "anyOf": [
          {
           "additionalProperties": true,
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ImageInstanceV1Response",
           "type": "object"
          },
          {
           "example": {
            "id": "847ceef4-ff96-4762-895d-5e94e410ddeb",
            "name": "ubuntu",
            "platform": "linux"
           },
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "platform": {
             "nullable": true,
             "title": "Platform",
             "type": "string"
            }
           },
           "required": [
            "id",
            "name"
           ],
           "title": "ImageExtendResponse",
           "type": "object"
          }
         ],
         "title": "Image",
         "type": "object"
        },
        "machine_type": {
         "anyOf": [
          {
           "additionalProperties": true,
           "properties": {
            "id": {
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "InstanceTypeForInstanceV1Response",
           "type": "object"
          },
          {
           "example": {
            "disk": 10,
            "id": "3a4dc05b-eb10-42ec-8c0c-848e06f7aded",
            "name": "abc.small",
            "ram": 2,
            "vcpus": 2
           },
           "properties": {
            "disk": {
             "title": "Disk",
             "type": "integer"
            },
            "id": {
             "title": "Id",
             "type": "string"
            },
            "name": {
             "title": "Name",
             "type": "string"
            },
            "ram": {
             "title": "Ram",
             "type": "integer"
            },
            "vcpus": {
             "title": "Vcpus",
             "type": "integer"
            }
           },
           "required": [
            "id",
            "name",
            "vcpus",
            "ram",
            "disk"
           ],
           "title": "InstanceTypesExtendResponse",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "network": {
         "anyOf": [
          {
           "properties": {
            "ports": {
             "items": {
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "PortID",
              "type": "object"
             },
             "title": "Ports",
             "type": "array"
            }
           },
           "required": [
            "ports"
           ],
           "title": "NetworkPortsV1",
           "type": "object"
          },
          {
           "properties": {
            "ports": {
             "items": {
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               },
               "ipAddresses": {
                "properties": {
                 "privateIpAddress": {
                  "title": "Privateipaddress",
                  "type": "string"
                 },
                 "publicIpAddress": {
                  "title": "Publicipaddress",
                  "type": "string"
                 }
                },
                "required": [
                 "publicIpAddress",
                 "privateIpAddress"
                ],
                "title": "IpAddressExpand",
                "type": "object"
               },
               "name": {
                "title": "Name",
                "type": "string"
               }
              },
              "required": [
               "id",
               "name",
               "ipAddresses"
              ],
              "title": "PortV1Expand",
              "type": "object"
             },
             "nullable": true,
             "title": "Ports",
             "type": "array"
            },
            "vpc": {
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "id",
              "name"
             ],
             "title": "VpcV1Expand",
             "type": "object"
            }
           },
           "title": "NetworkPortsV1Expand",
           "type": "object"
          }
         ],
         "nullable": true,
         "title": "Network",
         "type": "object"
        },
        "ssh_key_name": {
         "nullable": true,
         "title": "Ssh Key Name",
         "type": "string"
        },
        "state": {
         "enum": [
          "new",
          "running",
          "stopped",
          "suspended",
          "deleted"
         ],
         "title": "InstanceV1State",
         "type": "string"
        },
        "status": {
         "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_network_error",
          "creating_error_quota",
          "creating_error_quota_ram",
          "creating_error_quota_vcpu",
          "creating_error_quota_disk",
          "creating_error_quota_instance",
          "creating_error_quota_floating_ip",
          "completed",
          "retyping_pending",
          "retyping",
          "retyping_confirmed",
          "retyping_error",
          "retyping_error_quota",
          "stopping_pending",
          "stopping",
          "suspending_pending",
          "suspending",
          "rebooting_pending",
          "rebooting",
          "starting_pending",
          "starting",
          "deleting_pending",
          "deleting",
          "deleting_error",
          "deleted"
         ],
         "title": "InstanceV1Status",
         "type": "string"
        },
        "updated_at": {
         "example": "2022-01-01T00:00:10Z",
         "nullable": true,
         "title": "Updated At",
         "type": "string"
        },
        "user_data": {
         "nullable": true,
         "title": "User Data",
         "type": "string"
        }
       },
       "required": [
        "id",
        "machine_type",
        "image",
        "status",
        "state",
        "created_at"
       ],
       "title": "InstanceV1Response",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List Virtual Machine instances",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "description": "limit the number of the results",
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "description": "pagination for the results limited",
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "description": "order of the results using informed fields",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type', 'network'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "instances": [
         {
          "availability_zone": "br-regiao-1a",
          "created_at": "2022-06-10T18:33:12Z",
          "error": {
           "message": "An error occurred while creating your instance. Please contact our support for assistance.",
           "slug": "create_instance.keypair.not_found"
          },
          "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6",
          "image": {
           "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
          },
          "machine_type": {
           "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
          },
          "name": "instance name",
          "network": {
           "ports": [
            {
             "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
            }
           ]
          },
          "ssh_key_name": "keypair_name_here",
          "state": "running",
          "status": "completed",
          "updated_at": "2022-06-11T18:33:12Z",
          "user_data": "base64_data"
         }
        ]
       },
       "properties": {
        "instances": {
         "items": {
          "example": {
           "availability_zone": "br-regiao-1a",
           "created_at": "2022-06-10T18:33:12Z",
           "error": {
            "message": "An error occurred while creating your instance. Please contact our support for assistance.",
            "slug": "create_instance.keypair.not_found"
           },
           "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6",
           "image": {
            "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
           },
           "machine_type": {
            "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
           },
           "name": "instance name",
           "network": {
            "ports": [
             {
              "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
             }
            ]
           },
           "ssh_key_name": "keypair_name_here",
           "state": "running",
           "status": "completed",
           "updated_at": "2022-06-11T18:33:12Z",
           "user_data": "some_base_64_str"
          },
          "properties": {
           "availability_zone": {
            "nullable": true,
            "title": "Availability Zone",
            "type": "string"
           },
           "created_at": {
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "error": {
            "example": {
             "message": "Unauthorized",
             "slug": "Unauthorized"
            },
            "properties": {
             "message": {
              "title": "Message",
              "type": "string"
             },
             "slug": {
              "title": "Slug",
              "type": "string"
             }
            },
            "required": [
             "slug",
             "message"
            ],
            "title": "ErrorMessageV1",
            "type": "object"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "image": {
            "anyOf": [
             {
              "additionalProperties": true,
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "ImageInstanceV1Response",
              "type": "object"
             },
             {
              "example": {
               "id": "847ceef4-ff96-4762-895d-5e94e410ddeb",
               "name": "ubuntu",
               "platform": "linux"
              },
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "platform": {
                "nullable": true,
                "title": "Platform",
                "type": "string"
               }
              },
              "required": [
               "id",
               "name"
              ],
              "title": "ImageExtendResponse",
              "type": "object"
             }
            ],
            "title": "Image",
            "type": "object"
           },
           "machine_type": {
            "anyOf": [
             {
              "additionalProperties": true,
              "properties": {
               "id": {
                "title": "Id",
                "type": "string"
               }
              },
              "required": [
               "id"
              ],
              "title": "InstanceTypeForInstanceV1Response",
              "type": "object"
             },
             {
              "example": {
               "disk": 10,
               "id": "3a4dc05b-eb10-42ec-8c0c-848e06f7aded",
               "name": "abc.small",
               "ram": 2,
               "vcpus": 2
              },
              "properties": {
               "disk": {
                "title": "Disk",
                "type": "integer"
               },
               "id": {
                "title": "Id",
                "type": "string"
               },
               "name": {
                "title": "Name",
                "type": "string"
               },
               "ram": {
                "title": "Ram",
                "type": "integer"
               },
               "vcpus": {
                "title": "Vcpus",
                "type": "integer"
               }
              },
              "required": [
               "id",
               "name",
               "vcpus",
               "ram",
               "disk"
              ],
              "title": "InstanceTypesExtendResponse",
              "type": "object"
             }
            ],
            "title": "Machine Type",
            "type": "object"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "network": {
            "anyOf": [
             {
              "properties": {
               "ports": {
                "items": {
                 "properties": {
                  "id": {
                   "title": "Id",
                   "type": "string"
                  }
                 },
                 "required": [
                  "id"
                 ],
                 "title": "PortID",
                 "type": "object"
                },
                "title": "Ports",
                "type": "array"
               }
              },
              "required": [
               "ports"
              ],
              "title": "NetworkPortsV1",
              "type": "object"
             },
             {
              "properties": {
               "ports": {
                "items": {
                 "properties": {
                  "id": {
                   "title": "Id",
                   "type": "string"
                  },
                  "ipAddresses": {
                   "properties": {
                    "privateIpAddress": {
                     "title": "Privateipaddress",
                     "type": "string"
                    },
                    "publicIpAddress": {
                     "title": "Publicipaddress",
                     "type": "string"
                    }
                   },
                   "required": [
                    "publicIpAddress",
                    "privateIpAddress"
                   ],
                   "title": "IpAddressExpand",
                   "type": "object"
                  },
                  "name": {
                   "title": "Name",
                   "type": "string"
                  }
                 },
                 "required": [
                  "id",
                  "name",
                  "ipAddresses"
                 ],
                 "title": "PortV1Expand",
                 "type": "object"
                },
                "nullable": true,
                "title": "Ports",
                "type": "array"
               },
               "vpc": {
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 }
                },
                "required": [
                 "id",
                 "name"
                ],
                "title": "VpcV1Expand",
                "type": "object"
               }
              },
              "title": "NetworkPortsV1Expand",
              "type": "object"
             }
            ],
            "nullable": true,
            "title": "Network",
            "type": "object"
           },
           "ssh_key_name": {
            "nullable": true,
            "title": "Ssh Key Name",
            "type": "string"
           },
           "state": {
            "enum": [
             "new",
             "running",
             "stopped",
             "suspended",
             "deleted"
            ],
            "title": "InstanceV1State",
            "type": "string"
           },
           "status": {
            "enum": [
             "provisioning",
             "creating",
             "creating_error",
             "creating_network_error",
             "creating_error_quota",
             "creating_error_quota_ram",
             "creating_error_quota_vcpu",
             "creating_error_quota_disk",
             "creating_error_quota_instance",
             "creating_error_quota_floating_ip",
             "completed",
             "retyping_pending",
             "retyping",
             "retyping_confirmed",
             "retyping_error",
             "retyping_error_quota",
             "stopping_pending",
             "stopping",
             "suspending_pending",
             "suspending",
             "rebooting_pending",
             "rebooting",
             "starting_pending",
             "starting",
             "deleting_pending",
             "deleting",
             "deleting_error",
             "deleted"
            ],
            "title": "InstanceV1Status",
            "type": "string"
           },
           "updated_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "Updated At",
            "type": "string"
           },
           "user_data": {
            "nullable": true,
            "title": "User Data",
            "type": "string"
           }
          },
          "required": [
           "id",
           "machine_type",
           "image",
           "status",
           "state",
           "created_at"
          ],
          "title": "InstanceV1Response",
          "type": "object"
         },
         "title": "Instances",
         "type": "array"
        }
       },
       "required": [
        "instances"
       ],
       "title": "ListInstanceV1Response",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Reboots a Virtual Machine instance with the id provided in the current tenant which is logged in.\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id\nof the instance that you want to reboot.\n\n#### Rules\n- The instance must be in the running state.",
      "isInternal": false,
      "name": "reboot",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Renames a Virtual Machine instance with the id provided in the current tenant which is logged in.\n\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id of\nthe instance that you want to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Changes a Virtual Machine instance machine type with the id provided in the current tenant\nwhich is logged in.\n\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get\nthe id of the instance that you want to change the machine type.\n\n#### Rules\n- The instance must be in the running or stopped state.\n- The new machine type must be compatible with the current machine type.\n- The new machine type must be available in the same region as the current machine type.\n- You must provide either the machine type id or the machine type name, if you provide both,\nthe machine type id will be used.",
      "isInternal": false,
      "name": "retype",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        },
        "machine_type": {
         "anyOf": [
          {
           "example": {
            "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        }
       },
       "required": [
        "id",
        "machine_type"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Starts a Virtual Machine instance with the id provided in the current tenant which is logged in.\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances,\nso you can get the id of the instance that you want to start.\n\n#### Rules\n- The instance must be in the stopped or suspended states.",
      "isInternal": false,
      "name": "start",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Stops a Virtual Machine instance with the id provided in the current tenant which is logged in.\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id of\nthe instance that you want to stop.\n\n#### Rules\n- The instance must be in the running state.",
      "isInternal": false,
      "name": "stop",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Suspends a Virtual Machine instance with the id provided in the current tenant which is logged in.\n\n#### Notes\n- You can use the virtual-machine list command to retrieve all instances, so you can get the id of\nthe instance that you want to suspend.\n\n#### Rules\n- The instance must be in the running state.",
      "isInternal": false,
      "name": "suspend",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with instances, including create, delete, start, stop, reboot and other actions.",
    "isInternal": false,
    "name": "instances",
    "version": "v1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Retrieves a list of machine types allowed for the current tenant which is logged in.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "description": "limit the number of the results",
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "description": "pagination for the results limited",
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "description": "order of the results using informed fields",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "instance_types": [
         {
          "disk": 10,
          "gpu": 1,
          "id": "3a4dc05b-eb10-42ec-8c0c-848e06f7aded",
          "name": "abc.small",
          "ram": 2,
          "status": "active",
          "vcpus": 2
         }
        ]
       },
       "properties": {
        "instance_types": {
         "items": {
          "example": {
           "disk": 10,
           "gpu": 1,
           "id": "3a4dc05b-eb10-42ec-8c0c-848e06f7aded",
           "name": "abc.small",
           "ram": 2,
           "status": "active",
           "vcpus": 2
          },
          "properties": {
           "disk": {
            "title": "Disk",
            "type": "integer"
           },
           "gpu": {
            "default": 0,
            "title": "Gpu",
            "type": "integer"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "name": {
            "title": "Name",
            "type": "string"
           },
           "ram": {
            "title": "Ram",
            "type": "integer"
           },
           "status": {
            "title": "Status",
            "type": "string"
           },
           "vcpus": {
            "title": "Vcpus",
            "type": "integer"
           }
          },
          "required": [
           "id",
           "name",
           "vcpus",
           "ram",
           "disk",
           "status"
          ],
          "title": "InstanceTypesV1Response",
          "type": "object"
         },
         "title": "Instance Types",
         "type": "array"
        }
       },
       "required": [
        "instance_types"
       ],
       "title": "InstanceTypesV1ListResponse",
       "type": "object"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with machine types for instances.",
    "isInternal": false,
    "name": "machine-types",
    "version": "v1"
   },
   {
    "children": [
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Create a snapshot of a Virtual Machine in the current tenant which is logged in. </br>\nA Snapshot is ready for restore when it's in available state.\n\n#### Notes\n- You can verify the state of snapshot using the snapshot get command,\n- To create a snapshot it's mandatory inform a valid and unique name.\n\n#### Rules\n- It's only possible to create a snapshot of a valid virtual machine.\n- It's not possible to create 2 snapshots with the same name.\n- You can inform ID or Name from a Virtual Machine if both informed the priority will be ID.",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "virtual_machine": {
         "anyOf": [
          {
           "example": {
            "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Virtual Machine",
         "type": "object"
        }
       },
       "required": [
        "name",
        "virtual_machine"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "CreateResponse",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Deletes an snapshot with the id provided in the current tenant\nwhich is logged in.\n\n#### Notes\n- You can use the Snapshots list command to retrieve all snapshots, so\n- you can get the id of the snapshot that you want to delete.",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "format": "uuid",
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Get an snapshot details for the current tenant which is logged in.\n\n#### Notes\n- You can use the snapshots list command to retrieve all snapshots,\nso you can get the id of the snapshot that you want to get details.\n\n- You can use the **expand** argument to get more details from the inner objects\nlike image or type.",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        },
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "created_at": "2022-06-10T18:33:12Z",
        "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
        "instance": {
         "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
         "image": {
          "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
         },
         "machine_type": {
          "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
         }
        },
        "name": "snapshot name",
        "size": 1000,
        "state": "available",
        "status": "completed",
        "updated_at": "2022-06-11T18:33:12Z"
       },
       "properties": {
        "created_at": {
         "example": "2022-01-01T00:00:10Z",
         "title": "Created At",
         "type": "string"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "instance": {
         "example": {
          "instance": {
           "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
           "image": {
            "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
           },
           "machine_type": {
            "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
           }
          }
         },
         "properties": {
          "id": {
           "title": "Id",
           "type": "string"
          },
          "image": {
           "anyOf": [
            {
             "additionalProperties": true,
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "ImageInstanceV1Response",
             "type": "object"
            },
            {
             "example": {
              "id": "847ceef4-ff96-4762-895d-5e94e410ddeb",
              "name": "ubuntu",
              "platform": "linux"
             },
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "platform": {
               "nullable": true,
               "title": "Platform",
               "type": "string"
              }
             },
             "required": [
              "id",
              "name"
             ],
             "title": "ImageExtendResponse",
             "type": "object"
            }
           ],
           "title": "Image",
           "type": "object"
          },
          "machine_type": {
           "anyOf": [
            {
             "additionalProperties": true,
             "properties": {
              "id": {
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "InstanceTypeForInstanceV1Response",
             "type": "object"
            },
            {
             "example": {
              "disk": 10,
              "id": "3a4dc05b-eb10-42ec-8c0c-848e06f7aded",
              "name": "abc.small",
              "ram": 2,
              "vcpus": 2
             },
             "properties": {
              "disk": {
               "title": "Disk",
               "type": "integer"
              },
              "id": {
               "title": "Id",
               "type": "string"
              },
              "name": {
               "title": "Name",
               "type": "string"
              },
              "ram": {
               "title": "Ram",
               "type": "integer"
              },
              "vcpus": {
               "title": "Vcpus",
               "type": "integer"
              }
             },
             "required": [
              "id",
              "name",
              "vcpus",
              "ram",
              "disk"
             ],
             "title": "InstanceTypesExtendResponse",
             "type": "object"
            }
           ],
           "title": "Machine Type",
           "type": "object"
          }
         },
         "required": [
          "id",
          "image",
          "machine_type"
         ],
         "title": "InstanceResponseSnapshotV1",
         "type": "object"
        },
        "name": {
         "nullable": true,
         "title": "Name",
         "type": "string"
        },
        "size": {
         "title": "Size",
         "type": "integer"
        },
        "state": {
         "title": "State",
         "type": "string"
        },
        "status": {
         "title": "Status",
         "type": "string"
        },
        "updated_at": {
         "example": "2022-01-01T00:00:10Z",
         "nullable": true,
         "title": "Updated At",
         "type": "string"
        }
       },
       "required": [
        "id",
        "status",
        "state",
        "created_at",
        "size",
        "instance"
       ],
       "title": "SnapshotResponseV1",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "List all snapshots in the current tenant which is logged in.\n\n#### Notes\n- You can use the **expand** argument to get more details from the inner objects\nlike image and machine types.",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "_limit": {
         "default": 50,
         "description": "limit the number of the results",
         "exclusiveMinimum": true,
         "minimum": 0,
         "title": " Limit",
         "type": "integer"
        },
        "_offset": {
         "default": 0,
         "description": "pagination for the results limited",
         "minimum": 0,
         "title": " Offset",
         "type": "integer"
        },
        "_sort": {
         "default": "created_at:asc",
         "description": "order of the results using informed fields",
         "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
         "title": " Sort",
         "type": "string"
        },
        "expand": {
         "default": [],
         "description": "You can get more detailed info about: ['image', 'machine-type'] ",
         "items": {
          "type": "string"
         },
         "title": "Expand",
         "type": "array"
        }
       },
       "type": "object"
      },
      "result": {
       "example": {
        "snapshots": [
         {
          "created_at": "2022-06-10T18:33:12Z",
          "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
          "instance": {
           "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
           "image": {
            "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
           },
           "machine_type": {
            "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
           }
          },
          "name": "snapshot name",
          "size": 1000,
          "state": "available",
          "status": "completed",
          "updated_at": "2022-06-11T18:33:12Z"
         }
        ]
       },
       "properties": {
        "snapshots": {
         "items": {
          "example": {
           "created_at": "2022-06-10T18:33:12Z",
           "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
           "instance": {
            "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
            "image": {
             "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
            },
            "machine_type": {
             "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
            }
           },
           "name": "snapshot name",
           "size": 1000,
           "state": "available",
           "status": "completed",
           "updated_at": "2022-06-11T18:33:12Z"
          },
          "properties": {
           "created_at": {
            "example": "2022-01-01T00:00:10Z",
            "title": "Created At",
            "type": "string"
           },
           "id": {
            "title": "Id",
            "type": "string"
           },
           "instance": {
            "example": {
             "instance": {
              "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a",
              "image": {
               "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
              },
              "machine_type": {
               "id": "4830bfbe-0362-4ebb-a8ba-f36be4b4bc6a"
              }
             }
            },
            "properties": {
             "id": {
              "title": "Id",
              "type": "string"
             },
             "image": {
              "anyOf": [
               {
                "additionalProperties": true,
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 }
                },
                "required": [
                 "id"
                ],
                "title": "ImageInstanceV1Response",
                "type": "object"
               },
               {
                "example": {
                 "id": "847ceef4-ff96-4762-895d-5e94e410ddeb",
                 "name": "ubuntu",
                 "platform": "linux"
                },
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 },
                 "platform": {
                  "nullable": true,
                  "title": "Platform",
                  "type": "string"
                 }
                },
                "required": [
                 "id",
                 "name"
                ],
                "title": "ImageExtendResponse",
                "type": "object"
               }
              ],
              "title": "Image",
              "type": "object"
             },
             "machine_type": {
              "anyOf": [
               {
                "additionalProperties": true,
                "properties": {
                 "id": {
                  "title": "Id",
                  "type": "string"
                 }
                },
                "required": [
                 "id"
                ],
                "title": "InstanceTypeForInstanceV1Response",
                "type": "object"
               },
               {
                "example": {
                 "disk": 10,
                 "id": "3a4dc05b-eb10-42ec-8c0c-848e06f7aded",
                 "name": "abc.small",
                 "ram": 2,
                 "vcpus": 2
                },
                "properties": {
                 "disk": {
                  "title": "Disk",
                  "type": "integer"
                 },
                 "id": {
                  "title": "Id",
                  "type": "string"
                 },
                 "name": {
                  "title": "Name",
                  "type": "string"
                 },
                 "ram": {
                  "title": "Ram",
                  "type": "integer"
                 },
                 "vcpus": {
                  "title": "Vcpus",
                  "type": "integer"
                 }
                },
                "required": [
                 "id",
                 "name",
                 "vcpus",
                 "ram",
                 "disk"
                ],
                "title": "InstanceTypesExtendResponse",
                "type": "object"
               }
              ],
              "title": "Machine Type",
              "type": "object"
             }
            },
            "required": [
             "id",
             "image",
             "machine_type"
            ],
            "title": "InstanceResponseSnapshotV1",
            "type": "object"
           },
           "name": {
            "nullable": true,
            "title": "Name",
            "type": "string"
           },
           "size": {
            "title": "Size",
            "type": "integer"
           },
           "state": {
            "title": "State",
            "type": "string"
           },
           "status": {
            "title": "Status",
            "type": "string"
           },
           "updated_at": {
            "example": "2022-01-01T00:00:10Z",
            "nullable": true,
            "title": "Updated At",
            "type": "string"
           }
          },
          "required": [
           "id",
           "status",
           "state",
           "created_at",
           "size",
           "instance"
          ],
          "title": "SnapshotResponseV1",
          "type": "object"
         },
         "title": "Snapshots",
         "type": "array"
        }
       },
       "required": [
        "snapshots"
       ],
       "title": "ListSnapshotResponseV1",
       "type": "object"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Renames a Snapshot with the id provided in the current tenant which is logged in.\n\n#### Notes\n- You can use the snapshots list command to retrieve all snapshots, so you can get the id of\nthe snapshot that you want to rename.",
      "isInternal": false,
      "name": "rename",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        }
       },
       "required": [
        "id",
        "name"
       ],
       "type": "object"
      },
      "result": {
       "nullable": true,
       "type": "null"
      },
      "version": "v1"
     },
     {
      "configs": {
       "additionalProperties": false,
       "properties": {
        "env": {
         "default": "prod",
         "description": "Environment to use",
         "enum": [
          "prod",
          "pre-prod"
         ],
         "type": "string"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Restore a snapshot of a Virtual Machine with the current tenant which is logged in. </br>\nA Snapshot is ready for restore when it's in available state.\n\n#### Notes\n- You can verify the state of snapshot using the snapshot list command.\n- Use machine-types list to see all machine types available.\n\n#### Rules\n- To restore a snapshot  you have to inform the new virtual machine information.\n- You can choose a machine-type that has a disk equal or larger\nthan the original virtual machine type.",
      "isInternal": false,
      "name": "restore",
      "parameters": {
       "additionalProperties": false,
       "properties": {
        "availability_zone": {
         "maxLength": 255,
         "minLength": 1,
         "nullable": true,
         "title": "Availability Zone",
         "type": "string"
        },
        "id": {
         "title": "Id",
         "type": "string"
        },
        "machine_type": {
         "anyOf": [
          {
           "example": {
            "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
           },
           "properties": {
            "id": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Id",
             "type": "string"
            }
           },
           "required": [
            "id"
           ],
           "title": "ID",
           "type": "object"
          },
          {
           "example": {
            "name": "some_resource_name"
           },
           "properties": {
            "name": {
             "maxLength": 255,
             "minLength": 1,
             "title": "Name",
             "type": "string"
            }
           },
           "required": [
            "name"
           ],
           "title": "Name",
           "type": "object"
          }
         ],
         "title": "Machine Type",
         "type": "object"
        },
        "name": {
         "maxLength": 255,
         "minLength": 1,
         "title": "Name",
         "type": "string"
        },
        "network": {
         "default": {
          "associate_public_ip": true,
          "vpc": {
           "name": "default"
          }
         },
         "example": {
          "associate_public_ip": true,
          "vpc": {
           "id": "2ae0b896-855c-456c-b4a5-c8f4e6d2f4f6"
          }
         },
         "properties": {
          "associate_public_ip": {
           "default": true,
           "title": "Associate Public Ip",
           "type": "boolean"
          },
          "vpc": {
           "anyOf": [
            {
             "example": {
              "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
             },
             "properties": {
              "id": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Id",
               "type": "string"
              }
             },
             "required": [
              "id"
             ],
             "title": "ID",
             "type": "object"
            },
            {
             "example": {
              "name": "some_resource_name"
             },
             "properties": {
              "name": {
               "maxLength": 255,
               "minLength": 1,
               "title": "Name",
               "type": "string"
              }
             },
             "required": [
              "name"
             ],
             "title": "Name",
             "type": "object"
            }
           ],
           "default": {
            "name": "default"
           },
           "title": "Vpc",
           "type": "object"
          }
         },
         "type": "object"
        },
        "ssh_key_name": {
         "title": "Ssh Key Name",
         "type": "string"
        },
        "user_data": {
         "maxLength": 65000,
         "minLength": 1,
         "nullable": true,
         "title": "User Data",
         "type": "string"
        }
       },
       "required": [
        "id",
        "machine_type",
        "name",
        "ssh_key_name"
       ],
       "type": "object"
      },
      "result": {
       "example": {
        "id": "9ec75090-2872-4f51-8111-53d05d96d2c6"
       },
       "properties": {
        "id": {
         "title": "Id",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "title": "CreateResponse",
       "type": "object"
      },
      "version": "v1"
     }
    ],
    "description": "Operations with snapshots for instances.",
    "isInternal": false,
    "name": "snapshots",
    "version": "v1"
   }
  ],
  "description": "Virtual Machine Api Product",
  "isInternal": false,
  "name": "virtual-machine",
  "version": "v1"
 }
]