[
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Retrieve the access token used in the APIs",
    "isInternal": false,
    "name": "access_token",
    "parameters": {
     "properties": {
      "Validate": {
       "description": "Validate the token, refreshing if needed",
       "type": "boolean"
      }
     },
     "type": "object"
    },
    "result": {
     "properties": {
      "access_token": {
       "type": "string"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "Create new client (Oauth Application)",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "properties": {
        "access-token-expiration": {
         "description": "Access token expiration (in seconds)",
         "example": 7200,
         "type": "integer"
        },
        "always-require-login": {
         "description": "Must ignore active Magalu ID session and always require login",
         "type": "boolean"
        },
        "audiences": {
         "description": "Client audiences (separated by space)",
         "example": "public",
         "type": "string"
        },
        "backchannel-logout-session-enabled": {
         "description": "Client requires backchannel logout session",
         "type": "boolean"
        },
        "backchannel-logout-uri": {
         "description": "Backchannel logout URI",
         "type": "string"
        },
        "client-privacy-term-url": {
         "description": "URL to privacy term",
         "type": "string"
        },
        "description": {
         "description": "Description of new client",
         "example": "Client description",
         "type": "string"
        },
        "icon": {
         "description": "URL for client icon",
         "type": "string"
        },
        "name": {
         "description": "Name of new client",
         "example": "Client Name",
         "type": "string"
        },
        "oidc-audiences": {
         "description": "Audiences for ID token",
         "type": "string"
        },
        "reason": {
         "description": "Note to inform the reason for creating the client. Will help with the application approval process",
         "type": "string"
        },
        "redirect-uris": {
         "description": "Redirect URIs (separated by space)",
         "type": "string"
        },
        "refresh-token-custom-expires-enabled": {
         "description": "Use custom value for refresh token expiration",
         "type": "boolean"
        },
        "refresh-token-expiration": {
         "description": "Custom refresh token expiration value (in seconds)",
         "example": 15778476,
         "type": "integer"
        },
        "terms-of-use": {
         "description": "URL to terms of use",
         "type": "string"
        }
       },
       "required": [
        "name",
        "description",
        "redirect-uris",
        "client-privacy-term-url",
        "terms-of-use",
        "reason"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "client_id": {
         "type": "string"
        },
        "client_secret": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List user clients",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "access_token_expiration": {
          "type": "integer"
         },
         "always_require_login": {
          "type": "boolean"
         },
         "audiences": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "backchannel_logout_session_enabled": {
          "type": "boolean"
         },
         "backchannel_logout_uri": {
          "type": "string"
         },
         "client_approval_status": {
          "type": "string"
         },
         "client_id": {
          "type": "string"
         },
         "client_privacy_term_url": {
          "type": "string"
         },
         "description": {
          "type": "string"
         },
         "icon": {
          "type": "string"
         },
         "name": {
          "type": "string"
         },
         "oidc_audience": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "redirect_uris": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "refresh_token_custom_expires_enabled": {
          "type": "boolean"
         },
         "refresh_token_expiration": {
          "type": "integer"
         },
         "scopes": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "scopes_default": {
          "items": {
           "type": "string"
          },
          "type": "array"
         },
         "term_of_use": {
          "type": "string"
         },
         "uuid": {
          "type": "string"
         }
        },
        "required": [
         "always_require_login",
         "backchannel_logout_session_enabled",
         "refresh_token_custom_expires_enabled"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Update a client (Oauth Application)",
      "isInternal": false,
      "name": "update",
      "parameters": {
       "properties": {
        "access-token-expiration": {
         "description": "Access token expiration (in seconds)",
         "example": 7200,
         "type": "integer"
        },
        "always-require-login": {
         "description": "Must ignore active Magalu ID session and always require login",
         "type": "boolean"
        },
        "audiences": {
         "description": "Client audiences (separated by space)",
         "example": "public",
         "type": "string"
        },
        "backchannel-logout-session-enabled": {
         "description": "Client requires backchannel logout session",
         "type": "boolean"
        },
        "backchannel-logout-uri": {
         "description": "Backchannel logout URI",
         "type": "string"
        },
        "client-privacy-term-url": {
         "description": "URL to privacy term",
         "type": "string"
        },
        "description": {
         "description": "Description of new client",
         "example": "Client description",
         "type": "string"
        },
        "icon": {
         "description": "URL for client icon",
         "type": "string"
        },
        "id": {
         "description": "UUID of client",
         "type": "string"
        },
        "name": {
         "description": "Name of new client",
         "example": "Client Name",
         "type": "string"
        },
        "oidc-audiences": {
         "description": "Audiences for ID token",
         "type": "string"
        },
        "reason": {
         "description": "Note to inform the reason for creating the client. Will help with the application approval process",
         "type": "string"
        },
        "redirect-uris": {
         "description": "Redirect URIs (separated by space)",
         "type": "string"
        },
        "refresh-token-custom-expires-enabled": {
         "description": "Use custom value for refresh token expiration",
         "type": "boolean"
        },
        "refresh-token-expiration": {
         "description": "Custom refresh token expiration value (in seconds)",
         "example": 15778476,
         "type": "integer"
        },
        "terms-of-use": {
         "description": "URL to terms of use",
         "type": "string"
        }
       },
       "required": [
        "id"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "client_id": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "",
    "isInternal": false,
    "name": "clients",
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Log in to your Magalu Cloud account. When you login with this command,\nthe current Tenant will always be set to the default one. To see more details\nabout a successful login, use the '--show' flag when logging in",
    "isInternal": false,
    "name": "login",
    "parameters": {
     "properties": {
      "headless": {
       "default": false,
       "description": "Generate URL for the login at local environment",
       "type": "boolean"
      },
      "qrcode": {
       "default": false,
       "description": "Generate a qrcode for the login URL",
       "type": "boolean"
      },
      "scopes": {
       "description": "All desired scopes for the resulting access token",
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "show": {
       "description": "Show the access token after the login completes",
       "type": "boolean"
      }
     },
     "type": "object"
    },
    "result": {
     "properties": {
      "access_token": {
       "type": "string"
      },
      "selected_tenant": {
       "properties": {
        "email": {
         "type": "string"
        },
        "is_delegated": {
         "type": "boolean"
        },
        "is_managed": {
         "type": "boolean"
        },
        "legal_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "legal_name",
        "email",
        "is_managed",
        "is_delegated"
       ],
       "type": "object"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "The current Tenant is used for all Magalu HTTP requests",
      "isInternal": false,
      "name": "current",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "email": {
         "type": "string"
        },
        "is_delegated": {
         "type": "boolean"
        },
        "is_managed": {
         "type": "boolean"
        },
        "legal_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "legal_name",
        "email",
        "is_managed",
        "is_delegated"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List all available tenants for current login",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "email": {
          "type": "string"
         },
         "is_delegated": {
          "type": "boolean"
         },
         "is_managed": {
          "type": "boolean"
         },
         "legal_name": {
          "type": "string"
         },
         "uuid": {
          "type": "string"
         }
        },
        "required": [
         "uuid",
         "legal_name",
         "email",
         "is_managed",
         "is_delegated"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Set the active Tenant to be used for all subsequent requests",
      "isInternal": false,
      "name": "set",
      "parameters": {
       "properties": {
        "uuid": {
         "description": "The UUID of the desired Tenant. To list all possible IDs, run auth tenant list",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "access_token": {
         "type": "string"
        },
        "created_at": {
         "type": "object"
        },
        "refresh_token": {
         "type": "string"
        },
        "scope": {
         "items": {
          "type": "string"
         },
         "type": "array"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "created_at",
        "access_token",
        "refresh_token",
        "scope"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "Tenants work like sub-accounts. You may have more than one Tenant under your\nMagalu Cloud account and they each store their data separately, but are billed\nunder the same account",
    "isInternal": false,
    "name": "tenant",
    "version": ""
   }
  ],
  "description": "The authentication credentials set here will be used as a basis for a variety\nof HTTP requests using the MgcSDK. Authentication is done via Magalu Cloud account\n(Object Storage requires special keys, refer to it for more info)",
  "isInternal": false,
  "name": "auth",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {},
      "description": "Attach a volume to a virtual machine instance",
      "isInternal": false,
      "name": "create",
      "parameters": {},
      "result": {},
      "version": ""
     },
     {
      "configs": {},
      "description": "Detach a volume from a virtual machine instance",
      "isInternal": false,
      "name": "delete",
      "parameters": {},
      "result": {},
      "version": ""
     },
     {
      "configs": {},
      "description": "Check if a volume is attached to a virtual machine instance",
      "isInternal": false,
      "name": "get",
      "parameters": {},
      "result": {},
      "version": ""
     }
    ],
    "description": "Block Storage Volume Attachment",
    "isInternal": true,
    "name": "volume-attachment",
    "version": ""
   }
  ],
  "description": "Operations for Block Storage API",
  "isInternal": false,
  "name": "block-storage",
  "version": "1.52.0"
 },
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Delete/unset a Config value that had been previously set. This does not\naffect the environment variables",
    "isInternal": false,
    "name": "delete",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the config to be deleted",
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Get a specific Config value that has been previously set. If there's an env variable\nmatching the key (in uppercase and with the 'MGC_' prefix), it'll be retreived.\nOtherwise, the value will be searched for in the YAML file",
    "isInternal": false,
    "name": "get",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the desired config",
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Get the JSON Schema for the specified Config. The Schema has\ninformation about the accepted values for the Config, constraints, type, description, etc.",
    "isInternal": false,
    "name": "get-schema",
    "parameters": {
     "properties": {
      "key": {
       "type": "string"
      }
     },
     "required": [
      "key"
     ],
     "type": "object"
    },
    "result": {
     "nullable": true,
     "properties": {
      "additionalProperties": {
       "properties": {
        "has": {
         "nullable": true,
         "type": "boolean"
        },
        "schema": {
         "$ref": "#/$defs/SchemaRef"
        }
       },
       "type": "object"
      },
      "allOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "allowEmptyValue": {
       "type": "boolean"
      },
      "anyOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "default": {
       "anyOf": [
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "deprecated": {
       "type": "boolean"
      },
      "description": {
       "type": "string"
      },
      "discriminator": {
       "properties": {
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "mapping": {
         "additionalProperties": {
          "type": "string"
         },
         "type": "object"
        },
        "propertyName": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "enum": {
       "items": {
        "anyOf": [
         {
          "type": "boolean"
         },
         {
          "type": "string"
         },
         {
          "type": "number"
         },
         {
          "type": "integer"
         },
         {
          "items": {},
          "type": "array"
         },
         {
          "additionalProperties": true,
          "type": "object"
         }
        ],
        "nullable": true
       },
       "type": "array"
      },
      "example": {
       "anyOf": [
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "exclusiveMax": {
       "type": "boolean"
      },
      "exclusiveMin": {
       "type": "boolean"
      },
      "extensions": {
       "additionalProperties": true,
       "type": "object"
      },
      "externalDocs": {
       "properties": {
        "description": {
         "type": "string"
        },
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "url": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "format": {
       "type": "string"
      },
      "items": {
       "$ref": "#/$defs/SchemaRef"
      },
      "max": {
       "type": "number"
      },
      "maxItems": {
       "format": "int64",
       "type": "integer"
      },
      "maxLength": {
       "format": "int64",
       "type": "integer"
      },
      "maxProps": {
       "format": "int64",
       "type": "integer"
      },
      "min": {
       "type": "number"
      },
      "minItems": {
       "format": "int64",
       "type": "integer"
      },
      "minLength": {
       "format": "int64",
       "type": "integer"
      },
      "minProps": {
       "format": "int64",
       "type": "integer"
      },
      "multipleOf": {
       "type": "number"
      },
      "not": {
       "$ref": "#/$defs/SchemaRef"
      },
      "nullable": {
       "type": "boolean"
      },
      "oneOf": {
       "$ref": "#/$defs/SchemaRefs"
      },
      "pattern": {
       "type": "string"
      },
      "properties": {
       "$ref": "#/$defs/Schemas"
      },
      "readOnly": {
       "type": "boolean"
      },
      "required": {
       "items": {
        "type": "string"
       },
       "type": "array"
      },
      "title": {
       "type": "string"
      },
      "type": {
       "type": "string"
      },
      "uniqueItems": {
       "type": "boolean"
      },
      "writeOnly": {
       "type": "boolean"
      },
      "xml": {
       "properties": {
        "attribute": {
         "type": "boolean"
        },
        "extensions": {
         "additionalProperties": true,
         "type": "object"
        },
        "name": {
         "type": "string"
        },
        "namespace": {
         "type": "string"
        },
        "prefix": {
         "type": "string"
        },
        "wrapped": {
         "type": "boolean"
        }
       },
       "type": "object"
      }
     },
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "List all available Configs",
    "isInternal": false,
    "name": "list",
    "parameters": {
     "type": "object"
    },
    "result": {
     "additionalProperties": true,
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Set a specific Config value in the configuration file",
    "isInternal": false,
    "name": "set",
    "parameters": {
     "properties": {
      "key": {
       "description": "Name of the desired config",
       "type": "string"
      },
      "value": {
       "description": "New flag value"
      }
     },
     "required": [
      "key",
      "value"
     ],
     "type": "object"
    },
    "result": {
     "anyOf": [
      {
       "nullable": true,
       "type": "null"
      },
      {
       "type": "boolean"
      },
      {
       "type": "string"
      },
      {
       "type": "number"
      },
      {
       "type": "integer"
      },
      {
       "items": {},
       "type": "array"
      },
      {
       "additionalProperties": true,
       "type": "object"
      }
     ],
     "nullable": true
    },
    "version": ""
   }
  ],
  "description": "Configuration values are available to be set so that they persist between\ndifferent executions of the MgcSDK. They reside in a YAML file when set.\nConfig values may also be loaded via Environment Variables. Any Config available\n(see 'list') may be exported as an env variable in uppercase with the 'MGC_' prefix",
  "isInternal": false,
  "name": "config",
  "version": ""
 },
 {
  "children": [
   {
    "configs": {
     "properties": {
      "region": {
       "default": "br-ne-1",
       "description": "Region to reach the service",
       "enum": [
        "br-ne-1",
        "br-se-1",
        "br-mgl-1"
       ],
       "type": "string"
      },
      "serverUrl": {
       "description": "Manually specify the server to use",
       "format": "uri",
       "type": "string"
      }
     },
     "type": "object"
    },
    "description": "Execute generic http request",
    "isInternal": false,
    "name": "do",
    "parameters": {
     "properties": {
      "body": {
       "type": "string"
      },
      "headers": {
       "additionalProperties": true,
       "type": "object"
      },
      "method": {
       "enum": [
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "OPTIONS",
        "HEAD",
        "PATCH",
        "TRACE"
       ],
       "type": "string"
      },
      "security": {
       "items": {
        "additionalProperties": true,
        "type": "object"
       },
       "type": "array"
      },
      "url": {
       "description": "Golang template with the URL",
       "type": "string"
      }
     },
     "required": [
      "url",
      "method"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "body": {
       "type": "string"
      },
      "code": {
       "type": "integer"
      },
      "headers": {
       "additionalProperties": true,
       "type": "object"
      },
      "status": {
       "type": "string"
      }
     },
     "required": [
      "code",
      "status",
      "headers"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "children": [
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP DELETE",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP GET",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP HEAD",
      "isInternal": false,
      "name": "head",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP OPTIONS",
      "isInternal": false,
      "name": "options",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP PATCH",
      "isInternal": false,
      "name": "patch",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP POST",
      "isInternal": false,
      "name": "post",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP PUT",
      "isInternal": false,
      "name": "put",
      "parameters": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "region": {
         "default": "br-ne-1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne-1",
          "br-se-1",
          "br-mgl-1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        }
       },
       "type": "object"
      },
      "description": "Call using HTTP TRACE",
      "isInternal": false,
      "name": "trace",
      "parameters": {
       "properties": {
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "security": {
         "items": {
          "additionalProperties": true,
          "type": "object"
         },
         "type": "array"
        },
        "url": {
         "description": "Golang template with the URL",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "body": {
         "anyOf": [
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "code": {
         "type": "integer"
        },
        "headers": {
         "additionalProperties": true,
         "type": "object"
        },
        "status": {
         "type": "string"
        }
       },
       "required": [
        "code",
        "status",
        "headers"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "JSON HTTP access",
    "isInternal": false,
    "name": "json",
    "version": ""
   }
  ],
  "description": "HTTP access",
  "isInternal": true,
  "name": "http",
  "version": ""
 },
 {
  "children": [
   {
    "children": [
     {
      "children": [
       {
        "configs": {},
        "description": "Attach a Security Group to a Port",
        "isInternal": false,
        "name": "create",
        "parameters": {},
        "result": {},
        "version": ""
       },
       {
        "configs": {},
        "description": "Detach a Security Group from a Port",
        "isInternal": false,
        "name": "delete",
        "parameters": {},
        "result": {},
        "version": ""
       },
       {
        "configs": {},
        "description": "Check if a Public IP is attached to a Port",
        "isInternal": false,
        "name": "get",
        "parameters": {},
        "result": {},
        "version": ""
       }
      ],
      "description": "Manage the attachment between a Security Group and a Port",
      "isInternal": true,
      "name": "security-group-attachment",
      "version": ""
     }
    ],
    "description": "VPC Port",
    "isInternal": false,
    "name": "ports",
    "version": ""
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {},
        "description": "Attach a Public IP to a Port",
        "isInternal": false,
        "name": "create",
        "parameters": {},
        "result": {},
        "version": ""
       },
       {
        "configs": {},
        "description": "Detach a Public IP from a Port",
        "isInternal": false,
        "name": "delete",
        "parameters": {},
        "result": {},
        "version": ""
       },
       {
        "configs": {},
        "description": "Check if a Public IP is attached to a Port",
        "isInternal": false,
        "name": "get",
        "parameters": {},
        "result": {},
        "version": ""
       }
      ],
      "description": "Manage the attachment between a Public IP and a Port",
      "isInternal": true,
      "name": "port-attachment",
      "version": ""
     }
    ],
    "description": "VPC Public IPs",
    "isInternal": false,
    "name": "public_ips",
    "version": ""
   },
   {
    "children": [],
    "description": "VPC Rules",
    "isInternal": false,
    "name": "rules",
    "version": ""
   }
  ],
  "description": "Operations for Network API",
  "isInternal": false,
  "name": "network",
  "version": "1.99.5"
 },
 {
  "children": [
   {
    "children": [
     {
      "configs": {
       "type": "object"
      },
      "description": "Change current Object Storage credential",
      "isInternal": true,
      "name": "add",
      "parameters": {
       "properties": {
        "keyId": {
         "description": "ID of api key to use",
         "type": "string"
        },
        "keySecret": {
         "description": "Secret of api key to use",
         "type": "string"
        }
       },
       "required": [
        "keyId",
        "keySecret"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Create new credentials used for Object Storage requests",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "properties": {
        "description": {
         "description": "Description of new api key",
         "type": "string"
        },
        "expiration": {
         "description": "Date to expire new api",
         "example": "2024-11-07 (YYYY-MM-DD)",
         "type": "string"
        },
        "name": {
         "description": "Name of new api key",
         "type": "string"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "used": {
         "type": "boolean"
        },
        "uuid": {
         "type": "string"
        }
       },
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Get the current Object Storage credentials",
      "isInternal": false,
      "name": "current",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Get details about a specific key",
      "isInternal": false,
      "name": "get",
      "parameters": {
       "properties": {
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "List valid Object Storage credentials",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "description": {
          "type": "string"
         },
         "end_validity": {
          "type": "string"
         },
         "key_pair_id": {
          "type": "string"
         },
         "key_pair_secret": {
          "type": "string"
         },
         "name": {
          "type": "string"
         },
         "revoked_at": {
          "type": "string"
         },
         "start_validity": {
          "type": "string"
         },
         "tenant_name": {
          "type": "string"
         },
         "uuid": {
          "type": "string"
         }
        },
        "required": [
         "uuid",
         "name",
         "description",
         "key_pair_id",
         "key_pair_secret",
         "start_validity"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Revoke credentials used in Object Storage requests",
      "isInternal": false,
      "name": "revoke",
      "parameters": {
       "properties": {
        "uuid": {
         "description": "UUID of api key to revoke",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "uuid": {
         "description": "UUID of api key to revoke",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "type": "object"
      },
      "description": "Change current Object Storage credential to selected",
      "isInternal": false,
      "name": "set",
      "parameters": {
       "properties": {
        "uuid": {
         "description": "UUID of api key to select",
         "type": "string"
        }
       },
       "required": [
        "uuid"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "description": {
         "type": "string"
        },
        "end_validity": {
         "type": "string"
        },
        "key_pair_id": {
         "type": "string"
        },
        "key_pair_secret": {
         "type": "string"
        },
        "name": {
         "type": "string"
        },
        "revoked_at": {
         "type": "string"
        },
        "start_validity": {
         "type": "string"
        },
        "tenant_name": {
         "type": "string"
        },
        "uuid": {
         "type": "string"
        }
       },
       "required": [
        "uuid",
        "name",
        "description",
        "key_pair_id",
        "key_pair_secret",
        "start_validity"
       ],
       "type": "object"
      },
      "version": ""
     }
    ],
    "description": "",
    "isInternal": false,
    "name": "api-key",
    "version": ""
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Get the ACL for the specified bucket",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "properties": {
          "dst": {
           "description": "Specifies the bucket whose ACL is being requested",
           "type": "string"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "AccessControlList": {
           "properties": {
            "Grant": {
             "items": {
              "properties": {
               "Grantee": {
                "properties": {
                 "DisplayName": {
                  "type": "string"
                 },
                 "ID": {
                  "type": "string"
                 },
                 "URI": {
                  "type": "string"
                 }
                },
                "required": [
                 "DisplayName",
                 "ID",
                 "URI"
                ],
                "type": "object"
               },
               "Permission": {
                "type": "string"
               }
              },
              "required": [
               "Grantee",
               "Permission"
              ],
              "type": "object"
             },
             "type": "array"
            }
           },
           "required": [
            "Grant"
           ],
           "type": "object"
          },
          "Owner": {
           "properties": {
            "DisplayName": {
             "type": "string"
            },
            "ID": {
             "type": "string"
            }
           },
           "required": [
            "DisplayName",
            "ID"
           ],
           "type": "object"
          }
         },
         "required": [
          "Owner",
          "AccessControlList"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "set permission information for the specified bucket",
        "isInternal": false,
        "name": "set",
        "parameters": {
         "properties": {
          "authenticated_read": {
           "description": "Owner gets FULL_CONTROL. Authenticated users have READ rights",
           "type": "boolean"
          },
          "aws_exec_read": {
           "type": "boolean"
          },
          "dst": {
           "description": "Name of the bucket to set permissions for",
           "example": "my-bucket",
           "type": "string"
          },
          "grant_full_control": {
           "description": "Grantees get FULL_CONTROL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read": {
           "description": "Allows grantees to list the objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read_acp": {
           "description": "Allows grantees to read the bucket ACL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write": {
           "description": "Allows grantees to create objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write_acp": {
           "description": "Allows grantees to write the ACL for the applicable bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "private": {
           "description": "Owner gets FULL_CONTROL. Delegated users have access. No one else has access rights",
           "type": "boolean"
          },
          "public_read": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ rights",
           "type": "boolean"
          },
          "public_read_write": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ and WRITE rights",
           "type": "boolean"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       }
      ],
      "description": "ACL-related commands",
      "isInternal": false,
      "name": "acl",
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Buckets are \"containers\" that are able to store various Objects inside",
      "isInternal": false,
      "name": "create",
      "parameters": {
       "properties": {
        "authenticated_read": {
         "description": "Owner gets FULL_CONTROL. Authenticated users have READ rights",
         "type": "boolean"
        },
        "aws_exec_read": {
         "type": "boolean"
        },
        "enable_versioning": {
         "default": true,
         "description": "Enable versioning for this bucket",
         "type": "boolean"
        },
        "grant_full_control": {
         "description": "Grantees get FULL_CONTROL",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_read": {
         "description": "Allows grantees to list the objects in the bucket",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_read_acp": {
         "description": "Allows grantees to read the bucket ACL",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_write": {
         "description": "Allows grantees to create objects in the bucket",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "grant_write_acp": {
         "description": "Allows grantees to write the ACL for the applicable bucket",
         "items": {
          "properties": {
           "id": {
            "description": "Either a Tenant ID or a User Project ID",
            "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
            "type": "string"
           }
          },
          "required": [
           "id"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "name": {
         "description": "Name of the bucket to be created",
         "type": "string"
        },
        "private": {
         "description": "Owner gets FULL_CONTROL. Delegated users have access. No one else has access rights",
         "type": "boolean"
        },
        "public_read": {
         "description": "Owner gets FULL_CONTROL. Everyone else has READ rights",
         "type": "boolean"
        },
        "public_read_write": {
         "description": "Owner gets FULL_CONTROL. Everyone else has READ and WRITE rights",
         "type": "boolean"
        }
       },
       "required": [
        "name"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete an existing Bucket",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "bucket": {
         "description": "Name of the bucket to be deleted",
         "type": "string"
        },
        "recursive": {
         "default": false,
         "description": "Delete bucket including objects inside",
         "type": "boolean"
        }
       },
       "required": [
        "bucket",
        "recursive"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "List all existing Buckets",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "type": "object"
      },
      "result": {
       "properties": {
        "Buckets": {
         "items": {
          "properties": {
           "CreationDate": {
            "type": "string"
           },
           "Name": {
            "type": "string"
           }
          },
          "required": [
           "CreationDate",
           "Name"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "Owner": {
         "properties": {
          "DisplayName": {
           "type": "string"
          },
          "ID": {
           "type": "string"
          }
         },
         "required": [
          "DisplayName",
          "ID"
         ],
         "type": "object"
        }
       },
       "required": [
        "Buckets",
        "Owner"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Get bucket public url",
      "isInternal": false,
      "name": "public-url",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the bucket to generate the public url",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "url": {
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "children": [
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Enable versioning for a Bucket",
        "isInternal": false,
        "name": "enable",
        "parameters": {
         "properties": {
          "bucket": {
           "description": "Bucket name to enable versioning",
           "type": "string"
          }
         },
         "required": [
          "bucket"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Get versioning info for a Bucket",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "properties": {
          "bucket": {
           "description": "Bucket name to get versioning info from",
           "type": "string"
          }
         },
         "required": [
          "bucket"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "MfaDelete": {
           "type": "string"
          },
          "Status": {
           "type": "string"
          }
         },
         "required": [
          "Status",
          "MfaDelete"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Suspend versioning for a Bucket",
        "isInternal": false,
        "name": "suspend",
        "parameters": {
         "properties": {
          "bucket": {
           "description": "Bucket name to suspend versioning",
           "type": "string"
          }
         },
         "required": [
          "bucket"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       }
      ],
      "description": "Manage bucket versioning",
      "isInternal": false,
      "name": "versioning",
      "version": ""
     }
    ],
    "description": "Bucket operations for Object Storage API",
    "isInternal": false,
    "name": "buckets",
    "version": ""
   },
   {
    "children": [
     {
      "children": [
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Get ACL information for the specified object",
        "isInternal": false,
        "name": "get",
        "parameters": {
         "properties": {
          "dst": {
           "description": "The full object URL to get the ACL information from",
           "format": "uri",
           "type": "string"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "properties": {
          "AccessControlList": {
           "properties": {
            "Grant": {
             "items": {
              "properties": {
               "Grantee": {
                "properties": {
                 "DisplayName": {
                  "type": "string"
                 },
                 "ID": {
                  "type": "string"
                 },
                 "URI": {
                  "type": "string"
                 }
                },
                "required": [
                 "DisplayName",
                 "ID",
                 "URI"
                ],
                "type": "object"
               },
               "Permission": {
                "type": "string"
               }
              },
              "required": [
               "Grantee",
               "Permission"
              ],
              "type": "object"
             },
             "type": "array"
            }
           },
           "required": [
            "Grant"
           ],
           "type": "object"
          },
          "Owner": {
           "properties": {
            "DisplayName": {
             "type": "string"
            },
            "ID": {
             "type": "string"
            }
           },
           "required": [
            "DisplayName",
            "ID"
           ],
           "type": "object"
          }
         },
         "required": [
          "Owner",
          "AccessControlList"
         ],
         "type": "object"
        },
        "version": ""
       },
       {
        "configs": {
         "properties": {
          "chunkSize": {
           "default": 8,
           "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
           "maximum": 5120,
           "minimum": 8,
           "type": "integer"
          },
          "region": {
           "default": "br-ne1",
           "description": "Region to reach the service",
           "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
           ],
           "type": "string"
          },
          "serverUrl": {
           "description": "Manually specify the server to use",
           "format": "uri",
           "type": "string"
          },
          "workers": {
           "default": 5,
           "description": "Number of routines that spawn to do parallel operations within object_storage",
           "minimum": 1,
           "type": "integer"
          }
         },
         "type": "object"
        },
        "description": "Set ACL information for the specified object",
        "isInternal": false,
        "name": "set",
        "parameters": {
         "properties": {
          "authenticated_read": {
           "description": "Owner gets FULL_CONTROL. Authenticated users have READ rights",
           "type": "boolean"
          },
          "aws_exec_read": {
           "type": "boolean"
          },
          "bucket_owner_full_control": {
           "type": "boolean"
          },
          "bucket_owner_read": {
           "type": "boolean"
          },
          "dst": {
           "description": "The full object URL to set the ACL information",
           "format": "uri",
           "type": "string"
          },
          "grant_full_control": {
           "description": "Grantees get FULL_CONTROL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read": {
           "description": "Allows grantees to list the objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_read_acp": {
           "description": "Allows grantees to read the bucket ACL",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write": {
           "description": "Allows grantees to create objects in the bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "grant_write_acp": {
           "description": "Allows grantees to write the ACL for the applicable bucket",
           "items": {
            "properties": {
             "id": {
              "description": "Either a Tenant ID or a User Project ID",
              "example": "a4900b57-7dbb-4906-b7e8-efed938e325c",
              "type": "string"
             }
            },
            "required": [
             "id"
            ],
            "type": "object"
           },
           "type": "array"
          },
          "obj_version": {
           "description": "Version of the object to set the ACL",
           "type": "string"
          },
          "private": {
           "description": "Owner gets FULL_CONTROL. Delegated users have access. No one else has access rights",
           "type": "boolean"
          },
          "public_read": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ rights",
           "type": "boolean"
          },
          "public_read_write": {
           "description": "Owner gets FULL_CONTROL. Everyone else has READ and WRITE rights",
           "type": "boolean"
          }
         },
         "required": [
          "dst"
         ],
         "type": "object"
        },
        "result": {
         "anyOf": [
          {
           "nullable": true,
           "type": "null"
          },
          {
           "type": "boolean"
          },
          {
           "type": "string"
          },
          {
           "type": "number"
          },
          {
           "type": "integer"
          },
          {
           "items": {},
           "type": "array"
          },
          {
           "additionalProperties": true,
           "type": "object"
          }
         ],
         "nullable": true
        },
        "version": ""
       }
      ],
      "description": "ACL related operations",
      "isInternal": false,
      "name": "acl",
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Copy an object from a bucket to another bucket",
      "isInternal": false,
      "name": "copy",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket with desired filename",
         "example": "bucket2/dir/file.txt",
         "format": "uri",
         "type": "string"
        },
        "obj_version": {
         "description": "Version of the object to be copied",
         "type": "string"
        },
        "src": {
         "description": "Path of the object in a bucket to be copied",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Copy all objects from a bucket to another bucket",
      "isInternal": false,
      "name": "copy-all",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "bucket2/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects in a bucket to be copied",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "bucket2/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects in a bucket to be copied",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete an object from a bucket",
      "isInternal": false,
      "name": "delete",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to be deleted",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        },
        "objVersion": {
         "description": "Version of the object to be deleted",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Delete all objects from a bucket",
      "isInternal": false,
      "name": "delete-all",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to delete",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "bucket": {
         "description": "Name of the bucket to delete objects from",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "bucket"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Download an object from a bucket. If no destination is specified, the default is the current working directory",
      "isInternal": false,
      "name": "download",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path and file name to be saved (relative or absolute).If not specified it defaults to the current working directory",
         "example": "file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "obj_version": {
         "description": "Version of the object to be downloaded",
         "type": "string"
        },
        "src": {
         "description": "Path of the object to be downloaded",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Download all objects from a bucket",
      "isInternal": false,
      "name": "download-all",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path to save files",
         "example": "path/to/folder",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "src": {
         "description": "Path of objects to be downloaded",
         "example": "mybucket",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dst": {
         "description": "Path and file name to be saved (relative or absolute).If not specified it defaults to the current working directory",
         "example": "file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        },
        "obj_version": {
         "description": "Version of the object to be downloaded",
         "type": "string"
        },
        "src": {
         "description": "Path of the object to be downloaded",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Get object metadata",
      "isInternal": false,
      "name": "head",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to be get metadata from",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        },
        "objVersion": {
         "description": "Version of the object to be get metadata from",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "AcceptRanges": {
         "type": "string"
        },
        "ContentLength": {
         "type": "integer"
        },
        "ContentType": {
         "type": "string"
        },
        "ETag": {
         "type": "string"
        },
        "LastModified": {
         "type": "string"
        }
       },
       "required": [
        "AcceptRanges",
        "LastModified",
        "ContentLength",
        "ETag",
        "ContentType"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "List all objects from a bucket",
      "isInternal": false,
      "name": "list",
      "parameters": {
       "properties": {
        "continuation-token": {
         "description": "Token of result page to continue from",
         "type": "string"
        },
        "dst": {
         "description": "Path of the bucket to list objects from",
         "example": "bucket1",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "max-items": {
         "default": 1000,
         "description": "Limit of items to be listed",
         "example": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "recursive": {
         "default": false,
         "description": "List folders and subfolders",
         "type": "boolean"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "CommonPrefixes": {
         "items": {
          "properties": {
           "Path": {
            "type": "string"
           }
          },
          "required": [
           "Path"
          ],
          "type": "object"
         },
         "type": "array"
        },
        "Contents": {
         "items": {
          "properties": {
           "ContentSize": {
            "type": "integer"
           },
           "Key": {
            "type": "string"
           },
           "LastModified": {
            "type": "string"
           }
          },
          "required": [
           "Key",
           "LastModified",
           "ContentSize"
          ],
          "type": "object"
         },
         "type": "array"
        }
       },
       "required": [
        "Contents",
        "CommonPrefixes"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Moves one object from a source to a destination.\nIt can be either local or remote but not both local (Local -> Remote, Remote -> Local, Remote -> Remote)",
      "isInternal": false,
      "name": "move",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Destination to put the file into",
         "example": "s3://my-bucket/test.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "A file to move to the Destination",
         "example": "./hello.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dst": {
         "description": "Destination to put the file into",
         "example": "s3://my-bucket/test.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "A file to move to the Destination",
         "example": "./hello.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Moves objects from a source to a destination.\nThey can be either local or remote but not both local (Local -> Remote, Remote -> Local, Remote -> Remote)",
      "isInternal": false,
      "name": "move-dir",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to process",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "dst": {
         "description": "Destination to put files into",
         "example": "s3://my-bucket/dir",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source path or uri to move files from",
         "example": "./dir",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to process",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "dst": {
         "description": "Destination to put files into",
         "example": "s3://my-bucket/dir",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source path or uri to move files from",
         "example": "./dir",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Generate a pre-signed URL for accessing an object",
      "isInternal": false,
      "name": "presign",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to generate pre-signed URL for",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        },
        "expires-in": {
         "description": "Expiration time for the pre-signed URL. Valid time units are 'ns, 'us' (or 'µs'), 'ms', 's',  'm', and 'h'.default=5m",
         "example": "2h",
         "type": "string"
        },
        "method": {
         "default": "GET",
         "enum": [
          "GET",
          "PUT"
         ],
         "type": "string"
        }
       },
       "required": [
        "dst",
        "method"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "url": {
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Get object public url",
      "isInternal": false,
      "name": "public-url",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to generate the public url",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "url": {
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "url"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "This command uploads any file from the source to the destination if it's not present or has a different size. Additionally any file in the destination not present on the source is deleted.",
      "isInternal": false,
      "name": "sync",
      "parameters": {
       "properties": {
        "batch_size": {
         "default": 1000,
         "description": "Limit of items per batch to delete",
         "maximum": 1000,
         "minimum": 1,
         "type": "integer"
        },
        "delete": {
         "default": false,
         "description": "Deletes any item at the destination not present on the source",
         "type": "boolean"
        },
        "dst": {
         "description": "Full destination path to sync with the source path",
         "example": "s3://my-bucket/dir/",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source path to sync the remote with",
         "example": "./",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "anyOf": [
        {
         "nullable": true,
         "type": "null"
        },
        {
         "type": "boolean"
        },
        {
         "type": "string"
        },
        {
         "type": "number"
        },
        {
         "type": "integer"
        },
        {
         "items": {},
         "type": "array"
        },
        {
         "additionalProperties": true,
         "type": "object"
        }
       ],
       "nullable": true
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Upload a file to a bucket",
      "isInternal": false,
      "name": "upload",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket with desired filename",
         "example": "my-bucket/dir/file.txt",
         "format": "uri",
         "type": "string"
        },
        "src": {
         "description": "Source file path to be uploaded",
         "example": "./file.txt",
         "type": "string",
         "x-contentMediaType": "application/octet-stream"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "file": {
         "type": "string"
        },
        "uri": {
         "type": "string"
        }
       },
       "required": [
        "file",
        "uri"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Upload a directory to a bucket",
      "isInternal": false,
      "name": "upload-dir",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Full destination path in the bucket",
         "example": "my-bucket/dir/",
         "format": "uri",
         "type": "string"
        },
        "filter": {
         "description": "File name pattern to include or exclude",
         "items": {
          "properties": {
           "exclude": {
            "description": "Filename pattern to exclude",
            "type": "string"
           },
           "include": {
            "description": "Filename pattern to include",
            "type": "string"
           }
          },
          "type": "object"
         },
         "type": "array"
        },
        "shallow": {
         "default": false,
         "description": "Don't upload subdirectories",
         "type": "boolean"
        },
        "src": {
         "description": "Source directory path for upload",
         "example": "path/to/folder",
         "type": "string",
         "x-contentMediaType": "inode/directory"
        }
       },
       "required": [
        "src",
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "properties": {
        "dir": {
         "type": "string"
        },
        "uri": {
         "type": "string"
        }
       },
       "required": [
        "dir",
        "uri"
       ],
       "type": "object"
      },
      "version": ""
     },
     {
      "configs": {
       "properties": {
        "chunkSize": {
         "default": 8,
         "description": "Chunk size to consider when doing multipart requests. Specified in Mb",
         "maximum": 5120,
         "minimum": 8,
         "type": "integer"
        },
        "region": {
         "default": "br-ne1",
         "description": "Region to reach the service",
         "enum": [
          "br-ne1",
          "br-se1",
          "br-mgl1"
         ],
         "type": "string"
        },
        "serverUrl": {
         "description": "Manually specify the server to use",
         "format": "uri",
         "type": "string"
        },
        "workers": {
         "default": 5,
         "description": "Number of routines that spawn to do parallel operations within object_storage",
         "minimum": 1,
         "type": "integer"
        }
       },
       "type": "object"
      },
      "description": "Retrieve all versions of an object",
      "isInternal": false,
      "name": "versions",
      "parameters": {
       "properties": {
        "dst": {
         "description": "Path of the object to retrieve versions from",
         "example": "bucket1/file.txt",
         "format": "uri",
         "type": "string"
        }
       },
       "required": [
        "dst"
       ],
       "type": "object"
      },
      "result": {
       "items": {
        "properties": {
         "ETag": {
          "type": "string"
         },
         "IsLatest": {
          "type": "boolean"
         },
         "Key": {
          "type": "string"
         },
         "LastModified": {
          "type": "string"
         },
         "Owner": {
          "properties": {
           "DisplayName": {
            "type": "string"
           },
           "ID": {
            "type": "string"
           }
          },
          "required": [
           "DisplayName",
           "ID"
          ],
          "type": "object"
         },
         "Size": {
          "type": "integer"
         },
         "StorageClass": {
          "type": "string"
         },
         "Text": {
          "type": "string"
         },
         "VersionID": {
          "type": "string"
         }
        },
        "required": [
         "Text",
         "VersionID",
         "IsLatest",
         "Key",
         "LastModified",
         "ETag",
         "Size",
         "Owner",
         "StorageClass"
        ],
        "type": "object"
       },
       "type": "array"
      },
      "version": ""
     }
    ],
    "description": "Object operations for Object Storage API",
    "isInternal": false,
    "name": "objects",
    "version": ""
   }
  ],
  "description": "Create and manage Buckets and Objects via the Object Storage API",
  "isInternal": false,
  "name": "object-storage",
  "version": ""
 },
 {
  "children": [
   {
    "configs": {
     "type": "object"
    },
    "description": "Creates a new profile",
    "isInternal": false,
    "name": "create",
    "parameters": {
     "properties": {
      "copy": {
       "description": "Name of the profile to copy content from. If this parameter is passed, the new Profile will be pre-populated with the contents of the Profile with the specified name",
       "type": "string"
      },
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Shows current selected profile. Any changes to auth or config values will only affect this profile",
    "isInternal": false,
    "name": "current",
    "parameters": {
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Deletes the profile with the specified name",
    "isInternal": false,
    "name": "delete",
    "parameters": {
     "properties": {
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "List all available profiles",
    "isInternal": false,
    "name": "list",
    "parameters": {
     "type": "object"
    },
    "result": {
     "items": {
      "properties": {
       "name": {
        "type": "string"
       }
      },
      "required": [
       "name"
      ],
      "type": "object"
     },
     "type": "array"
    },
    "version": ""
   },
   {
    "configs": {
     "type": "object"
    },
    "description": "Sets profile to be used",
    "isInternal": false,
    "name": "set-current",
    "parameters": {
     "properties": {
      "name": {
       "description": "Profile name",
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "result": {
     "properties": {
      "name": {
       "type": "string"
      }
     },
     "required": [
      "name"
     ],
     "type": "object"
    },
    "version": ""
   }
  ],
  "description": "Profiles hold auth and runtime configuration for the MgcSDK, like tokens and log filter settings.\nUsers can create as many profiles as they choose to. Auth and config operations will affect only the\ncurrent profile, so users can alter and switch between profiles without loosing the previous configuration",
  "isInternal": false,
  "name": "profile",
  "version": ""
 }
]