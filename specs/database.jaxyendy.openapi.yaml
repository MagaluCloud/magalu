openapi: 3.0.2
info:
  title: DBaaS API Product
  description: DBaaS API Product.
  contact:
    name: Tribo IAAS Cloud
    url: https://gitlab.luizalabs.com/cloud/dbaas/docs
    email: cloud-iaas-dbaas@luizalabs.com
  version: 2.18.0
tags:
  - name: engines
    description: Engines available for database instances.
  - name: instance_types
    description: Instance Types available for database instances.
  - name: instances
    description: Database instances management.
  - name: replicas
    description: Database replicas management.
  - name: clusters
    description: Clusters management.
  - name: snapshots
    description: Snapshots management.
  - name: parameter-groups
    description: Parameter groups management.
paths:
  /v2/engines:
    get:
      operationId: engines_v2_get_all
      tags:
        - engines
      summary: List available engines.
      description: Returns a list of available engines.
      x-permission:
        permission-name: db_engine_list
        product-name: database
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
        - $ref: "#/components/parameters/engine_status"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnginesResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v2/engines/{engine_id}:
    get:
      operationId: engines_v2_get_by_id
      tags:
        - engines
      summary: Engine detail.
      description: Returns a engine detail.
      x-permission:
        permission-name: db_engine_get
        product-name: database
      parameters:
        - $ref: "#/components/parameters/engine_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EngineResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v2/engines/{engine_id}/parameters:
    get:
      description: Returns a list of available engine parameters.
      x-permission:
        permission-name: db_engine_parameter_list
        product-name: database
      operationId: engines_parameters_v2_get_all
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_optional"
        - $ref: "#/components/parameters/engine_id"
        - $ref: "#/components/parameters/parameter_name_query"
        - $ref: "#/components/parameters/dynamic_query"
        - $ref: "#/components/parameters/modifiable_query"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EngineParametersResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: List available engine parameters.
      tags:
        - engines
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v2/parameter-groups:
    get:
      description: List all Parameter Groups for a x-tenant-id
      x-permission:
        permission-name: db_parameter_group_list
        product-name: database
      operationId: parameter_groups_v2_get_all
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_small"
        - $ref: "#/components/parameters/parameter_group_type_query"
        - $ref: "#/components/parameters/engine_id_query_without_default"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterGroupsResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: List all Parameter Groups
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      description: Creates a new parameter group for a tenant.
      x-permission:
        permission-name: db_parameter_group_create
        product-name: database
      operationId: parameter_groups_v2_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParameterGroupCreateRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterGroupResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Creates a new parameter group.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/parameter-groups/{parameter_group_id}:
    delete:
      description: Deletes a parameter group.
      x-permission:
        permission-name: db_parameter_group_delete
        product-name: database
      operationId: parameter_groups_v2_delete
      parameters:
        - $ref: "#/components/parameters/parameter_group_id"
      responses:
        "204":
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Deletes a parameter group.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    get:
      description: Returns a parameter group detail.
      x-permission:
        permission-name: db_parameter_group_get
        product-name: database
      operationId: parameter_groups_v2_get_by_id
      parameters:
        - $ref: "#/components/parameters/parameter_group_id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterGroupDetailResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Parameter group details.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    patch:
      description: Updates a parameter group.
      x-permission:
        permission-name: db_parameter_group_update
        product-name: database
      operationId: parameter_groups_v2_patch
      parameters:
        - $ref: "#/components/parameters/parameter_group_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParameterGroupUpdateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterGroupDetailResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Parameter group update.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/parameter-groups/{parameter_group_id}/parameters:
    get:
      description: Return details of a group's parameters.
      x-permission:
        permission-name: db_parameter_group_parameter_get
        product-name: database
      operationId: parameters_v2_get_all
      parameters:
        - $ref: "#/components/parameters/parameter_group_id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_optional"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParametersResponse'
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Parameters list.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      description: Create a parameter for a group.
      x-permission:
        permission-name: db_parameter_group_parameter_create
        product-name: database
      operationId: parameters_v2_create
      parameters:
        - $ref: "#/components/parameters/parameter_group_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterResponse'
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Create a parameter.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/parameter-groups/{parameter_group_id}/parameters/{parameter_id}:
    patch:
      description: Updates a parameter for a group.
      x-permission:
        permission-name: db_parameter_group_parameter_update
        product-name: database
      operationId: parameters_v2_update
      parameters:
        - $ref: "#/components/parameters/parameter_group_id"
        - $ref: "#/components/parameters/parameter_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterDetailResponse'
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Update a parameter.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    delete:
      description: Deletes a parameter for a group.
      x-permission:
        permission-name: db_parameter_group_parameter_delete
        product-name: database
      operationId: parameters_v2_delete
      parameters:
        - $ref: "#/components/parameters/parameter_group_id"
        - $ref: "#/components/parameters/parameter_id"
      responses:
        '204':
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      summary: Parameters delete.
      tags:
        - parameter-groups
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instance-types:
    get:
      operationId: instance_types_v2_get_all
      tags:
        - instance_types
      summary: List available instance types.
      description: Returns a list of available instance types. An instance type is a hardware template that defines the size of RAM and vCPU.
      x-permission:
        permission-name: db_instance_type_list
        product-name: database
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_large"
        - $ref: "#/components/parameters/instance_type_status"
        - $ref: "#/components/parameters/instance_type_compatible_product"
        - $ref: "#/components/parameters/engine_id_query"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceTypesResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v2/instance-types/{instance_type_id}:
    get:
      operationId: instance_types_v2_get_by_id
      tags:
        - instance_types
      summary: Instance Type detail.
      description: Returns an instance type detail.
      x-permission:
        permission-name: db_instance_type_get
        product-name: database
      parameters:
        - required: true
          schema:
            title: Instance Type Id
            type: string
            format: uuid
          name: instance_type_id
          in: path
          description: Instance Type Unique Id.
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceType"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v2/instances:
    head:
      operationId: instances_v2_head_all
      tags:
        - instances
      description: Returns headers containing information for the list of database instances, with no response body.
      summary: Header information for listing all database instances.
      x-permission:
        permission-name: db_instance_head
        product-name: database
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_small"
        - $ref: "#/components/parameters/instance_status"
        - $ref: "#/components/parameters/instance_expand"
        - $ref: "#/components/parameters/engine_id_query_without_default"
        - $ref: "#/components/parameters/volume_size_query"
        - $ref: "#/components/parameters/volume_size_gt"
        - $ref: "#/components/parameters/volume_size_gte"
        - $ref: "#/components/parameters/volume_size_lt"
        - $ref: "#/components/parameters/volume_size_lte"
        - $ref: "#/components/parameters/parameter_group_id_query"
        - $ref: "#/components/parameters/deletion_protected"
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
          headers:
            x-pagination-count:
              $ref: '#/components/headers/PaginationCount'
            x-pagination-limit:
              $ref: '#/components/headers/PaginationLimit'
            x-pagination-max-limit:
              $ref: '#/components/headers/PaginationMaxLimit'
            x-pagination-offset:
              $ref: '#/components/headers/PaginationOffset'
            x-pagination-total:
              $ref: '#/components/headers/PaginationTotal'
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    get:
      operationId: instances_v2_get_all
      tags:
        - instances
      summary: List all database instances.
      description: Returns a list of database instances for a x-tenant-id.
      x-permission:
        permission-name: db_instance_list
        product-name: database
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_small"
        - $ref: "#/components/parameters/instance_status"
        - $ref: "#/components/parameters/instance_expand"
        - $ref: "#/components/parameters/engine_id_query_without_default"
        - $ref: "#/components/parameters/volume_size_query"
        - $ref: "#/components/parameters/volume_size_gt"
        - $ref: "#/components/parameters/volume_size_gte"
        - $ref: "#/components/parameters/volume_size_lt"
        - $ref: "#/components/parameters/volume_size_lte"
        - $ref: "#/components/parameters/parameter_group_id_query"
        - $ref: "#/components/parameters/deletion_protected"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstancesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      operationId: instances_v2_post
      tags:
        - instances
      summary: Creates a new database instance.
      description: Creates a new database instance asynchronously for a tenant.
      x-permission:
        permission-name: db_instance_create
        product-name: database
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceCreateRequest"
        required: true
      responses:
        "202":
          description: Accepted - Database instance creation in progress.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instances/{instance_id}:
    get:
      operationId: instances_v2_get_by_id
      tags:
        - instances
      summary: Database instance details.
      description: Returns a database instance detail.
      x-permission:
        permission-name: db_instance_get
        product-name: database
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/instance_expand"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    patch:
      operationId: instances_v2_patch
      tags:
        - instances
      summary: Database instance update.
      description: Updates a database instance.
      x-permission:
        permission-name: db_instance_update
        product-name: database
      parameters:
        - $ref: "#/components/parameters/instance_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceUpdateRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    delete:
      operationId: instances_v2_delete
      tags:
        - instances
      summary: Deletes a database instance.
      description: Deletes a database instance.
      x-permission:
        permission-name: db_instance_delete
        product-name: database
      parameters:
        - $ref: "#/components/parameters/instance_id"
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Accepted - Database instance deletion in progress.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instances/{instance_id}/resize:
    post:
      tags:
        - instances
      summary: Resizes a database instance.
      description: Resizes a database instance.
      x-permission:
        permission-name: db_instance_resize
        product-name: database
      operationId: instances_v2_resize
      parameters:
        - $ref: "#/components/parameters/instance_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceResizeRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instances/{instance_id}/start:
    post:
      tags:
        - instances
      summary: Starts a database instance.
      description: Starts a database instance.
      x-permission:
        permission-name: db_instance_start
        product-name: database
      operationId: instances_v2_start
      parameters:
        - $ref: "#/components/parameters/instance_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instances/{instance_id}/stop:
    post:
      tags:
        - instances
      summary: Stops a database instance.
      description: Stops a database instance.
      x-permission:
        permission-name: db_instance_stop
        product-name: database
      operationId: instances_v2_stop
      parameters:
        - $ref: "#/components/parameters/instance_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/clusters:
    get:
      summary: List all database clusters.
      tags:
        - clusters
      description: Returns a list of database clusters for a x-tenant-id.
      x-permission:
        permission-name: db_cluster_get
        product-name: database
      operationId: clusters_list_v2_clusters_get
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_small"
        - $ref: "#/components/parameters/cluster_status"
        - $ref: "#/components/parameters/engine_id_query_without_default"
        - $ref: "#/components/parameters/volume_size_query"
        - $ref: "#/components/parameters/volume_size_gt"
        - $ref: "#/components/parameters/volume_size_gte"
        - $ref: "#/components/parameters/volume_size_lt"
        - $ref: "#/components/parameters/volume_size_lte"
        - $ref: "#/components/parameters/parameter_group_id_query"
        - $ref: "#/components/parameters/deletion_protected"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClustersResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    head:
      description: Returns headers containing information for the list of database clusters, with no response body.
      x-permission:
        permission-name: db_cluster_head
        product-name: database
      operationId: clusters_list_v2_clusters_head
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_small"
        - $ref: "#/components/parameters/cluster_status"
        - $ref: "#/components/parameters/engine_id_query_without_default"
        - $ref: "#/components/parameters/volume_size_query"
        - $ref: "#/components/parameters/volume_size_gt"
        - $ref: "#/components/parameters/volume_size_gte"
        - $ref: "#/components/parameters/volume_size_lt"
        - $ref: "#/components/parameters/volume_size_lte"
        - $ref: "#/components/parameters/parameter_group_id_query"
        - $ref: "#/components/parameters/deletion_protected"
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
          headers:
            x-pagination-count:
              description: The number of items on the current page.
              schema:
                type: integer
            x-pagination-limit:
              description: The maximum number of items per page.
              schema:
                type: integer
            x-pagination-max-limit:
              description: The maximum allowable limit for the number of items per page.
              schema:
                type: integer
            x-pagination-offset:
              description: The number of items to skip before starting to collect the result set.
              schema:
                type: integer
            x-pagination-total:
              description: The total number of items available across all pages.
              schema:
                type: integer
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
      summary: Header information for listing all database clusters.
      tags:
        - clusters
    post:
      operationId: clusters_v2_post
      tags:
        - clusters
      summary: Creates a new database high availability cluster.
      description: Creates a new database high availability cluster asynchronously for a tenant.
      x-permission:
        permission-name: db_cluster_create
        product-name: database
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClusterCreateRequest"
        required: true
      responses:
        "202":
          description: Accepted - Database Cluster creation in progress.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/clusters/{cluster_id}:
    delete:
      operationId: clusters_v2_delete
      tags:
        - clusters
      summary: Deletes a database cluster.
      description: Removes a database cluster and it"s instances for a tenant.
      x-permission:
        permission-name: db_cluster_delete
        product-name: database
      parameters:
        - $ref: "#/components/parameters/cluster_id"
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Accepted - Database cluster deletion in progress.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    get:
      operationId: clusters_v2_get_by_id
      tags:
        - clusters
      summary: Database cluster details.
      description: Returns a database cluster detail.
      x-permission:
        permission-name: db_cluster_get
        product-name: database
      parameters:
        - $ref: "#/components/parameters/cluster_id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterDetailResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    patch:
      description: Updates a database cluster.
      x-permission:
        permission-name: db_cluster_update
        product-name: database
      operationId: clusters_v2_patch
      summary: Database cluster update.
      tags:
        - clusters
      parameters:
        - $ref: "#/components/parameters/cluster_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterDetailResponse"
          description: Successful Response
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/clusters/{cluster_id}/start:
    post:
      tags:
        - clusters
      summary: Starts a database cluster.
      description: Starts a database cluster.
      x-permission:
        permission-name: db_cluster_start
        product-name: database
      operationId: clusters_v2_start
      parameters:
        - $ref: "#/components/parameters/cluster_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/clusters/{cluster_id}/stop:
    post:
      tags:
        - clusters
      summary: Stops a database cluster.
      description: Stops a database cluster.
      x-permission:
        permission-name: db_cluster_stop
        product-name: database
      operationId: clusters_v2_stop
      parameters:
        - $ref: "#/components/parameters/cluster_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/replicas:
    get:
      tags:
        - replicas
      summary: Replicas List.
      description: List all replicas for a given instance.
      x-permission:
        permission-name: db_replica_list
        product-name: database
      operationId: replicas_v2_get_all
      parameters:
        - $ref: "#/components/parameters/source_id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicasResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      tags:
        - replicas
      summary: Replica Create.
      description: Creates a new replica for an instance asynchronously.
      x-permission:
        permission-name: db_replica_create
        product-name: database
      operationId: replicas_v2_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplicaCreateRequest"
        required: true
      responses:
        "202":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/replicas/{replica_id}:
    get:
      tags:
        - replicas
      summary: Replica Detail.
      description: Get an instance replica detail.
      x-permission:
        permission-name: db_replica_get
        product-name: database
      operationId: replicas_v2_get_by_id
      parameters:
        - $ref: "#/components/parameters/replica_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    delete:
      operationId: replicas_v2_delete
      tags:
        - replicas
      summary: Deletes a replica instance.
      description: Deletes a replica instance.
      x-permission:
        permission-name: db_replica_delete
        product-name: database
      parameters:
        - required: true
          schema:
            title: Database Replica Id
            type: string
            format: uuid
          name: replica_id
          in: path
          description: Database Replica Unique Id
      responses:
        "202":
          description: Accepted - Database replica deletion in progress.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/replicas/{replica_id}/resize:
    post:
      tags:
        - replicas
      summary: Replica Resize.
      description: Resize an instance replica.
      x-permission:
        permission-name: db_replica_resize
        product-name: database
      operationId: replicas_v2_resize
      parameters:
        - $ref: "#/components/parameters/replica_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplicaResizeRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/replicas/{replica_id}/start:
    post:
      tags:
        - replicas
      summary: Replica Start.
      description: Start an instance replica.
      x-permission:
        permission-name: db_replica_start
        product-name: database
      operationId: replicas_v2_start
      parameters:
        - $ref: "#/components/parameters/replica_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/replicas/{replica_id}/stop:
    post:
      tags:
        - replicas
      summary: Replica Stop.
      description: Stop an instance replica.
      x-permission:
        permission-name: db_replica_stop
        product-name: database
      operationId: replicas_v2_stop
      parameters:
        - $ref: "#/components/parameters/replica_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instances/{instance_id}/snapshots:
    get:
      tags:
        - snapshots
      summary: Snapshots List.
      description: List all snapshots.
      x-permission:
        permission-name: db_instance_snapshot_list
        product-name: database
      operationId: instances_v2_snapshots_get_all
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
        - $ref: "#/components/parameters/snapshot_type"
        - $ref: "#/components/parameters/snapshot_status"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotsInstanceResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      tags:
        - snapshots
      summary: Snapshot Create.
      description: Creates a new snapshot asynchronously.
      x-permission:
        permission-name: db_instance_snapshot_create
        product-name: database
      operationId: instances_v2_snapshots_post
      parameters:
        - $ref: "#/components/parameters/instance_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotCreateRequest"
        required: true
      responses:
        "202":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instances/{instance_id}/snapshots/{snapshot_id}:
    get:
      tags:
        - snapshots
      summary: Snapshot Detail.
      description: Get a snapshot detail.
      x-permission:
        permission-name: db_instance_snapshot_get
        product-name: database
      operationId: instances_v2_snapshot_get_by_id
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    patch:
      tags:
        - snapshots
      summary: Snapshot Update.
      description: Updates a snapshot.
      x-permission:
        permission-name: db_instance_snapshot_update
        product-name: database
      operationId: instances_v2_snapshots_patch
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/snapshot_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotUpdateRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    delete:
      tags:
        - snapshots
      summary: Delete Snapshot.
      description: Deletes a database snapshot.
      x-permission:
        permission-name: db_instance_snapshot_delete
        product-name: database
      operationId: instances_v2_snapshots_delete
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Successful Response.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/instances/{instance_id}/snapshots/{snapshot_id}/restore:
    post:
      tags:
        - snapshots
      summary: Create a new instance from snapshot asynchronously.
      description: Create a new instance from snapshot.
      x-permission:
        permission-name: db_instance_snapshot_restore
        product-name: database
      operationId: instances_v2_snapshots_restore
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/snapshot_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreSnapshotRequest"
        required: true
      responses:
        "202":
          description: Accepted - Snapshot restore instance in progress.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/clusters/{cluster_id}/snapshots:
    get:
      tags:
        - snapshots
      summary: Snapshots List.
      description: List all snapshots.
      x-permission:
        permission-name: db_cluster_snapshot_list
        product-name: database
      operationId: clusters_v2_snapshots_get_all
      parameters:
        - $ref: "#/components/parameters/cluster_id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
        - $ref: "#/components/parameters/snapshot_type"
        - $ref: "#/components/parameters/snapshot_status"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotsClusterResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      tags:
        - snapshots
      summary: Snapshot Create.
      description: Creates a new snapshot asynchronously.
      x-permission:
        permission-name: db_cluster_snapshot_create
        product-name: database
      operationId: clusters_v2_snapshots_post
      parameters:
        - $ref: "#/components/parameters/cluster_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClusterSnapshotCreateRequest"
        required: true
      responses:
        "202":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/clusters/{cluster_id}/snapshots/{snapshot_id}:
    get:
      tags:
        - snapshots
      summary: Snapshot Detail.
      description: Get a snapshot detail.
      x-permission:
        permission-name: db_cluster_snapshot_get
        product-name: database
      operationId: clusters_v2_snapshot_get_by_id
      parameters:
        - $ref: "#/components/parameters/cluster_id"
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotClusterDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    patch:
      tags:
        - snapshots
      summary: Snapshot Update.
      description: Updates a snapshot.
      x-permission:
        permission-name: db_cluster_snapshot_update
        product-name: database
      operationId: clusters_v2_snapshots_patch
      parameters:
        - $ref: "#/components/parameters/cluster_id"
        - $ref: "#/components/parameters/snapshot_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotUpdateRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotClusterDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    delete:
      tags:
        - snapshots
      summary: Delete Snapshot.
      description: Deletes a database snapshot.
      x-permission:
        permission-name: db_cluster_snapshot_delete
        product-name: database
      operationId: clusters_v2_snapshots_delete
      parameters:
        - $ref: "#/components/parameters/cluster_id"
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Successful Response.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v2/clusters/{cluster_id}/snapshots/{snapshot_id}/restore:
    post:
      operationId: clusters_v2_snapshots_restore
      parameters:
        - $ref: "#/components/parameters/cluster_id"
        - $ref: "#/components/parameters/snapshot_id"
      tags:
        - snapshots
      summary: Create a new cluster from snapshot asynchronously.
      description: Create a new cluster from snapshot.
      x-permission:
        permission-name: db_cluster_snapshot_restore
        product-name: database
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClusterRestoreRequest"
        required: true
      responses:
        "202":
          description: Accepted - Snapshot restore cluster in progress.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
components:
  parameters:
    replica_id:
      name: replica_id
      in: path
      required: true
      schema:
        title: Replica Id
        type: string
        format: uuid
      example: 2218ad95-6ba2-4fef-8302-a31cb1062412
      description: Value referring to replica Id.
    source_id:
      name: source_id
      in: query
      required: false
      schema:
        title: Source Id
        type: string
        format: uuid
      example: 9959ee7a-0710-4faa-9f10-6845819e8ac0
      description: Value referring to source Id.
    backup_id:
      name: backup_id
      in: path
      required: true
      schema:
        title: Backup Id
        type: string
        format: uuid
      example: 1b65c0e4-94a1-4385-aedb-c1b34f6e8935
      description: Value referring to backup Id.
    snapshot_id:
      name: snapshot_id
      in: path
      required: true
      schema:
        title: Snapshot Id
        type: string
        format: uuid
      example: c1b34f6e-94a1-4385-aedb-1b65c0e48935
      description: Value referring to snapshot Id.
    instance_id:
      name: instance_id
      in: path
      required: true
      schema:
        title: Instance Id
        type: string
        format: uuid
      example: f21999cb-302f-48f7-b584-6a84748e112c
      description: Value referring to instance Id.
    parameter_group_id:
      name: parameter_group_id
      in: path
      required: true
      schema:
        title: Parameter Group Id
        type: string
        format: uuid
      example: f21999cb-302f-48f7-b584-6a84748e112c
      description: Value referring to parameter group Id.
    parameter_id:
      in: path
      name: parameter_id
      required: true
      schema:
        description: Parameter Id.
        format: uuid
        title: Parameter Id
        type: string
      example: f21999cb-302f-48f7-b584-6a84748e112c
    cluster_id:
      name: cluster_id
      in: path
      required: true
      schema:
        title: Cluster Id
        type: string
        format: uuid
      example: f21999cb-302f-48f7-b584-6a84748e112c
      description: Value referring to cluster Id.
    parameter_group_id_query:
      name: parameter_group_id
      in: query
      required: false
      schema:
        title: Parameter Group Id
        type: string
        format: uuid
      example: f21999cb-302f-48f7-b584-6a84748e112c
      description: Value referring to parameter group Id.
    deletion_protected:
      in: query
      name: deletion_protected
      required: false
      schema:
        title: Deletion Protected
        type: boolean
    instance_id_query:
      name: instance_id
      in: query
      required: false
      schema:
        title: Instance Id
        type: string
        format: uuid
      example: f21999cb-302f-48f7-b584-6a84748e112c
      description: Value referring to instance Id.
    engine_id:
      name: engine_id
      in: path
      required: true
      schema:
        title: Engine Id
        type: string
        format: uuid
      example: 7a11cfc5-f9f8-4fa2-a418-94a423f6a51f
      description: Value referring to engine Id.
    instance_type_id:
      name: instance_type_id
      in: path
      required: true
      schema:
        title: Instance Type Id
        type: string
        format: uuid
        description: Value referring to instance type Id.
      example: 7a11cfc5-f9f8-4fa2-a418-94a423f6a51f
      description: Value referring to instance type Id.
    engine_id_query:
      name: engine_id
      in: query
      required: false
      schema:
        format: uuid
        title: Engine Id
        type: string
      description: Value referring to engine Id.
    engine_id_query_without_default:
      name: engine_id
      in: query
      required: false
      schema:
        format: uuid
        title: Engine Id
        type: string
      description: Value referring to engine Id.
    volume_size_query:
      name: volume.size
      in: query
      required: false
      schema:
        title: Volume.Size
        type: integer
      description: Value referring to volume size.
    parameter_group_type_query:
      name: type
      in: query
      required: false
      schema:
        allOf:
          - $ref: '#/components/schemas/ParameterGroupType'
        title: Type
    volume_size_gt:
      name: volume.size__gt
      in: query
      required: false
      schema:
        title: Volume.Size Gt
        type: integer
      description: Value referring to volume size greater than.
    volume_size_gte:
      name: volume.size__gte
      in: query
      required: false
      schema:
        title: Volume.Size Gte
        type: integer
      description: Value referring to volume size greater than or equal to.
    volume_size_lt:
      name: volume.size__lt
      in: query
      required: false
      schema:
        title: Volume.Size Lt
        type: integer
      description: Value referring to volume size less than.
    volume_size_lte:
      name: volume.size__lte
      in: query
      required: false
      schema:
        title: Volume.Size Lte
        type: integer
      description: Value referring to volume size less than or equal to.
    instance_expand:
      name: _expand
      in: query
      required: false
      schema:
        allOf:
          - $ref: "#/components/schemas/InstanceExpand"
      description: "Instance extra attributes or relations to show with the main query. When available, more than one value can be informed using commas. e.g: `_expand=value1,value2`"
    offset:
      name: _offset
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      description: The number of items to skip before starting to collect the result set.
    limit_small:
      name: _limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 25
        default: 10
      description: The maximum number of items per page.
    limit_medium:
      name: _limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 10
      description: The maximum number of items per page.
    limit_large:
      name: _limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 10
      description: The maximum number of items per page.
    limit_optional:
      name: _limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
      description: The maximum number of items per page.
    parameter_name_query:
      in: query
      name: name
      required: false
      schema:
        title: Name
        type: string
      description: Value referring to engine parameter name.
    dynamic_query:
      in: query
      name: dynamic
      required: false
      schema:
        title: Dynamic
        type: boolean
      description: "Parameters that can be modified while the database is running.  \nChanges to these parameters take effect immediately without requiring a service restart.\n"
    modifiable_query:
      name: modifiable
      in: query
      required: false
      schema:
        title: Modifiable
        type: boolean
      description: "Parameters that influence the machine creation process.  \nThese parameters are set during instance provisioning and become immutable after the machine is created.\n"
    engine_status:
      name: status
      in: query
      schema:
        $ref: "#/components/schemas/EngineStatus"
      description: Value referring to engine status.
    instance_type_status:
      name: status
      in: query
      schema:
        allOf:
          - $ref: "#/components/schemas/InstanceTypeStatus"
      description: An enumeration.
    instance_type_compatible_product:
      name: compatible_product
      in: query
      schema:
        $ref: "#/components/schemas/InstanceTypeCompatibleProducts"
      description: Value referring to instance type compatible products.
    snapshot_type:
      name: type
      in: query
      schema:
        $ref: "#/components/schemas/SnapshotType"
      description: Value referring to snapshot type.
    snapshot_status:
      name: status
      in: query
      schema:
        $ref: "#/components/schemas/SnapshotStatus"
      description: Value referring to snapshot status.
    instance_status:
      name: status
      in: query
      schema:
        $ref: "#/components/schemas/InstanceStatus"
      description: Value referring to instance status.
    cluster_status:
      name: status
      in: query
      schema:
        $ref: "#/components/schemas/ClusterStatus"
      description: Value referring to cluster status.
  headers:
    PaginationCount:
      description: The number of items on the current page.
      schema:
        type: integer
    PaginationLimit:
      description: The maximum number of items per page.
      schema:
        type: integer
    PaginationMaxLimit:
      description: The maximum allowable limit for the number of items per page.
      schema:
        type: integer
    PaginationOffset:
      description: The number of items to skip before starting to collect the result set.
      schema:
        type: integer
    PaginationTotal:
      description: The total number of items available across all pages.
      schema:
        type: integer
  schemas:
    MetaResponse:
      properties:
        filters:
          items:
            $ref: "#/components/schemas/FieldValueResponse"
          title: Filters
          type: array
          description: Data filters use in the current request pagination.
        page:
          $ref: "#/components/schemas/PageResponse"
      required:
        - page
        - filters
      title: Meta Response
      type: object
      description: Page details about the current request pagination.
    FieldValueResponse:
      properties:
        field:
          title: Field
          type: string
          description: The field name used to filter the response.
        value:
          title: Value
          type: string
          description: The field value used to filter the response.
      required:
        - field
        - value
      title: FieldValueResponse
      type: object
    PageResponse:
      properties:
        offset:
          title: Offset
          type: integer
          description: The number of items to skip before starting to collect the result set.
        limit:
          title: Limit
          type: integer
          description: The maximum number of items per page.
        count:
          title: Count
          type: integer
          description: The number of items on the current page.
        total:
          title: Total
          type: integer
          description: The total number of items available across all pages.
        max_limit:
          title: Max Limit
          type: integer
          description: The maximum allowable limit for the number of items per page.
      required:
        - limit
        - offset
        - count
        - total
        - max_limit
      title: PageResponse
      type: object
    ClusterCreateRequest:
      properties:
        backup_retention_days:
          default: 7
          title: Backup Retention Days
          type: integer
        backup_start_at:
          default: 04:00:00
          format: time
          title: Backup Start At
          type: string
        engine_id:
          format: uuid
          title: Engine Id
          type: string
        instance_type_id:
          format: uuid
          title: Machine Type Id
          type: string
        name:
          maxLength: 100
          title: Name
          type: string
        password:
          maxLength: 50
          title: Password
          type: string
        user:
          maxLength: 25
          title: User
          type: string
        volume:
          $ref: "#/components/schemas/ClusterVolumeRequest"
        parameter_group_id:
          title: Parameter group Id
          type: string
          format: uuid
        deletion_protected:
          title: Deletion Pprotected
          type: boolean
          default: false
      required:
        - name
        - engine_id
        - instance_type_id
        - user
        - password
        - volume
      title: ClusterCreateRequest
      type: object
    ClusterUpdateRequest:
      properties:
        parameter_group_id:
          title: Parameter group Id
          type: string
          format: uuid
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          example: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          example: "04:00:00"
        deletion_protected:
          title: Deletion Protected
          type: boolean
      title: ClusterUpdateRequest
      type: object
    ClusterDetailResponse:
      properties:
        backup_retention_days:
          title: Backup Retention Days
          type: integer
        backup_start_at:
          format: time
          title: Backup Start At
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        engine_id:
          format: uuid
          title: Engine Id
          type: string
        finished_at:
          format: date-time
          title: Finished At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        instance_type_id:
          format: uuid
          title: Machine Type Id
          type: string
        name:
          maxLength: 100
          title: Name
          type: string
        parameter_group_id:
          format: uuid
          title: Parameter Group Id
          type: string
        started_at:
          format: date-time
          title: Started At
          type: string
        status:
          $ref: "#/components/schemas/ClusterStatusResponse"
        updated_at:
          format: date-time
          title: Updated At
          type: string
        volume:
          $ref: "#/components/schemas/ClusterVolumeResponse"
        apply_parameters_pending:
          title: Apply Parameters Pending
          type: boolean
        addresses:
          title: Addresses
          type: array
          items:
            $ref: "#/components/schemas/LoadBalancerAddress"
        ip_address:
          title: ClusterIpAddress
          type: string
          example: "172.53.10.82"
        deletion_protected:
          title: Deletion Protected
          type: boolean
      required:
        - id
        - name
        - engine_id
        - instance_type_id
        - volume
        - status
        - created_at
        - backup_retention_days
        - backup_start_at
        - parameter_group_id
        - apply_parameters_pending
        - addresses
        - deletion_protected
      title: ClusterDetailResponse
      type: object
    ClusterStatusResponse:
      description: An enumeration.
      enum:
        - ACTIVE
        - ERROR
        - PENDING
        - CREATING
        - DELETING
        - DELETED
        - ERROR_DELETING
        - STARTING
        - STOPPING
        - STOPPED
        - BACKING_UP
        - BALANCING
      title: ClusterStatusResponse
      type: string
    ClusterVolumeResponse:
      properties:
        size:
          maximum: 50000
          minimum: 20
          title: Size
          type: integer
        type:
          $ref: "#/components/schemas/VolumeTypeResponse"
        encrypted:
          type: boolean
      required:
        - size
        - type
        - encrypted
      title: ClusterVolumeResponse
      type: object
    ClustersResponse:
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          items:
            $ref: "#/components/schemas/ClusterDetailResponse"
          title: Results
          type: array
      required:
        - meta
        - results
      title: ClustersResponse
      type: object
    ClusterResponse:
      properties:
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
      title: ClusterResponse
      type: object
    ClusterVolumeRequest:
      title: Cluster Volume Request
      required:
        - size
      type: object
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 20
          maximum: 50000
          example: 30
        type:
          $ref: "#/components/schemas/VolumeTypeRequest"
    SnapshotTypeResponse:
      description: An enumeration.
      enum:
        - ON_DEMAND
        - AUTOMATED
      title: SnapshotTypeResponse
      type: string
    SnapshotDetailResponse:
      title: Snapshot Detail Response
      required:
        - id
        - instance
        - allocated_size
        - name
        - description
        - type
        - status
        - availability_zone
        - created_at
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        instance:
          $ref: "#/components/schemas/SnapshotInstanceDetailResponse"
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        type:
          $ref: "#/components/schemas/SnapshotTypeResponse"
        status:
          $ref: "#/components/schemas/SnapshotStatus"
        allocated_size:
          title: Allocated Size
          type: integer
          description: Allocated size in gibibytes.
        created_at:
          title: Created At
          type: string
          format: date-time
        started_at:
          title: Started At
          type: string
          format: date-time
        finished_at:
          title: Finished At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
        availability_zone:
          $ref: "#/components/schemas/AvailabilityZone"
    ClusterSnapshotResponse:
      properties:
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
      title: ClusterSnapshotResponse
      type: object
    SnapshotClusterDetailResponse:
      title: Snapshot Detail Response
      required:
        - id
        - cluster
        - allocated_size
        - name
        - description
        - type
        - status
        - created_at
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        cluster:
          $ref: "#/components/schemas/SnapshotEntityClusterDetailResponse"
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        type:
          $ref: "#/components/schemas/SnapshotTypeResponse"
        status:
          $ref: "#/components/schemas/SnapshotStatus"
        allocated_size:
          title: Allocated Size
          type: integer
          description: Allocated size in gibibytes.
        created_at:
          title: Created At
          type: string
          format: date-time
        started_at:
          title: Started At
          type: string
          format: date-time
        finished_at:
          title: Finished At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
    SnapshotStatus:
      title: Snapshot Status
      description: An enumeration.
      type: string
      enum:
        - PENDING
        - CREATING
        - AVAILABLE
        - RESTORING
        - ERROR
        - DELETING
        - DELETED
    SnapshotType:
      title: Snapshot Type Filter
      description: An enumeration.
      type: string
      enum:
        - ON_DEMAND
        - AUTOMATED
    SnapshotsInstanceResponse:
      title: Snapshots Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/SnapshotDetailResponse"
    SnapshotsClusterResponse:
      title: Snapshots Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/SnapshotClusterDetailResponse"
    SnapshotInstanceDetailResponse:
      title: Instance Detail Response
      description: >
        This response object provides details about a database instance associated with a snapshot.

      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          description: Database instance unique identifier.
          type: string
          format: uuid
        name:
          title: Name
          description: Database instance unique name.
          type: string
          maxLength: 100
          example: "my-db-instance"
    SnapshotEntityClusterDetailResponse:
      title: Cluster Detail Response
      description: >
        This response object provides details about a database cluster associated with a snapshot.

      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          description: Database cluster unique identifier.
          type: string
          format: uuid
        name:
          title: Name
          description: Database cluster unique name.
          type: string
          maxLength: 100
          example: "my-db-cluster"
    ClusterSnapshotCreateRequest:
      properties:
        description:
          title: Description
          maxLength: 255
          type: string
        name:
          maxLength: 100
          title: Name
          type: string
      required:
        - name
      title: ClusterSnapshotCreateRequest
      type: object
    SnapshotCreateRequest:
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          description: Snapshot unique name.
          type: string
          maxLength: 100
          example: "my-snapshot"
        description:
          title: Description
          description: Snapshot description.
          type: string
          maxLength: 255
          example: "my-description"
    SnapshotUpdateRequest:
      type: object
      properties:
        name:
          title: Name
          description: Snapshot unique name.
          type: string
          maxLength: 100
          example: "my-snapshot-updated"
        description:
          title: Description
          description: Snapshot description.
          type: string
          maxLength: 255
          example: "my-description-updated"
    SnapshotResponse:
      title: Snapshot Response
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
    RestoreSnapshotRequest:
      title: Restore Snapshot Instance Request
      required:
        - name
        - instance_type_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        volume:
          $ref: "#/components/schemas/InstanceVolumeRequest"
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          default: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          default: "04:00:00"
    ClusterRestoreRequest:
      title: Restore Cluster Snapshot Request
      required:
        - name
        - instance_type_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        volume:
          $ref: "#/components/schemas/ClusterVolumeRequest"
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          default: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          default: "04:00:00"
    InstanceTypesResponse:
      title: InstanceTypes Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
    AddressAccess:
      title: Address Access
      type: string
      enum:
        - PRIVATE
        - PUBLIC
      example: PRIVATE
    AddressType:
      title: Address Type
      type: string
      enum:
        - IPv4
        - IPv6
      example: IPv4
    InstancesResponse:
      title: Instances Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/InstanceDetailResponse"
    InstanceStatus:
      title: Instance Status
      type: string
      enum:
        - CREATING
        - ERROR
        - STOPPED
        - REBOOT
        - PENDING
        - RESIZING
        - DELETED
        - ACTIVE
        - STARTING
        - STOPPING
        - BACKING_UP
        - DELETING
        - RESTORING
        - ERROR_RESIZING
        - ERROR_STARTING
        - ERROR_STOPPING
        - ERROR_DELETING
        - MAINTENANCE
        - MAINTENANCE_ERROR
      example: ACTIVE
    AvailabilityZone:
      title: Availability Zone
      type: string
      enum:
        - br-se1-a
        - br-se1-b
        - br-se1-c
        - br-ne1-a
        - br-ne1-b
      example: br-ne1-a
    ClusterStatus:
      title: Cluster Status
      type: string
      enum:
        - ACTIVE
        - ERROR
        - PENDING
        - CREATING
        - DELETING
        - DELETED
        - ERROR_DELETING
        - STARTING
        - STOPPING
        - STOPPED
        - BACKING_UP
        - BALANCING
      example: ACTIVE
    InstanceGeneration:
      title: Instance Generation
      description: Current database instance generation
      type: string
      enum:
        - G0B
        - G1B
        - G2B
        - G3B
        - G4B
        - G5B
        - G6B
        - G7B
        - G8B
        - G9B
        - G10B
        - G1
        - G2
        - G3
        - G4
        - G5
        - G6
      example: G6
    InstanceCreateRequest:
      title: Instance Create Request
      required:
        - name
        - password
        - user
        - volume
        - engine_id
        - instance_type_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        engine_id:
          title: Engine Id
          type: string
          format: uuid
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        deletion_protected:
          title: Deletion Protected
          type: boolean
          default: false
        user:
          title: User
          maxLength: 25
          type: string
        password:
          title: Password
          maxLength: 50
          type: string
        security_groups:
          title: Security Group IDs
          description: Security Group IDs from the Network API to control the database access rules.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        volume:
          $ref: "#/components/schemas/InstanceVolumeRequest"
        parameter_group_id:
          title: Parameter group Id
          type: string
          format: uuid
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          default: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          default: "04:00:00"
        availability_zone:
          $ref: "#/components/schemas/AvailabilityZone"
    ParameterGroupCreateRequest:
      title: ParameterGroupCreateRequest
      required:
        - name
        - engine_id
      type: object
      properties:
        description:
          title: Description
          maxLength: 255
          type: string
          example: Parameter Group for MySQL 8 engine
        engine_id:
          format: uuid
          title: Engine Id
          type: string
        name:
          maxLength: 100
          title: Name
          type: string
          example: my_parameter_group
    ParameterGroupResponse:
      title: ParameterGroupResponse
      required:
        - id
      type: object
      properties:
        id:
          format: uuid
          title: Id
          type: string
    ParameterGroupDetailResponse:
      properties:
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
          example: my_parameter_group
        description:
          title: Description
          example: Parameter Group for MySQL 8 engine
          type: string
        type:
          $ref: '#/components/schemas/ParameterGroupType'
        engine_id:
          format: uuid
          title: Engine Id
          type: string
      required:
        - id
        - name
        - description
        - type
        - engine_id
      title: ParameterGroupDetailResponse
      type: object
    ParameterGroupsResponse:
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          items:
            $ref: "#/components/schemas/ParameterGroupDetailResponse"
          title: Results
          type: array
      required:
        - meta
        - results
      title: ParameterGroupsResponse
      type: object
    ParameterGroupType:
      enum:
        - SYSTEM
        - USER
      title: ParameterGroupType
      type: string
      example: USER
    InstanceVolumeRequest:
      title: Instance Volume Request
      required:
        - size
      type: object
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 10
          maximum: 50000
          example: 30
        type:
          $ref: "#/components/schemas/VolumeTypeRequest"
    ParameterCreateRequest:
      properties:
        name:
          anyOf:
            - $ref: '#/components/schemas/EngineParametersMysql8'
            - $ref: '#/components/schemas/EngineParametersMysql84'
          title: Name
        value:
          anyOf:
            - type: number
            - type: integer
            - type: boolean
            - type: string
          title: Value
      required:
        - name
        - value
      title: ParameterCreateRequest
      type: object
    ParameterResponse:
      properties:
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
      title: ParameterResponse
      type: object
    InstanceVolumeResizeRequest:
      title: Instance Volume Request
      type: object
      required:
        - size
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 10
          maximum: 50000
          example: 30
    InstanceResponse:
      title: Instance Response
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
    InstanceDetailResponse:
      title: Instance Detail Response
      required:
        - id
        - name
        - engine_id
        - instance_type_id
        - parameter_group_id
        - volume
        - addresses
        - status
        - availability_zone
        - generation
        - created_at
        - backup_start_at
        - backup_retention_days
        - apply_parameters_pending
        - deletion_protected
      type: object
      properties:
        id:
          title: Id
          description: Database instance unique identifier.
          type: string
          format: uuid
        name:
          title: Name
          description: Database instance unique name.
          type: string
          maxLength: 100
          example: "my-db-instance"
        engine_id:
          description: Engine unique identifier.
          type: string
          format: uuid
        parameter_group_id:
          description: Parameter group unique identifier.
          type: string
          format: uuid
        port_id:
          description: Port ID used by the Network API to identify the communication port.
          format: uuid
          type: string
        apply_parameters_pending:
          description: Flag that defines whether an instance should be restarted to apply parameters.
          title: Parameter Apply Pending
          type: boolean
        deletion_protected:
          title: Deletion Protected
          type: boolean
        instance_type_id:
          description: Instance Type unique identifier.
          type: string
          format: uuid
        volume:
          $ref: "#/components/schemas/InstanceVolumeResponse"
        addresses:
          title: Addresses
          type: array
          items:
            $ref: "#/components/schemas/InstanceAddress"
        status:
          $ref: "#/components/schemas/InstanceStatus"
        availability_zone:
          $ref: "#/components/schemas/AvailabilityZone"
        generation:
          $ref: "#/components/schemas/InstanceGeneration"
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          example: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          example: "04:00:00"
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Last updated date
          type: string
          format: date-time
        started_at:
          title: Initial setup start date
          type: string
          format: date-time
        finished_at:
          title: Initial setup finish date
          type: string
          format: date-time
        maintenance_scheduled_at:
          title: Maintenance schedule date
          type: string
          format: date-time
        replicas:
          title: Replicas
          type: array
          items:
            $ref: "#/components/schemas/ReplicaDetailResponse"
    InstanceUpdateRequest:
      title: Database Instance Update Request
      type: object
      properties:
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          example: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          example: "04:00:00"
        parameter_group_id:
          title: Parameter group Id
          type: string
          format: uuid
          example: 44ae8773-a21e-4d5e-a38f-b677ccfeb7f8
        deletion_protected:
          title: Deletion Protected
          type: boolean
    EngineStatus:
      title: EngineStatus
      description: An enumeration.
      type: string
      enum:
        - ACTIVE
        - DEPRECATED
        - PREVIEW
    EngineParametersMysql8:
      enum:
        - ACTIVATE_ALL_ROLES_ON_LOGIN
        - AUTOCOMMIT
        - AUTOMATIC_SP_PRIVILEGES
        - BACK_LOG
        - BLOCK_ENCRYPTION_MODE
        - CHARACTER_SET_SERVER
        - COLLATION_SERVER
        - CONNECT_TIMEOUT
        - CTE_MAX_RECURSION_DEPTH
        - DEFAULT_WEEK_FORMAT
        - DIV_PRECISION_INCREMENT
        - END_MARKERS_IN_JSON
        - EQ_RANGE_INDEX_DIVE_LIMIT
        - EVENT_SCHEDULER
        - FT_QUERY_EXPANSION_LIMIT
        - GENERAL_LOG
        - GENERATED_RANDOM_PASSWORD_LENGTH
        - GROUP_CONCAT_MAX_LEN
        - INNODB_BUFFER_POOL_INSTANCES
        - INNODB_FILL_FACTOR
        - INNODB_FT_ENABLE_STOPWORD
        - INNODB_FT_MAX_TOKEN_SIZE
        - INNODB_FT_MIN_TOKEN_SIZE
        - INNODB_FT_NUM_WORD_OPTIMIZE
        - INNODB_FT_RESULT_CACHE_LIMIT
        - INNODB_LOCK_WAIT_TIMEOUT
        - INNODB_LOG_BUFFER_SIZE
        - INNODB_MAX_UNDO_LOG_SIZE
        - INNODB_OPTIMIZE_FULLTEXT_ONLY
        - INNODB_PRINT_ALL_DEADLOCKS
        - INNODB_PRINT_DDL_LOGS
        - INNODB_READ_IO_THREADS
        - INNODB_REDO_LOG_CAPACITY
        - INNODB_ROLLBACK_ON_TIMEOUT
        - INNODB_SEGMENT_RESERVE_FACTOR
        - INNODB_WRITE_IO_THREADS
        - INTERACTIVE_TIMEOUT
        - JOIN_BUFFER_SIZE
        - LC_TIME_NAMES
        - LOCK_WAIT_TIMEOUT
        - LOG_ERROR_VERBOSITY
        - LOG_QUERIES_NOT_USING_INDEXES
        - LOG_SLOW_ADMIN_STATEMENTS
        - LOG_THROTTLE_QUERIES_NOT_USING_INDEXES
        - LONG_QUERY_TIME
        - LOWER_CASE_TABLE_NAMES
        - MAX_ALLOWED_PACKET
        - MAX_CONNECT_ERRORS
        - MAX_CONNECTIONS
        - MAX_EXECUTION_TIME
        - MAX_JOIN_SIZE
        - MAX_POINTS_IN_GEOMETRY
        - MAX_PREPARED_STMT_COUNT
        - MAX_SEEKS_FOR_KEY
        - MAX_SORT_LENGTH
        - MAX_SP_RECURSION_DEPTH
        - MAX_USER_CONNECTIONS
        - MAX_WRITE_LOCK_COUNT
        - MIN_EXAMINED_ROW_LIMIT
        - NET_READ_TIMEOUT
        - NET_RETRY_COUNT
        - NET_WRITE_TIMEOUT
        - NGRAM_TOKEN_SIZE
        - PARSER_MAX_MEM_SIZE
        - PASSWORD_REQUIRE_CURRENT
        - PASSWORD_REUSE_INTERVAL
        - QUERY_ALLOC_BLOCK_SIZE
        - REGEXP_STACK_LIMIT
        - REGEXP_TIME_LIMIT
        - SHOW_CREATE_TABLE_VERBOSITY
        - SKIP_NAME_RESOLVE
        - SKIP_SHOW_DATABASE
        - SLOW_LAUNCH_TIME
        - SLOW_QUERY_LOG
        - SQL_MODE
        - STORED_PROGRAM_CACHE
        - STORED_PROGRAM_DEFINITION_CACHE
        - TABLE_DEFINITION_CACHE
        - TABLE_OPEN_CACHE
        - TABLE_OPEN_CACHE_INSTANCES
        - TABLESPACE_DEFINITION_CACHE
        - TEMPTABLE_MAX_MMAP
        - TEMPTABLE_MAX_RAM
        - TMP_TABLE_SIZE
        - TRANSACTION_ISOLATION
        - UPDATABLE_VIEWS_WITH_LIMIT
        - WAIT_TIMEOUT
        - WINDOWING_USE_HIGH_PRECISION
      title: EngineParametersMysql8
      type: string
      example: LOWER_CASE_TABLE_NAMES
    EngineParametersMysql84:
      enum:
        - ACTIVATE_ALL_ROLES_ON_LOGIN
        - AUTOCOMMIT
        - AUTOMATIC_SP_PRIVILEGES
        - BACK_LOG
        - BLOCK_ENCRYPTION_MODE
        - CHARACTER_SET_SERVER
        - COLLATION_SERVER
        - CONNECT_TIMEOUT
        - CTE_MAX_RECURSION_DEPTH
        - DEFAULT_WEEK_FORMAT
        - DIV_PRECISION_INCREMENT
        - END_MARKERS_IN_JSON
        - EQ_RANGE_INDEX_DIVE_LIMIT
        - EVENT_SCHEDULER
        - FT_QUERY_EXPANSION_LIMIT
        - GENERAL_LOG
        - GENERATED_RANDOM_PASSWORD_LENGTH
        - GROUP_CONCAT_MAX_LEN
        - INNODB_BUFFER_POOL_INSTANCES
        - INNODB_FILL_FACTOR
        - INNODB_FT_ENABLE_STOPWORD
        - INNODB_FT_MAX_TOKEN_SIZE
        - INNODB_FT_MIN_TOKEN_SIZE
        - INNODB_FT_NUM_WORD_OPTIMIZE
        - INNODB_FT_RESULT_CACHE_LIMIT
        - INNODB_LOCK_WAIT_TIMEOUT
        - INNODB_LOG_BUFFER_SIZE
        - INNODB_MAX_UNDO_LOG_SIZE
        - INNODB_OPTIMIZE_FULLTEXT_ONLY
        - INNODB_PRINT_ALL_DEADLOCKS
        - INNODB_PRINT_DDL_LOGS
        - INNODB_READ_IO_THREADS
        - INNODB_REDO_LOG_CAPACITY
        - INNODB_ROLLBACK_ON_TIMEOUT
        - INNODB_SEGMENT_RESERVE_FACTOR
        - INNODB_WRITE_IO_THREADS
        - INTERACTIVE_TIMEOUT
        - JOIN_BUFFER_SIZE
        - LC_TIME_NAMES
        - LOCK_WAIT_TIMEOUT
        - LOG_ERROR_VERBOSITY
        - LOG_QUERIES_NOT_USING_INDEXES
        - LOG_SLOW_ADMIN_STATEMENTS
        - LOG_THROTTLE_QUERIES_NOT_USING_INDEXES
        - LONG_QUERY_TIME
        - LOWER_CASE_TABLE_NAMES
        - MAX_ALLOWED_PACKET
        - MAX_CONNECT_ERRORS
        - MAX_CONNECTIONS
        - MAX_EXECUTION_TIME
        - MAX_JOIN_SIZE
        - MAX_POINTS_IN_GEOMETRY
        - MAX_PREPARED_STMT_COUNT
        - MAX_SEEKS_FOR_KEY
        - MAX_SORT_LENGTH
        - MAX_SP_RECURSION_DEPTH
        - MAX_USER_CONNECTIONS
        - MAX_WRITE_LOCK_COUNT
        - MIN_EXAMINED_ROW_LIMIT
        - NET_READ_TIMEOUT
        - NET_RETRY_COUNT
        - NET_WRITE_TIMEOUT
        - NGRAM_TOKEN_SIZE
        - PARSER_MAX_MEM_SIZE
        - PASSWORD_REQUIRE_CURRENT
        - PASSWORD_REUSE_INTERVAL
        - QUERY_ALLOC_BLOCK_SIZE
        - REGEXP_STACK_LIMIT
        - REGEXP_TIME_LIMIT
        - SHOW_CREATE_TABLE_VERBOSITY
        - SKIP_NAME_RESOLVE
        - SKIP_SHOW_DATABASE
        - SLOW_LAUNCH_TIME
        - SLOW_QUERY_LOG
        - SQL_MODE
        - STORED_PROGRAM_CACHE
        - STORED_PROGRAM_DEFINITION_CACHE
        - TABLE_DEFINITION_CACHE
        - TABLE_OPEN_CACHE
        - TABLE_OPEN_CACHE_INSTANCES
        - TABLESPACE_DEFINITION_CACHE
        - TEMPTABLE_MAX_MMAP
        - TEMPTABLE_MAX_RAM
        - TMP_TABLE_SIZE
        - TRANSACTION_ISOLATION
        - UPDATABLE_VIEWS_WITH_LIMIT
        - WAIT_TIMEOUT
        - WINDOWING_USE_HIGH_PRECISION
      title: EngineParametersMysql84
      type: string
      example: LOWER_CASE_TABLE_NAMES
    EngineParameterResponse:
      properties:
        allowed_values:
          title: Allowed Values
          items:
            anyOf:
              - type: number
              - type: integer
              - type: boolean
              - type: string
          example: [0, 1]
          type: array
        data_type:
          anyOf:
            - type: number
            - type: integer
            - type: boolean
            - type: string
          title: Data Type
          example: integer
        default_value:
          anyOf:
            - type: number
            - type: integer
            - type: boolean
            - type: string
          title: Default Value
          example: 0
        description:
          title: Description
          type: string
        dynamic:
          title: Dynamic
          type: boolean
          example: false
        engine_id:
          format: uuid
          title: Engine Id
          type: string
        modifiable:
          title: Modifiable
          type: boolean
          example: false
        name:
          anyOf:
            - $ref: '#/components/schemas/EngineParametersMysql8'
            - $ref: '#/components/schemas/EngineParametersMysql84'
          title: Name
        parameter_name:
          title: Parameter Name
          type: string
          example: lower_case_table_names
        ranged_value:
          title: Ranged Value
          type: boolean
          example: false
      required:
        - name
        - parameter_name
        - default_value
        - allowed_values
        - ranged_value
        - data_type
        - description
        - dynamic
        - modifiable
        - engine_id
      title: EngineParameterResponse
      type: object
    EngineParametersResponse:
      properties:
        meta:
          $ref: '#/components/schemas/MetaResponse'
        results:
          items:
            $ref: '#/components/schemas/EngineParameterResponse'
          title: Results
          type: array
      required:
        - meta
        - results
      title: EngineParametersResponse
      type: object
    ParameterGroupUpdateRequest:
      properties:
        name:
          maxLength: 100
          title: Name
          type: string
          example: production_parameter_group
        description:
          title: Description
          maxLength: 255
          type: string
          example: Production parameter group for MySQL 8 engine
      title: ParameterGroupUpdateRequest
      type: object
    ParameterUpdateRequest:
      properties:
        value:
          anyOf:
            - type: number
            - type: integer
            - type: boolean
            - type: string
          title: Value
      required:
        - value
      title: ParameterUpdateRequest
      type: object
    ParameterDetailResponse:
      properties:
        id:
          format: uuid
          title: Id
          type: string
          example: 44ae8773-a21e-4d5e-a38f-b677ccfeb7f8
        name:
          anyOf:
            - $ref: '#/components/schemas/EngineParametersMysql8'
            - $ref: '#/components/schemas/EngineParametersMysql84'
          title: Name
        value:
          anyOf:
            - type: number
            - type: integer
            - type: boolean
            - type: string
          title: Value
          example: 1
      required:
        - id
        - name
        - value
      title: ParameterDetailResponse
      type: object
    ParametersResponse:
      properties:
        meta:
          $ref: '#/components/schemas/MetaResponse'
        results:
          items:
            $ref: '#/components/schemas/ParameterDetailResponse'
          title: Results
          type: array
      required:
        - meta
        - results
      title: ParametersResponse
      type: object
    EnginesResponse:
      title: Engines Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/EngineResponse"
    EngineResponse:
      title: Engine Response
      required:
        - name
        - id
        - version
        - status
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          description: Engine unique identifier.
        name:
          title: Name
          type: string
          example: mysql
          description: Database name.
        version:
          title: Version
          type: string
          description: Database engine version.
          example: "5.7"
        status:
          $ref: "#/components/schemas/EngineStatus"
    InstanceTypeStatus:
      title: Instance Type Status
      description: An enumeration.
      type: string
      enum:
        - ACTIVE
        - DEPRECATED
    InstanceTypeCompatibleProducts:
      title: Instance Type Compatible per product
      description: An enumeration.
      type: string
      enum:
        - CLUSTER
        - SINGLE_INSTANCE
        - SINGLE_INSTANCE_REPLICA
    InstanceExpand:
      title: Instance Expand
      description: An enumeration.
      type: string
      enum:
        - replicas
    VolumeTypeRequest:
      title: Volume Type
      description: |
        The type of the volume.
        Note: Preview volume types CLOUD_NVME30K, CLOUD_NVME40K, and CLOUD_NVME50K require tenant permission.
      type: string
      enum:
        - CLOUD_NVME15K
        - CLOUD_NVME20K
        - CLOUD_NVME30K
        - CLOUD_NVME40K
        - CLOUD_NVME50K
      default: CLOUD_NVME15K
    VolumeTypeResponse:
      title: Volume Type
      description: "The type of the volume. \nNote: Preview volume types CLOUD_NVME30K, CLOUD_NVME40K, and CLOUD_NVME50K require tenant permission.\n"
      type: string
      enum:
        - CLOUD_HDD
        - CLOUD_NVME
        - CLOUD_NVME_15K
        - CLOUD_NVME15K
        - CLOUD_NVME20K
        - CLOUD_NVME30K
        - CLOUD_NVME40K
        - CLOUD_NVME50K
    ReplicasResponse:
      title: Replicas Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/MetaResponse"
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/ReplicaDetailResponse"
    ReplicaDetailResponse:
      title: Replica Detail Response
      required:
        - addresses
        - created_at
        - engine_id
        - instance_type_id
        - parameter_group_id
        - volume
        - id
        - name
        - source_id
        - status
        - availability_zone
        - generation
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        source_id:
          title: Source Id
          type: string
          format: uuid
        name:
          title: Name
          type: string
        engine_id:
          description: Engine unique identifier.
          type: string
          format: uuid
        parameter_group_id:
          description: Parameter group unique identifier.
          type: string
          format: uuid
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        volume:
          $ref: "#/components/schemas/VolumeResponse"
        addresses:
          title: Addresses
          type: array
          items:
            $ref: "#/components/schemas/ReplicaAddressResponse"
        status:
          $ref: "#/components/schemas/InstanceStatus"
        availability_zone:
          $ref: "#/components/schemas/AvailabilityZone"
        generation:
          $ref: "#/components/schemas/InstanceGeneration"
        created_at:
          title: Created At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
        started_at:
          title: Initial setup start date
          type: string
          format: date-time
        finished_at:
          title: Initial setup finish date
          type: string
          format: date-time
        maintenance_scheduled_at:
          title: Maintenance schedule date
          type: string
          format: date-time
        port_id:
          description: Port ID used by the Network API to identify the communication port.
          format: uuid
          type: string
    ReplicaAddressResponse:
      title: Replica Address Response
      required:
        - access
      type: object
      properties:
        access:
          $ref: "#/components/schemas/AddressAccess"
        type:
          $ref: "#/components/schemas/AddressType"
        address:
          title: Address
          type: string
    ReplicaCreateRequest:
      title: Replica Create Request
      required:
        - name
        - source_id
      type: object
      properties:
        source_id:
          title: Source Id
          type: string
          format: uuid
        name:
          title: Name
          maxLength: 255
          type: string
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        security_groups:
          title: Security Group IDs
          description: Security Group IDs from the Network API to control the database access rules.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
    ReplicaResizeRequest:
      title: Replica Resize Request
      type: object
      properties:
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
    ReplicaResponse:
      title: Replica Response
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
    VolumeResponse:
      type: object
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 10
          maximum: 50000
          example: 30
        type:
          $ref: "#/components/schemas/VolumeTypeResponse"
      required:
        - size
        - type
    InstanceVolumeResponse:
      type: object
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 10
          maximum: 50000
          example: 30
        type:
          $ref: "#/components/schemas/VolumeTypeResponse"
        encrypted:
          type: boolean
      required:
        - size
        - type
        - encrypted
    InstanceAddress:
      required:
        - access
      type: object
      properties:
        access:
          title: Access
          description: Determine if the IP can be accessed from the internet.
          type: string
          enum:
            - PRIVATE
            - PUBLIC
        type:
          title: Type
          type: string
          enum:
            - IPv4
            - IPv6
        address:
          title: InstanceAddress
          type: string
          example: "172.53.10.82"
    LoadBalancerAddress:
      required:
        - access
        - purpose
      type: object
      properties:
        access:
          title: Access
          description: Determine if the IP can be accessed from the internet.
          type: string
          enum:
            - PRIVATE
            - PUBLIC
        type:
          title: Type
          type: string
          enum:
            - IPv4
            - IPv6
        address:
          title: LoadBalancerAddress
          type: string
          example: "172.53.10.82"
        port:
          title: "Port"
          type: string
          default: "3306"
          example: "3306"
        purpose:
          title: Port Purpose
          type: string
          enum:
            - READ_WRITE
            - READONLY
            - METRICS
            - LOGS
    InstanceType:
      type: object
      required:
        - id
        - name
        - label
        - vcpu
        - ram
        - family_description
        - family_slug
        - size
        - compatible_product
        - engine_id
        - status
      properties:
        id:
          description: Instance Type unique identifier.
          type: string
          format: uuid
        name:
          description: Instance Type name.
          type: string
          example: i0-c1-r4-d10
        label:
          description: Instance Type label.
          type: string
          example: cloud-dbaas-bs1.small
        vcpu:
          description: Number of vCPUs.
          type: string
          example: "1"
        ram:
          description: RAM Amount.
          type: string
          example: "4 GB"
        family_description:
          description: Instance Type Family Description.
          type: string
          example: Basic
        family_slug:
          description: Instance Type Family SLUG.
          type: string
          example: bs1
        size:
          description: Instance Type Size Description.
          type: string
          example: Small
        compatible_product:
          description: Compatible Instance Type Product.
          type: string
          example: SINGLE_INSTANCE
        engine_id:
          format: uuid
          title: Engine Id
          type: string
        status:
          $ref: "#/components/schemas/InstanceTypeStatus"
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        slug:
          type: string
          example: "bad_request"
        message:
          type: string
          example: "Bad Request"
        details:
          type: object
      required:
        - slug
        - message
    InstanceResizeRequest:
      title: Instance Resize Request
      type: object
      properties:
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        volume:
          $ref: "#/components/schemas/InstanceVolumeResizeRequest"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Enter the access token"
    OAuth2PreProd:
      flows:
        authorizationCode:
          authorizationUrl: https://idpa-api-preprod.luizalabs.com/oauth/authorize
          tokenUrl: https://idpa-api-preprod.luizalabs.com/oauth/token
          scopes:
            dbaas.read: Read DBaaS resources
            dbaas.write: Write DBaaS resources
      type: oauth2
      description: OAuth2 via IDPA
    OAuth2Prod:
      flows:
        authorizationCode:
          authorizationUrl: https://autoseg-idp.luizalabs.com/oauth/authorize
          tokenUrl: https://autoseg-idp.luizalabs.com/oauth/token
          scopes:
            dbaas.read: Read DBaaS resources
            dbaas.write: Write DBaaS resources
      type: oauth2
      description: OAuth2 via IDPA.
  responses:
    BadRequest:
      description: Bad Request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "bad_request"
            message: "Bad request"
    NotFound:
      description: Not Found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "not_found"
            message: "Not Found"
    RequiredField:
      description: Required Field.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "bad_request"
            message: "Bad request"
    Unauthorized:
      description: Access Unauthorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "unauthorized"
            message: "Access unauthorized"
    Forbidden:
      description: Access Forbidden.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "forbidden"
            message: "Access Forbidden"
    UnprocessableEntity:
      description: Unprocessable Entity.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "unprocessable_entity"
            message: "Unprocessable entity"
    TooManyRequests:
      description: Too Many Requests.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "too_many_requests"
            message: "Too Many Requests"
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "internal_server_error"
            message: "Internal server error"
servers:
  - url: https://api-dbaas.dev-qa.br-ne-1.jaxyendy.com
  - url: https://api-dbaas.team-integration.br-ne-1.jaxyendy.com
  - url: https://api-dbaas.pre-prod.br-ne-1.jaxyendy.com
  - url: https://api-dbaas.br-ne-1.jaxyendy.com
  - url: https://api.magalu.cloud/br-ne-1/database
  - url: https://api-dbaas.dev-qa.br-se-1.jaxyendy.com
  - url: https://api-dbaas.team-integration.br-se-1.jaxyendy.com
  - url: https://api-dbaas.pre-prod.se1.br.jaxyendy.com
  - url: https://api-dbaas.prod.se1.br.jaxyendy.com
  - url: https://api.magalu.cloud/br-se1/database
