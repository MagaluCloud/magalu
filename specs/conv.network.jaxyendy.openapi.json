{
    "openapi": "3.0.3",
    "info": {
        "title": "VPC API Product",
        "description": "VPC Api Product",
        "contact": {
            "name": "IaaS Products",
            "url": "https://github.com/luizalabs"
        },
        "version": "1.173.0"
    },
    "paths": {
        "/v0/ports": {
            "get": {
                "tags": [
                    "ports"
                ],
                "summary": "Details of a Port list",
                "description": "Return a detailed list of ports from the provided tenant_id",
                "operationId": "detail_ports_v0_ports_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "port_id_list",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "title": "Port Id List",
                            "default": []
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/vpc_api_product__vpc__models__port__PortResponse"
                                    },
                                    "title": "Response Detail Ports V0 Ports Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_port_list",
                    "product-name": "network"
                }
            }
        },
        "/v0/ports/{port_id}": {
            "delete": {
                "tags": [
                    "ports"
                ],
                "summary": "Delete Port",
                "description": "Delete a port from the provided tenant_id",
                "operationId": "delete_port_v0_ports__port_id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "port_id",
                            "description": "ID of the Port to delete"
                        },
                        "description": "ID of the Port to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_port_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "ports"
                ],
                "summary": "Port Details",
                "description": "Return a port details from the provided tenant_id",
                "operationId": "detail_port_v0_ports__port_id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Port Id"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vpc_api_product__vpc__models__port__PortResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_port_get",
                    "product-name": "network"
                }
            },
            "patch": {
                "tags": [
                    "ports"
                ],
                "summary": "Update a Port",
                "description": "Updates a Port from the provided tenant_id.\u003cbr\u003e\u003cbr\u003e**ip_spoofing_guard**: Activates or deactivates the IP Spoofing protection.\u003cbr\u003e\u003cbr\u003e\u003cfont color=\"red\"\u003e**WARNING: Disabling IP Spoofing protection can have serious security consequences. It allows attackers to bypass security controls using fake source IP addresses. Only disable this if necessary, and you understand the involved risks.**\u003c/font\u003e",
                "operationId": "update_port_v0_ports__port_id__patch",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "port_id",
                            "description": "ID of the Port"
                        },
                        "description": "ID of the Port"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PortPatchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_port_update",
                    "product-name": "network"
                }
            }
        },
        "/v0/ports/{port_id}/attach/{security_group_id}": {
            "post": {
                "tags": [
                    "ports"
                ],
                "summary": "Attach Security Group",
                "description": "Attach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
                "operationId": "attach_security_group_v0_ports__port_id__attach__security_group_id__post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "port_id",
                            "description": "ID of the Port to attach security group"
                        },
                        "description": "ID of the Port to attach security group"
                    },
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "security_group_id",
                            "description": "ID of the Security Group to attach"
                        },
                        "description": "ID of the Security Group to attach"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_port_attach_action",
                    "product-name": "network"
                }
            }
        },
        "/v0/ports/{port_id}/detach/{security_group_id}": {
            "post": {
                "tags": [
                    "ports"
                ],
                "summary": "Detach Security Group",
                "description": "Detach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
                "operationId": "detach_security_group_v0_ports__port_id__detach__security_group_id__post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "port_id",
                            "description": "ID of the Port to detach security group"
                        },
                        "description": "ID of the Port to detach security group"
                    },
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "security_group_id",
                            "description": "ID of the Security Group to detach"
                        },
                        "description": "ID of the Security Group to detach"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_port_attach_action",
                    "product-name": "network"
                }
            }
        },
        "/v0/public_ips": {
            "get": {
                "tags": [
                    "public_ips"
                ],
                "summary": "Tenant's public IP list",
                "description": "Return a tenant's public ip list",
                "operationId": "get_tenant_public_ip_list_v0_public_ips_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpsList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_fip_list",
                    "product-name": "network"
                }
            }
        },
        "/v0/public_ips/{public_ip_id}": {
            "delete": {
                "tags": [
                    "public_ips"
                ],
                "summary": "Delete Public IP",
                "description": "Delete a Public IP from the provided tenant_id",
                "operationId": "delete_public_ip_v0_public_ips__public_ip_id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to delete"
                        },
                        "description": "Id of the Public IP to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_fip_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "public_ips"
                ],
                "summary": "Public IP Details",
                "description": "Return a Public IP details",
                "operationId": "detail_public_ip_v0_public_ips__public_ip_id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to retrieve"
                        },
                        "description": "Id of the Public IP to retrieve"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpDb"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_fip_get",
                    "product-name": "network"
                }
            }
        },
        "/v0/public_ips/{public_ip_id}/attach/{port_id}": {
            "post": {
                "tags": [
                    "public_ips"
                ],
                "summary": "Attach Public IP",
                "description": "Attach a Public IP to a Port",
                "operationId": "attach_public_ip_v0_public_ips__public_ip_id__attach__port_id__post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to attach port to"
                        },
                        "description": "Id of the Public IP to attach port to"
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Port ID",
                            "description": "Id of the Port to attach the Public IP"
                        },
                        "description": "Id of the Port to attach the Public IP"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_fip_attach_action",
                    "product-name": "network"
                }
            }
        },
        "/v0/public_ips/{public_ip_id}/detach/{port_id}": {
            "post": {
                "tags": [
                    "public_ips"
                ],
                "summary": "Detach Public IP",
                "description": "Detach a Public IP to a Port",
                "operationId": "detach_public_ip_v0_public_ips__public_ip_id__detach__port_id__post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to detach port to"
                        },
                        "description": "Id of the Public IP to detach port to"
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Port ID",
                            "description": "Id of the Port to detach the Public IP"
                        },
                        "description": "Id of the Port to detach the Public IP"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_fip_attach_action",
                    "product-name": "network"
                }
            }
        },
        "/v0/rules/{rule_id}": {
            "delete": {
                "tags": [
                    "rules"
                ],
                "summary": "Delete a Rule",
                "description": "Delete a rule from the provided tenant_id",
                "operationId": "delete_rule_v0_rules__rule_id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Rule ID",
                            "description": "Id of the Rule"
                        },
                        "description": "Id of the Rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_rule_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "rules"
                ],
                "summary": "Rule Details",
                "description": "Return a rule details",
                "operationId": "detail_rule_v0_rules__rule_id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Rule ID",
                            "description": "Id of the Rule"
                        },
                        "description": "Id of the Rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_rule_get",
                    "product-name": "network"
                }
            }
        },
        "/v0/security_groups": {
            "get": {
                "tags": [
                    "security_groups"
                ],
                "summary": "List Security Groups by Tenant",
                "description": "Returns a list of security groups for a provided tenant_id",
                "operationId": "list_vpc_security_groups_by_tenant_v0_security_groups_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupListEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_sg_list",
                    "product-name": "network"
                }
            },
            "post": {
                "tags": [
                    "security_groups"
                ],
                "summary": "Create Security Group",
                "description": "Create a Security Group",
                "operationId": "create_security_group_v0_security_groups_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "validate_quota",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "validateQuota",
                            "description": "Validate the quota before creating Security Group",
                            "default": true
                        },
                        "description": "Validate the quota before creating Security Group"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "default": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "default": 120
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "skip_default_rules",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Skip Default Rules",
                            "description": "Skip creation of default security group rules",
                            "default": false
                        },
                        "description": "Skip creation of default security group rules"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroupCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_sg_create",
                    "product-name": "network"
                }
            }
        },
        "/v0/security_groups/{security_group_id}": {
            "delete": {
                "tags": [
                    "security_groups"
                ],
                "summary": "Delete a security group",
                "description": "Delete a security group from the provided tenant_id",
                "operationId": "delete_security_group_v0_security_groups__security_group_id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Security Group ID",
                            "description": "Id of the security group to delete"
                        },
                        "description": "Id of the security group to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_sg_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "security_groups"
                ],
                "summary": "Security Group Details",
                "description": "Return a security group details",
                "operationId": "detail_security_group_v0_security_groups__security_group_id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Security Group ID",
                            "description": "Id of the security group to detail"
                        },
                        "description": "Id of the security group to detail"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupDetailEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_sg_get",
                    "product-name": "network"
                }
            }
        },
        "/v0/security_groups/{security_group_id}/rules": {
            "get": {
                "tags": [
                    "security_groups"
                ],
                "summary": "List Rules",
                "description": "Returns a list of rules for a provided security_group_id",
                "operationId": "list_security_group_rules_v0_security_groups__security_group_id__rules_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Security Group ID",
                            "description": "Id of the Security Group"
                        },
                        "description": "Id of the Security Group"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RulesList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_sg_rule_list",
                    "product-name": "network"
                }
            },
            "post": {
                "tags": [
                    "security_groups"
                ],
                "summary": "Create Rule",
                "description": "Create a Rule async, returning its ID. To monitor the creation progress, please check the status in the service message or implement polling.Either a remote_ip_prefix or a remote_group_id can be specified.With remote_ip_prefix, all IPs that match the criteria will be allowed.With remote_group_id, only the specified security group is allowed to communicatefollowing the specified protocol, direction and port_range_min/max",
                "operationId": "create_rule_v0_security_groups__security_group_id__rules_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Security Group ID",
                            "description": "Id of the Security Group"
                        },
                        "description": "Id of the Security Group"
                    },
                    {
                        "name": "validate_quota",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "validateQuota",
                            "description": "Validate the quota before creating Rule",
                            "default": true
                        },
                        "description": "Validate the quota before creating Rule"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "default": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "default": 120
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RuleCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_sg_rule_create",
                    "product-name": "network"
                }
            }
        },
        "/v0/subnetpools": {
            "get": {
                "tags": [
                    "subnetpools"
                ],
                "summary": "List Subnet Pools by Tenant",
                "description": "Returns a list of Subnet Pools for the current tenant's project",
                "operationId": "list_subnetpools_v0_subnetpools_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "_offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Items Offset",
                            "description": "Start item for pagination",
                            "default": 0
                        },
                        "description": "Start item for pagination"
                    },
                    {
                        "name": "_limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Pagination",
                            "minimum": 1,
                            "description": "Number of items per page",
                            "default": 20
                        },
                        "description": "Number of items per page"
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": " Sort",
                            "description": "Name of the field wich the list must be ordered by ending with :asc or :desc",
                            "default": "created_at:desc"
                        },
                        "description": "Name of the field wich the list must be ordered by ending with :asc or :desc",
                        "examples": {
                            "example_created_at_desc": {
                                "summary": "created_at:desc",
                                "value": "created_at:desc"
                            },
                            "example_created_at_asc": {
                                "summary": "created_at:asc",
                                "value": "created_at:asc"
                            }
                        }
                    },
                    {
                        "name": "_az_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": " Az Id",
                            "default": "a"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetPoolsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnetpool_list",
                    "product-name": "network"
                }
            },
            "post": {
                "tags": [
                    "subnetpools"
                ],
                "summary": "Create a Subnet Pool in a tenant",
                "description": "Create a Subnet Pool",
                "operationId": "create_subnetpool_v0_subnetpools_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubnetPoolRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetPoolPostResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnetpool_create",
                    "product-name": "network"
                }
            }
        },
        "/v0/subnetpools/{subnetpool_id}": {
            "delete": {
                "tags": [
                    "subnetpools"
                ],
                "summary": "Delete Subnet Pool by ID",
                "description": "Delete one Subnet Pool by ID",
                "operationId": "delete_subnetpool_v0_subnetpools__subnetpool_id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "subnetpool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "subnetpoolId",
                            "description": "Id of the Subnet Pool to delete"
                        },
                        "description": "Id of the Subnet Pool to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnetpool_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "subnetpools"
                ],
                "summary": "Get Subnet Pool by ID",
                "description": "Get details of a specific Subnet Pool",
                "operationId": "get_subnetpool_v0_subnetpools__subnetpool_id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "subnetpool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "subnetpoolId",
                            "description": "Id of the Subnet Pool to get details"
                        },
                        "description": "Id of the Subnet Pool to get details"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetPoolDetailsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnetpool_get",
                    "product-name": "network"
                }
            }
        },
        "/v0/subnetpools/{subnetpool_id}/book_cidr": {
            "post": {
                "tags": [
                    "subnetpools"
                ],
                "summary": "Book Subnetpool",
                "description": "Booking a CIDR range from a subnetpool",
                "operationId": "book_cidr_v0_subnetpools__subnetpool_id__book_cidr_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "subnetpool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "subnetpoolId",
                            "description": "Id of the Subnet Pool to get details"
                        },
                        "description": "Id of the Subnet Pool to get details"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookCidrRequest"
                            },
                            "examples": {
                                "example_cidr": {
                                    "summary": "Example with CIDR",
                                    "value": {
                                        "cidr": "172.26.0.0/16"
                                    }
                                },
                                "example_mask": {
                                    "summary": "Example with Mask",
                                    "value": {
                                        "mask": 26
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookCidrResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnetpool_book_action",
                    "product-name": "network"
                }
            }
        },
        "/v0/subnetpools/{subnetpool_id}/unbook_cidr": {
            "post": {
                "tags": [
                    "subnetpools"
                ],
                "summary": "Unbook Subnetpool",
                "description": "Unbooking a CIDR range from a subnetpool",
                "operationId": "unbook_cidr_v0_subnetpools__subnetpool_id__unbook_cidr_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "subnetpool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "subnetpoolId",
                            "description": "Id of the Subnet Pool to get details"
                        },
                        "description": "Id of the Subnet Pool to get details"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnbookCidrRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnetpool_book_action",
                    "product-name": "network"
                }
            }
        },
        "/v0/subnets/{subnet_id}": {
            "delete": {
                "tags": [
                    "subnets"
                ],
                "summary": "Delete a Subnet",
                "description": "Delete a subnet from the provided tenant_id",
                "operationId": "delete_subnet_v0_subnets__subnet_id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "subnet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Subnet Id",
                            "description": "Id of the Subnet to delete"
                        },
                        "description": "Id of the Subnet to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnet_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "subnets"
                ],
                "summary": "Subnet Details",
                "description": "Returns a subnet details",
                "operationId": "detail_subnet_v0_subnets__subnet_id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "subnet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Subnet Id",
                            "description": "Id of the Subnet to detail"
                        },
                        "description": "Id of the Subnet to detail"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetResponseDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnet_get",
                    "product-name": "network"
                }
            },
            "patch": {
                "tags": [
                    "subnets"
                ],
                "summary": "Update Subnet",
                "description": "Update a subnet from the provided tenant_id",
                "operationId": "update_subnet_v0_subnets__subnet_id__patch",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "subnet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Subnet Id",
                            "description": "Id of the Subnet to update"
                        },
                        "description": "Id of the Subnet to update"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubnetPatchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetResponseId"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_subnet_update",
                    "product-name": "network"
                }
            }
        },
        "/v0/vpcs": {
            "get": {
                "tags": [
                    "vpcs"
                ],
                "summary": "List VPC",
                "description": "Returns a list of VPCs for a provided tenant_id",
                "operationId": "list_vpcs_v0_vpcs_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResponseList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_list",
                    "product-name": "network"
                }
            }
        },
        "/v0/vpcs/{id}": {
            "delete": {
                "tags": [
                    "vpcs"
                ],
                "summary": "Delete VPC",
                "description": "Delete a VPC from the provided tenant_id",
                "operationId": "delete_vpc_v0_vpcs__id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "VPC Id",
                            "description": "ID of the VPC to delete"
                        },
                        "description": "ID of the VPC to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "vpcs"
                ],
                "summary": "VPC Details",
                "description": "Return a VPC details",
                "operationId": "detail_vpc_v0_vpcs__id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "VPC Id",
                            "description": "ID of the VPC to detail"
                        },
                        "description": "ID of the VPC to detail"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_get",
                    "product-name": "network"
                }
            }
        },
        "/v0/vpcs/{vpc_id}/ports": {
            "get": {
                "tags": [
                    "vpcs"
                ],
                "summary": "List Ports",
                "description": "Returns a list of ports for a provided vpc_id and x-tenant-id. The list will be paginated, it means you can easily find what you need just setting the page number(_offset) and the quantity of items per page(_limit). The level of detail can also be set",
                "operationId": "list_vpc_ports_v0_vpcs__vpc_id__ports_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "vpc_id",
                            "description": "ID of VPC to list ports"
                        },
                        "description": "ID of VPC to list ports"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Detailed",
                            "default": true
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "title": "Name of the port to list",
                            "description": "Filter ports results with name"
                        },
                        "description": "Filter ports results with name"
                    },
                    {
                        "name": "_offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Page Number",
                            "minimum": 1,
                            "description": "Page Number",
                            "default": 1
                        },
                        "description": "Page Number"
                    },
                    {
                        "name": "_limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Items Per Page",
                            "minimum": 1,
                            "description": "Items Per Page",
                            "default": 10
                        },
                        "description": "Items Per Page"
                    },
                    {
                        "name": "port_id_list",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "title": "Port Id List",
                            "default": []
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/PortsListSimplified"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PortsList"
                                        }
                                    ],
                                    "title": "Response List Vpc Ports V0 Vpcs  Vpc Id  Ports Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_port_list",
                    "product-name": "network"
                }
            },
            "post": {
                "tags": [
                    "vpcs"
                ],
                "summary": "Create Port",
                "description": "Create a Port with provided vpc_id and x-tenant-id. You can provide a list of security_groups_id or subnets",
                "operationId": "create_port_v0_vpcs__vpc_id__ports_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "vpc_id",
                            "description": "ID of the VPC to create port"
                        },
                        "description": "ID of the VPC to create port"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "title": "X-Zone",
                            "description": "Zone"
                        },
                        "description": "Zone"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PortCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_port_create",
                    "product-name": "network"
                }
            }
        },
        "/v0/vpcs/{vpc_id}/public_ips": {
            "get": {
                "tags": [
                    "vpcs"
                ],
                "summary": "List Public IPs",
                "description": "Returns a list of Public IPs for a provided vpc_id",
                "operationId": "list_vpc_public_ips_v0_vpcs__vpc_id__public_ips_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Vpc ID",
                            "description": "Id of the VPC to list the Public IPs in"
                        },
                        "description": "Id of the VPC to list the Public IPs in"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpsList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_fip_list",
                    "product-name": "network"
                }
            },
            "post": {
                "tags": [
                    "vpcs"
                ],
                "summary": "Create Public IP",
                "description": "Create async Public IP in a VPC with provided vpc_id and x_tenant_id",
                "operationId": "create_public_ip_v0_vpcs__vpc_id__public_ips_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Vpc ID",
                            "description": "Id of the VPC to create the Public IP in"
                        },
                        "description": "Id of the VPC to create the Public IP in"
                    },
                    {
                        "name": "validate_quota",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "validateQuota",
                            "description": "Validate the quota before creating the Public IP",
                            "default": true
                        },
                        "description": "Validate the quota before creating the Public IP"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "default": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "default": 120
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicIpCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_fip_create",
                    "product-name": "network"
                }
            }
        },
        "/v0/vpcs/{vpc_id}/subnets": {
            "get": {
                "tags": [
                    "vpcs"
                ],
                "summary": "List Subnets",
                "description": "Returns a list of subnets for a provided vpc_id",
                "operationId": "list_subnets_from_vpc_v0_vpcs__vpc_id__subnets_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Vpc Id",
                            "description": "Id of the VPC to list Subnets"
                        },
                        "description": "Id of the VPC to list Subnets"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_subnet_list",
                    "product-name": "network"
                }
            },
            "post": {
                "tags": [
                    "vpcs"
                ],
                "summary": "Create Subnet",
                "description": "Create a Subnet",
                "operationId": "create_subnet_v0_vpcs__vpc_id__subnets_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Vpc Id",
                            "description": "Id of the VPC to create Subnet"
                        },
                        "description": "Id of the VPC to create Subnet"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "title": "X-Zone",
                            "description": "Zone"
                        },
                        "description": "Zone"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubnetCreateRequest"
                            },
                            "examples": {
                                "example_mask": {
                                    "summary": "Example with Mask",
                                    "value": {
                                        "name": "subnet_name",
                                        "description": "some_description",
                                        "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "cidr_block": "24",
                                        "ip_version": 4,
                                        "dns_nameservers": [
                                            "8.8.8.8"
                                        ]
                                    }
                                },
                                "example_cidr": {
                                    "summary": "Example with CIDR",
                                    "value": {
                                        "name": "subnet_name",
                                        "description": "some_description",
                                        "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "cidr_block": "172.50.0.0/24",
                                        "ip_version": 4,
                                        "dns_nameservers": [
                                            "8.8.8.8"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_subnet_create",
                    "product-name": "network"
                }
            }
        },
        "/v1/nat_gateways": {
            "get": {
                "tags": [
                    "nat_gateways"
                ],
                "summary": "List the NAT Gateways from a VPC",
                "description": "List the NAT (Network Address Translation) Gateways from a VPC.",
                "operationId": "list_nat_gateways_v1_nat_gateways_get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Vpc Id"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "title": "Sort",
                            "default": "name:asc"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Page",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "items_per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Items Per Page",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NatGatewayListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode400BadRequest"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode409Conflict"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode500InternalServerError"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode504GatewayTimeout"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_ng_list",
                    "product-name": "network"
                }
            },
            "post": {
                "tags": [
                    "nat_gateways"
                ],
                "summary": "Create a new NAT Gateway resource",
                "description": "Create a new NAT (Network Address Translation) Gateway for a specified VPC and zone.",
                "operationId": "create_nat_gateway_v1_nat_gateways_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NatGatewayCreatePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NatGatewayCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode400BadRequest"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode409Conflict"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode500InternalServerError"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode504GatewayTimeout"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_ng_create",
                    "product-name": "network"
                }
            }
        },
        "/v1/nat_gateways/{id}": {
            "delete": {
                "tags": [
                    "nat_gateways"
                ],
                "summary": "Delete a NAT Gateway from a VPC",
                "description": "Delete a NAT (Network Address Translation) Gateway from a VPC.",
                "operationId": "delete_nat_gateway_v1_nat_gateways__id__delete",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode400BadRequest"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode409Conflict"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode500InternalServerError"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode504GatewayTimeout"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_ng_delete",
                    "product-name": "network"
                }
            },
            "get": {
                "tags": [
                    "nat_gateways"
                ],
                "summary": "Detail a NAT Gateway from a VPC",
                "description": "Detail a NAT (Network Address Translation) Gateway from a VPC.",
                "operationId": "detail_nat_gateway_v1_nat_gateways__id__get",
                "security": [
                    {
                        "OAuth2": [
                            "network.read"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NatGatewayDetailsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode400BadRequest"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode409Conflict"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode500InternalServerError"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode504GatewayTimeout"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_ng_get",
                    "product-name": "network"
                }
            }
        },
        "/v1/vpcs": {
            "post": {
                "tags": [
                    "vpcs"
                ],
                "summary": "Create a new Virtual Private Cloud (VPC)",
                "description": "Create a new Virtual Private Cloud (VPC).",
                "operationId": "v1_create_vpc_v1_vpcs_post",
                "security": [
                    {
                        "OAuth2": [
                            "network.write"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id",
                            "description": "Tenant id of the project"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VpcCreatePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vpc_api_product__v1__vpcs__schemas__VpcCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode400BadRequest"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode409Conflict"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Exception",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode500InternalServerError"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusCode504GatewayTimeout"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": false,
                "x-permission": {
                    "permission-name": "net_vpc_create",
                    "product-name": "network"
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BookCidrRequest": {
                "type": "object",
                "properties": {
                    "cidr": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Cidr"
                    },
                    "mask": {
                        "anyOf": [
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Mask"
                    }
                },
                "title": "BookCidrRequest",
                "example": {
                    "cidr": "172.26.0.0/16"
                }
            },
            "BookCidrResponse": {
                "type": "object",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "title": "Cidr",
                        "description": "The CIDR notation for the subnet pool.",
                        "default": "172.26.0.0/16"
                    }
                },
                "title": "BookCidrResponse",
                "example": {
                    "cidr": "172.26.0.0/16"
                }
            },
            "DhcpPoolStr": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "title": "Start"
                    },
                    "end": {
                        "type": "string",
                        "title": "End"
                    }
                },
                "title": "DhcpPoolStr",
                "required": [
                    "start",
                    "end"
                ]
            },
            "HTTPValidationError": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "loc": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            }
                                        ]
                                    },
                                    "title": "Location"
                                },
                                "msg": {
                                    "type": "string",
                                    "title": "Message"
                                },
                                "type": {
                                    "type": "string",
                                    "title": "Error Type"
                                }
                            },
                            "title": "ValidationError",
                            "required": [
                                "loc",
                                "msg",
                                "type"
                            ]
                        },
                        "title": "Detail"
                    }
                },
                "title": "HTTPValidationError"
            },
            "LinkModel": {
                "type": "object",
                "properties": {
                    "previous": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Previous"
                    },
                    "next": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Next"
                    },
                    "self": {
                        "type": "string",
                        "title": "Self"
                    }
                },
                "title": "LinkModel",
                "required": [
                    "previous",
                    "next",
                    "self"
                ]
            },
            "Meta": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "object",
                        "properties": {
                            "limit": {
                                "type": "integer",
                                "title": "Limit"
                            },
                            "offset": {
                                "type": "integer",
                                "title": "Offset"
                            },
                            "count": {
                                "type": "integer",
                                "title": "Count"
                            },
                            "total": {
                                "type": "integer",
                                "title": "Total"
                            },
                            "max_items_per_page": {
                                "type": "integer",
                                "title": "Max Items Per Page"
                            }
                        },
                        "title": "MetaPageInfo",
                        "required": [
                            "limit",
                            "offset",
                            "count",
                            "total",
                            "max_items_per_page"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "previous": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    }
                                ],
                                "title": "Previous"
                            },
                            "next": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    }
                                ],
                                "title": "Next"
                            },
                            "self": {
                                "type": "string",
                                "title": "Self"
                            }
                        },
                        "title": "MetaLinks",
                        "required": [
                            "self"
                        ]
                    }
                },
                "title": "Meta",
                "required": [
                    "page",
                    "links"
                ]
            },
            "MetaLinks": {
                "type": "object",
                "properties": {
                    "previous": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Previous"
                    },
                    "next": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Next"
                    },
                    "self": {
                        "type": "string",
                        "title": "Self"
                    }
                },
                "title": "MetaLinks",
                "required": [
                    "self"
                ]
            },
            "MetaModel": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "object",
                        "properties": {
                            "limit": {
                                "type": "integer",
                                "title": "Limit",
                                "default": 10
                            },
                            "offset": {
                                "type": "integer",
                                "title": "Offset",
                                "default": 0
                            },
                            "count": {
                                "type": "integer",
                                "title": "Count"
                            },
                            "total": {
                                "type": "integer",
                                "title": "Total"
                            }
                        },
                        "title": "PageModel",
                        "required": [
                            "count",
                            "total"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "previous": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    }
                                ],
                                "title": "Previous"
                            },
                            "next": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    }
                                ],
                                "title": "Next"
                            },
                            "self": {
                                "type": "string",
                                "title": "Self"
                            }
                        },
                        "title": "LinkModel",
                        "required": [
                            "previous",
                            "next",
                            "self"
                        ]
                    }
                },
                "title": "MetaModel",
                "required": [
                    "page",
                    "links"
                ]
            },
            "MetaPageInfo": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "title": "Limit"
                    },
                    "offset": {
                        "type": "integer",
                        "title": "Offset"
                    },
                    "count": {
                        "type": "integer",
                        "title": "Count"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "max_items_per_page": {
                        "type": "integer",
                        "title": "Max Items Per Page"
                    }
                },
                "title": "MetaPageInfo",
                "required": [
                    "limit",
                    "offset",
                    "count",
                    "total",
                    "max_items_per_page"
                ]
            },
            "NatGatewayCreatePayload": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    }
                },
                "title": "NatGatewayCreatePayload",
                "required": [
                    "name",
                    "zone",
                    "vpc_id"
                ],
                "example": {
                    "description": "Description",
                    "name": "NatGateway Name",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "NatGatewayCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "enum": [
                            "pending",
                            "processing",
                            "created",
                            "error",
                            "deleting",
                            "deleted",
                            "updating"
                        ]
                    }
                },
                "title": "NatGatewayCreateResponse",
                "required": [
                    "id",
                    "status"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "pending"
                }
            },
            "NatGatewayDetailsResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    },
                    "availability_zone": {
                        "type": "string",
                        "title": "Availability Zone"
                    },
                    "nat_gateway_ip": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Nat Gateway Ip"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "enum": [
                            "pending",
                            "processing",
                            "created",
                            "error",
                            "deleting",
                            "deleted",
                            "updating"
                        ]
                    }
                },
                "title": "NatGatewayDetailsResponse",
                "required": [
                    "id",
                    "name",
                    "vpc_id",
                    "zone",
                    "availability_zone",
                    "status"
                ],
                "example": {
                    "availability_zone": "br-se1-a",
                    "created_at": "YYYY-MM-DD HH:mm:SS",
                    "description": "NatGateway description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "name": "NatGateway Name",
                    "nat_gateway_ip": "127.0.0.1",
                    "status": "created",
                    "updated": "YYYY-MM-DD HH:mm:SS",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "NatGatewayListResponse": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "page": {
                                "type": "object",
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit"
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "title": "Offset"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total"
                                    },
                                    "max_items_per_page": {
                                        "type": "integer",
                                        "title": "Max Items Per Page"
                                    }
                                },
                                "title": "MetaPageInfo",
                                "required": [
                                    "limit",
                                    "offset",
                                    "count",
                                    "total",
                                    "max_items_per_page"
                                ]
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "title": "Previous"
                                    },
                                    "next": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "title": "Next"
                                    },
                                    "self": {
                                        "type": "string",
                                        "title": "Self"
                                    }
                                },
                                "title": "MetaLinks",
                                "required": [
                                    "self"
                                ]
                            }
                        },
                        "title": "Meta",
                        "required": [
                            "page",
                            "links"
                        ]
                    },
                    "result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "title": "Id"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "vpc_id": {
                                    "type": "string",
                                    "title": "Vpc Id"
                                },
                                "zone": {
                                    "type": "string",
                                    "title": "Zone"
                                },
                                "availability_zone": {
                                    "type": "string",
                                    "title": "Availability Zone"
                                },
                                "nat_gateway_ip": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Nat Gateway Ip"
                                },
                                "created_at": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Created At"
                                },
                                "updated": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Updated"
                                },
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "enum": [
                                        "pending",
                                        "processing",
                                        "created",
                                        "error",
                                        "deleting",
                                        "deleted",
                                        "updating"
                                    ]
                                }
                            },
                            "title": "NatGatewayDetailsResponse",
                            "required": [
                                "id",
                                "name",
                                "vpc_id",
                                "zone",
                                "availability_zone",
                                "status"
                            ],
                            "example": {
                                "availability_zone": "br-se1-a",
                                "created_at": "YYYY-MM-DD HH:mm:SS",
                                "description": "NatGateway description",
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "name": "NatGateway Name",
                                "nat_gateway_ip": "127.0.0.1",
                                "status": "created",
                                "updated": "YYYY-MM-DD HH:mm:SS",
                                "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "zone": "a"
                            }
                        },
                        "title": "Result"
                    }
                },
                "title": "NatGatewayListResponse",
                "required": [
                    "meta",
                    "result"
                ],
                "example": {
                    "meta": {
                        "links": {
                            "next": "?_offset=30\u0026_limit=10",
                            "previous": "?_offset=10\u0026_limit=10",
                            "self": "?_offset=20\u0026_limit=10"
                        },
                        "page": {
                            "count": 10,
                            "limit": 10,
                            "max_items_per_page": 100,
                            "offset": 20,
                            "total": 112
                        }
                    },
                    "result": [
                        {
                            "availability_zone": "br-se1-a",
                            "created_at": "YYYY-MM-DD HH:mm:SS",
                            "description": "NatGateway description",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "name": "NatGateway Name",
                            "nat_gateway_ip": "127.0.0.1",
                            "status": "created",
                            "updated": "YYYY-MM-DD HH:mm:SS",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "a"
                        }
                    ]
                }
            },
            "NetworkZoneModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    },
                    "availability_zone": {
                        "type": "string",
                        "title": "Availability Zone"
                    }
                },
                "title": "NetworkZoneModel",
                "required": [
                    "id",
                    "zone",
                    "availability_zone"
                ],
                "example": {
                    "availability_zone": "availability_zone_name",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "zone_name"
                }
            },
            "PageModel": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "title": "Limit",
                        "default": 10
                    },
                    "offset": {
                        "type": "integer",
                        "title": "Offset",
                        "default": 0
                    },
                    "count": {
                        "type": "integer",
                        "title": "Count"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    }
                },
                "title": "PageModel",
                "required": [
                    "count",
                    "total"
                ]
            },
            "PortCreateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "maxLength": 100,
                        "minLength": 5
                    },
                    "has_pip": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Has Pip",
                        "default": true
                    },
                    "has_sg": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Has Sg",
                        "default": true
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Subnets",
                        "default": []
                    },
                    "security_groups_id": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "title": "Security Groups Id",
                        "default": []
                    }
                },
                "title": "PortCreateRequest",
                "required": [
                    "name"
                ],
                "example": {
                    "has_pip": true,
                    "has_sg": true,
                    "name": "port_name",
                    "security_groups_id": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "subnets": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ]
                }
            },
            "PortCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "title": "PortCreateResponse",
                "required": [
                    "id"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PortPatchRequest": {
                "type": "object",
                "properties": {
                    "ip_spoofing_guard": {
                        "type": "boolean",
                        "title": "Ip Spoofing Guard",
                        "description": "Activates (true) or deactivates (false) the IP Spoofing protection"
                    }
                },
                "title": "PortPatchRequest",
                "example": {
                    "ip_spoofing_guard": true
                }
            },
            "PortSimpleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "ip_address": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ip_address": {
                                    "type": "string",
                                    "title": "Ip Address"
                                },
                                "subnet_id": {
                                    "type": "string",
                                    "title": "Subnet Id"
                                },
                                "ethertype": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Ethertype"
                                }
                            },
                            "title": "IpAddress",
                            "required": [
                                "ip_address",
                                "subnet_id"
                            ],
                            "example": {
                                "ethertype": "IPv4",
                                "ip_address": "172.20.0.2",
                                "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            }
                        },
                        "title": "Ip Address",
                        "default": []
                    }
                },
                "title": "PortSimpleResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_address": [
                        {
                            "ip_address": "172.20.0.2",
                            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "PortsList": {
                "type": "object",
                "properties": {
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Id"
                                },
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Name"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "is_admin_state_up": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        }
                                    ],
                                    "title": "Is Admin State Up"
                                },
                                "vpc_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Vpc Id"
                                },
                                "is_port_security_enabled": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        }
                                    ],
                                    "title": "Is Port Security Enabled"
                                },
                                "security_groups": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Security Groups",
                                    "default": []
                                },
                                "public_ip": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "public_ip_id": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "title": "Public Ip Id"
                                                    },
                                                    "public_ip": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "title": "Public Ip"
                                                    }
                                                },
                                                "title": "PublicIpResponsePort",
                                                "example": {
                                                    "public_ip": "100.94.5.31",
                                                    "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                                }
                                            }
                                        }
                                    ],
                                    "title": "Public Ip",
                                    "default": []
                                },
                                "ip_address": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip_address": {
                                                "type": "string",
                                                "title": "Ip Address"
                                            },
                                            "subnet_id": {
                                                "type": "string",
                                                "title": "Subnet Id"
                                            },
                                            "ethertype": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    }
                                                ],
                                                "title": "Ethertype"
                                            }
                                        },
                                        "title": "IpAddress",
                                        "required": [
                                            "ip_address",
                                            "subnet_id"
                                        ],
                                        "example": {
                                            "ethertype": "IPv4",
                                            "ip_address": "172.20.0.2",
                                            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                        }
                                    },
                                    "title": "Ip Address",
                                    "default": []
                                },
                                "created_at": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Created At"
                                },
                                "updated": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Updated"
                                },
                                "network": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/NetworkZoneModel"
                                        }
                                    ]
                                },
                                "ip_spoofing_guard": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        }
                                    ],
                                    "title": "Ip Spoofing Guard"
                                }
                            },
                            "title": "PortResponse",
                            "example": {
                                "created_at": "2022-01-01 00:00:00",
                                "description": "port description",
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "ip_address": [
                                    {
                                        "ip_address": "172.20.0.2",
                                        "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                    }
                                ],
                                "is_admin_state_up": true,
                                "is_port_security_enabled": true,
                                "name": "port_name",
                                "public_ip": [
                                    {
                                        "public_ip": "100.94.5.31",
                                        "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                    }
                                ],
                                "security_groups": [
                                    "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                ],
                                "updated": "2022-01-01 00:00:00",
                                "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            }
                        },
                        "title": "Ports"
                    }
                },
                "title": "PortsList",
                "required": [
                    "ports"
                ],
                "example": {
                    "ports": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "port description",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_address": [
                                {
                                    "ip_address": "172.20.0.2",
                                    "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                }
                            ],
                            "ip_spoofing_guard": true,
                            "is_admin_state_up": true,
                            "is_port_security_enabled": true,
                            "name": "port_name",
                            "public_ip": [
                                {
                                    "public_ip": "100.94.5.31",
                                    "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                }
                            ],
                            "security_groups": [
                                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "PortsListSimplified": {
                "type": "object",
                "properties": {
                    "ports_simplified": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Id"
                                },
                                "ip_address": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip_address": {
                                                "type": "string",
                                                "title": "Ip Address"
                                            },
                                            "subnet_id": {
                                                "type": "string",
                                                "title": "Subnet Id"
                                            },
                                            "ethertype": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    }
                                                ],
                                                "title": "Ethertype"
                                            }
                                        },
                                        "title": "IpAddress",
                                        "required": [
                                            "ip_address",
                                            "subnet_id"
                                        ],
                                        "example": {
                                            "ethertype": "IPv4",
                                            "ip_address": "172.20.0.2",
                                            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                        }
                                    },
                                    "title": "Ip Address",
                                    "default": []
                                }
                            },
                            "title": "PortSimpleResponse",
                            "example": {
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "ip_address": [
                                    {
                                        "ip_address": "172.20.0.2",
                                        "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                    }
                                ]
                            }
                        },
                        "title": "Ports Simplified"
                    }
                },
                "title": "PortsListSimplified",
                "required": [
                    "ports_simplified"
                ],
                "example": {
                    "ports_simplified": [
                        {
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_address": [
                                {
                                    "ip_address": "172.20.0.2",
                                    "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                }
                            ]
                        }
                    ]
                }
            },
            "PublicIpCreateRequest": {
                "type": "object",
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description",
                        "default": ""
                    }
                },
                "title": "PublicIpCreateRequest",
                "example": {
                    "description": "public_ip_description"
                }
            },
            "PublicIpCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "title": "PublicIpCreateResponse",
                "required": [
                    "id"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PublicIpDb": {
                "type": "object",
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "external_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "External Id"
                    },
                    "vpc_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Vpc Id"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Tenant Id"
                    },
                    "project_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Project Type"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "public_ip": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Public Ip"
                    },
                    "port_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Port Id"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Status"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "title": "PublicIpDb",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "port description",
                    "error": "error",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "project_type": "project_type",
                    "public_ip": "100.94.5.31",
                    "status": "created",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PublicIpsList": {
                "type": "object",
                "properties": {
                    "public_ips": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Id"
                                },
                                "external_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "External Id"
                                },
                                "vpc_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Vpc Id"
                                },
                                "tenant_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Tenant Id"
                                },
                                "project_type": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Project Type"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "public_ip": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Public Ip"
                                },
                                "port_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Port Id"
                                },
                                "created_at": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Created At"
                                },
                                "updated": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Updated"
                                },
                                "status": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Status"
                                },
                                "error": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Error"
                                }
                            },
                            "title": "PublicIpDb",
                            "example": {
                                "created_at": "2022-01-01 00:00:00",
                                "description": "port description",
                                "error": "error",
                                "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "project_type": "project_type",
                                "public_ip": "100.94.5.31",
                                "status": "created",
                                "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "updated": "2022-01-01 00:00:00",
                                "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            }
                        },
                        "title": "Public Ips"
                    }
                },
                "title": "PublicIpsList",
                "required": [
                    "public_ips"
                ],
                "example": {
                    "public_ips": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "port description",
                            "error": "error",
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "port_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "public_ip": "100.94.5.31",
                            "status": "created",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "RuleCreateRequest": {
                "type": "object",
                "properties": {
                    "direction": {
                        "type": "string",
                        "title": "Direction",
                        "description": "Direction of the rule, either ingress or egress",
                        "example": "ingress"
                    },
                    "port_range_min": {
                        "anyOf": [
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Port Range Min"
                    },
                    "port_range_max": {
                        "anyOf": [
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Port Range Max"
                    },
                    "protocol": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Protocol"
                    },
                    "remote_ip_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Remote Ip Prefix"
                    },
                    "ethertype": {
                        "type": "string",
                        "title": "Ethertype",
                        "description": "Ethertype of the rule, either IPv4 or IPv6",
                        "example": "IPv4"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the security group rule",
                        "example": "Allow incoming SSH traffic"
                    }
                },
                "title": "RuleCreateRequest",
                "required": [
                    "direction",
                    "ethertype"
                ],
                "example": {
                    "description": "Some rule description",
                    "direction": "egress",
                    "ethertype": "IPv4",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_ip_prefix": "100.94.0.0/24"
                }
            },
            "RuleCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "title": "RuleCreateResponse",
                "required": [
                    "id"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "RuleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "external_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "External Id"
                    },
                    "security_group_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Security Group Id"
                    },
                    "direction": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Direction"
                    },
                    "port_range_min": {
                        "anyOf": [
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Port Range Min"
                    },
                    "port_range_max": {
                        "anyOf": [
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Port Range Max"
                    },
                    "protocol": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Protocol"
                    },
                    "remote_ip_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Remote Ip Prefix"
                    },
                    "ethertype": {
                        "type": "string",
                        "title": "Ethertype"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "status": {
                        "type": "string",
                        "title": "RuleStatus",
                        "enum": [
                            "created",
                            "pending",
                            "error"
                        ]
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Error"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "title": "RuleResponse",
                "required": [
                    "ethertype",
                    "status"
                ],
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "Some rule description",
                    "direction": "egress",
                    "ethertype": "IPv4",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_ip_prefix": "100.94.0.0/24",
                    "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "created"
                }
            },
            "RuleResponseEvent": {
                "type": "object",
                "properties": {
                    "direction": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Direction"
                    },
                    "port_range_min": {
                        "anyOf": [
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Port Range Min"
                    },
                    "port_range_max": {
                        "anyOf": [
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Port Range Max"
                    },
                    "protocol": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Protocol"
                    },
                    "remote_ip_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Remote Ip Prefix"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RuleStatus"
                            }
                        ]
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Error"
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "security_group_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Security Group Id"
                    },
                    "ethertype": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Ethertype"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    }
                },
                "title": "RuleResponseEvent",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "direction": "egress",
                    "error": "null",
                    "ethertype": "IPv4",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_ip_prefix": "100.94.0.0/24",
                    "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "created"
                }
            },
            "RuleStatus": {
                "type": "string",
                "title": "RuleStatus",
                "enum": [
                    "created",
                    "pending",
                    "error"
                ]
            },
            "RulesList": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Id"
                                },
                                "external_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "External Id"
                                },
                                "security_group_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Security Group Id"
                                },
                                "direction": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Direction"
                                },
                                "port_range_min": {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        }
                                    ],
                                    "title": "Port Range Min"
                                },
                                "port_range_max": {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        }
                                    ],
                                    "title": "Port Range Max"
                                },
                                "protocol": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Protocol"
                                },
                                "remote_ip_prefix": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Remote Ip Prefix"
                                },
                                "ethertype": {
                                    "type": "string",
                                    "title": "Ethertype"
                                },
                                "created_at": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Created At"
                                },
                                "status": {
                                    "type": "string",
                                    "title": "RuleStatus",
                                    "enum": [
                                        "created",
                                        "pending",
                                        "error"
                                    ]
                                },
                                "error": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Error"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Description"
                                }
                            },
                            "title": "RuleResponse",
                            "required": [
                                "ethertype",
                                "status"
                            ],
                            "example": {
                                "created_at": "2022-01-01 00:00:00",
                                "description": "Some rule description",
                                "direction": "egress",
                                "ethertype": "IPv4",
                                "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "port_range_max": 8028,
                                "port_range_min": 8028,
                                "protocol": "tcp",
                                "remote_ip_prefix": "100.94.0.0/24",
                                "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "status": "created"
                            }
                        },
                        "title": "Rules"
                    }
                },
                "title": "RulesList",
                "required": [
                    "rules"
                ],
                "example": {
                    "rules": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "direction": "egress",
                            "ethertype": "IPv4",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "port_range_max": 8028,
                            "port_range_min": 8028,
                            "protocol": "tcp",
                            "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "remote_ip_prefix": "100.94.0.0/24",
                            "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "status": "created"
                        }
                    ]
                }
            },
            "SecurityGroupCreateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 100,
                                "minLength": 5
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description",
                        "default": ""
                    }
                },
                "title": "SecurityGroupCreateRequest",
                "required": [
                    "name"
                ],
                "example": {
                    "description": "security group description",
                    "name": "security_group_name"
                }
            },
            "SecurityGroupCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "title": "SecurityGroupCreateResponse",
                "required": [
                    "id"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SecurityGroupDetailEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "vpc_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Vpc Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    },
                    "status": {
                        "type": "string",
                        "title": "SecurityGroupStatus",
                        "enum": [
                            "created",
                            "pending",
                            "error"
                        ]
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Error"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Tenant Id"
                    },
                    "project_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Project Type"
                    },
                    "is_default": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Is Default"
                    },
                    "external_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "External Id"
                    },
                    "rules": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "direction": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Direction"
                                        },
                                        "port_range_min": {
                                            "anyOf": [
                                                {
                                                    "type": "integer"
                                                }
                                            ],
                                            "title": "Port Range Min"
                                        },
                                        "port_range_max": {
                                            "anyOf": [
                                                {
                                                    "type": "integer"
                                                }
                                            ],
                                            "title": "Port Range Max"
                                        },
                                        "protocol": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Protocol"
                                        },
                                        "remote_ip_prefix": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Remote Ip Prefix"
                                        },
                                        "status": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/RuleStatus"
                                                }
                                            ]
                                        },
                                        "error": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Error"
                                        },
                                        "id": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Id"
                                        },
                                        "security_group_id": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Security Group Id"
                                        },
                                        "ethertype": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Ethertype"
                                        },
                                        "created_at": {
                                            "anyOf": [
                                                {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            ],
                                            "title": "Created At"
                                        }
                                    },
                                    "title": "RuleResponseEvent",
                                    "example": {
                                        "created_at": "2022-01-01 00:00:00",
                                        "direction": "egress",
                                        "error": "null",
                                        "ethertype": "IPv4",
                                        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "port_range_max": 8028,
                                        "port_range_min": 8028,
                                        "protocol": "tcp",
                                        "remote_ip_prefix": "100.94.0.0/24",
                                        "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "status": "created"
                                    }
                                }
                            }
                        ],
                        "title": "Rules",
                        "default": []
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Ports",
                        "default": []
                    }
                },
                "title": "SecurityGroupDetailEvent",
                "required": [
                    "status"
                ],
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "security group description",
                    "error": "null",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "security_group_name",
                    "ports": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "project_type": "default",
                    "rules": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "direction": "egress",
                            "error": "null",
                            "ethertype": "IPv4",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "port_range_max": 8028,
                            "port_range_min": 8028,
                            "protocol": "tcp",
                            "remote_ip_prefix": "100.94.0.0/24",
                            "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "status": "created"
                        }
                    ],
                    "status": "created",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SecurityGroupListEvent": {
                "type": "object",
                "properties": {
                    "security_groups": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Id"
                                },
                                "vpc_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Vpc Id"
                                },
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Name"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "created_at": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Created At"
                                },
                                "updated": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Updated"
                                },
                                "status": {
                                    "type": "string",
                                    "title": "SecurityGroupStatus",
                                    "enum": [
                                        "created",
                                        "pending",
                                        "error"
                                    ]
                                },
                                "error": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Error"
                                },
                                "tenant_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Tenant Id"
                                },
                                "project_type": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Project Type"
                                },
                                "is_default": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        }
                                    ],
                                    "title": "Is Default"
                                }
                            },
                            "title": "SecurityGroupResponseEvent",
                            "required": [
                                "status"
                            ],
                            "example": {
                                "created_at": "2022-01-01 00:00:00",
                                "description": "security group description",
                                "error": "null",
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "is_default": true,
                                "name": "security_group_name",
                                "project_type": "default",
                                "status": "created",
                                "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "updated": "2022-01-01 00:00:00",
                                "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            }
                        },
                        "title": "Security Groups"
                    }
                },
                "title": "SecurityGroupListEvent",
                "required": [
                    "security_groups"
                ],
                "example": {
                    "security_groups": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "security group description",
                            "error": "null",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "security_group_name",
                            "project_type": "default",
                            "status": "created",
                            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "SecurityGroupResponseEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "vpc_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Vpc Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    },
                    "status": {
                        "type": "string",
                        "title": "SecurityGroupStatus",
                        "enum": [
                            "created",
                            "pending",
                            "error"
                        ]
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Error"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Tenant Id"
                    },
                    "project_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Project Type"
                    },
                    "is_default": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Is Default"
                    }
                },
                "title": "SecurityGroupResponseEvent",
                "required": [
                    "status"
                ],
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "security group description",
                    "error": "null",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "security_group_name",
                    "project_type": "default",
                    "status": "created",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SecurityGroupStatus": {
                "type": "string",
                "title": "SecurityGroupStatus",
                "enum": [
                    "created",
                    "pending",
                    "error"
                ]
            },
            "Status": {
                "type": "string",
                "title": "Status",
                "enum": [
                    "pending",
                    "processing",
                    "created",
                    "error",
                    "deleting",
                    "deleted",
                    "updating"
                ]
            },
            "StatusCode400BadRequest": {
                "type": "object",
                "properties": {
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "default": "Bad Request"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "title": "Details"
                    }
                },
                "title": "StatusCode400BadRequest",
                "required": [
                    "message",
                    "details"
                ]
            },
            "StatusCode409Conflict": {
                "type": "object",
                "properties": {
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "default": "Conflict"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "title": "Details"
                    }
                },
                "title": "StatusCode409Conflict",
                "required": [
                    "message",
                    "details"
                ]
            },
            "StatusCode500InternalServerError": {
                "type": "object",
                "properties": {
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "default": "Internal Server Error"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "title": "StatusCode500InternalServerError",
                "required": [
                    "message"
                ]
            },
            "StatusCode504GatewayTimeout": {
                "type": "object",
                "properties": {
                    "slug": {
                        "type": "string",
                        "title": "Slug",
                        "default": "Gateway Timeout"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "title": "StatusCode504GatewayTimeout",
                "required": [
                    "message"
                ]
            },
            "SubnetCreateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "cidr_block": {
                        "type": "string",
                        "title": "Cidr Block"
                    },
                    "ip_version": {
                        "type": "integer",
                        "title": "Ip Version"
                    },
                    "dns_nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "ipvanyaddress"
                        },
                        "title": "Dns Nameservers",
                        "default": []
                    },
                    "subnetpool_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Subnetpool Id"
                    }
                },
                "title": "SubnetCreateRequest",
                "required": [
                    "name",
                    "cidr_block",
                    "ip_version"
                ],
                "example": {
                    "cidr_block": "172.50.0.0/24",
                    "description": "some_description",
                    "dns_nameservers": [
                        "8.8.8.8"
                    ],
                    "ip_version": 4,
                    "name": "subnet_name",
                    "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "title": "SubnetCreateResponse",
                "required": [
                    "id"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetPatchRequest": {
                "type": "object",
                "properties": {
                    "dns_nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "ipvanyaddress"
                        },
                        "title": "Dns Nameservers",
                        "default": []
                    }
                },
                "title": "SubnetPatchRequest",
                "example": {
                    "dns_nameservers": [
                        "8.8.8.8"
                    ]
                }
            },
            "SubnetPoolDetailsResponse": {
                "type": "object",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "title": "Cidr",
                        "description": "The CIDR notation for the subnet pool.",
                        "default": "172.26.0.0/16"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "ip_version": {
                        "type": "integer",
                        "title": "Ip Version"
                    },
                    "is_default": {
                        "type": "boolean",
                        "title": "Is Default"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    }
                },
                "title": "SubnetPoolDetailsResponse",
                "required": [
                    "id",
                    "created_at",
                    "tenant_id",
                    "ip_version",
                    "is_default",
                    "name",
                    "description"
                ],
                "description": "A Schema representing the request for creating one Subnet Pool.",
                "example": {
                    "cidr": "172.26.0.0/16",
                    "created_at": "2022-01-01T00:00:00.000000Z",
                    "description": "some description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_version": 4,
                    "is_default": true,
                    "name": "some_subnet_pool",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetPoolPostResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "title": "SubnetPoolPostResponse",
                "required": [
                    "id"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetPoolRequest": {
                "type": "object",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "title": "Cidr",
                        "description": "The CIDR notation for the subnet pool.",
                        "default": "172.26.0.0/16"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the subnet pool."
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description for the subnet pool"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "pattern": "^(pip|default)$",
                        "description": "The type of subnetpool, pip or default.",
                        "default": "default"
                    }
                },
                "title": "SubnetPoolRequest",
                "required": [
                    "name",
                    "description"
                ],
                "description": "A Schema representing the request for creating one Subnet Pool.",
                "example": {
                    "cidr": "172.26.0.0/16",
                    "description": "some description",
                    "name": "some_subnet_pool"
                }
            },
            "SubnetPoolResponse": {
                "type": "object",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "title": "Cidr",
                        "description": "The CIDR notation for the subnet pool.",
                        "default": "172.26.0.0/16"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Tenant Id"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "is_default": {
                        "type": "boolean",
                        "title": "Is Default"
                    }
                },
                "title": "SubnetPoolResponse",
                "required": [
                    "id",
                    "name",
                    "tenant_id",
                    "is_default"
                ],
                "description": "A Schema representing a response for Subnet Pool creation.",
                "example": {
                    "cidr": "172.26.0.0/16",
                    "description": "some description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "some_subnet_pool",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetPoolsResponse": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "page": {
                                "type": "object",
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "title": "Limit",
                                        "default": 10
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "title": "Offset",
                                        "default": 0
                                    },
                                    "count": {
                                        "type": "integer",
                                        "title": "Count"
                                    },
                                    "total": {
                                        "type": "integer",
                                        "title": "Total"
                                    }
                                },
                                "title": "PageModel",
                                "required": [
                                    "count",
                                    "total"
                                ]
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "title": "Previous"
                                    },
                                    "next": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "title": "Next"
                                    },
                                    "self": {
                                        "type": "string",
                                        "title": "Self"
                                    }
                                },
                                "title": "LinkModel",
                                "required": [
                                    "previous",
                                    "next",
                                    "self"
                                ]
                            }
                        },
                        "title": "MetaModel",
                        "required": [
                            "page",
                            "links"
                        ]
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "cidr": {
                                    "type": "string",
                                    "title": "Cidr",
                                    "description": "The CIDR notation for the subnet pool.",
                                    "default": "172.26.0.0/16"
                                },
                                "id": {
                                    "type": "string",
                                    "title": "Id"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name"
                                },
                                "tenant_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Tenant Id"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "is_default": {
                                    "type": "boolean",
                                    "title": "Is Default"
                                }
                            },
                            "title": "SubnetPoolResponse",
                            "required": [
                                "id",
                                "name",
                                "tenant_id",
                                "is_default"
                            ],
                            "description": "A Schema representing a response for Subnet Pool creation.",
                            "example": {
                                "cidr": "172.26.0.0/16",
                                "description": "some description",
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "is_default": true,
                                "name": "some_subnet_pool",
                                "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            }
                        },
                        "title": "Results",
                        "description": "List of items for the current page",
                        "default": []
                    }
                },
                "title": "SubnetPoolsResponse",
                "required": [
                    "meta"
                ],
                "description": "A Schema representing a list of Subnet Pools.",
                "example": {
                    "meta": {
                        "links": {
                            "next": "?_offset=30\u0026_limit=10",
                            "previous": "?_offset=10\u0026_limit=10",
                            "self": "?_offset=30\u0026_limit=10"
                        },
                        "page": {
                            "count": 10,
                            "limit": 10,
                            "offset": 20,
                            "total": 112
                        }
                    },
                    "results": [
                        {
                            "cidr": "172.20.0.0/16",
                            "description": "subnet pool description",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "subnet_pool_name",
                            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "SubnetResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "cidr_block": {
                        "type": "string",
                        "title": "Cidr Block"
                    },
                    "subnetpool_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Subnetpool Id"
                    },
                    "ip_version": {
                        "type": "string",
                        "title": "Ip Version"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    }
                },
                "title": "SubnetResponse",
                "required": [
                    "id",
                    "vpc_id",
                    "cidr_block",
                    "ip_version",
                    "zone"
                ],
                "example": {
                    "cidr_block": "172.20.0.0/24",
                    "created_at": "2022-01-01 00:00:00",
                    "description": "vpc description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_version": "4",
                    "name": "vpc_name",
                    "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "SubnetResponseDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "cidr_block": {
                        "type": "string",
                        "title": "Cidr Block"
                    },
                    "subnetpool_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Subnetpool Id"
                    },
                    "ip_version": {
                        "type": "string",
                        "title": "Ip Version"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    },
                    "gateway_ip": {
                        "type": "string",
                        "title": "Gateway Ip"
                    },
                    "dns_nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Dns Nameservers"
                    },
                    "dhcp_pools": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "type": "string",
                                    "title": "Start"
                                },
                                "end": {
                                    "type": "string",
                                    "title": "End"
                                }
                            },
                            "title": "DhcpPoolStr",
                            "required": [
                                "start",
                                "end"
                            ]
                        },
                        "title": "Dhcp Pools"
                    }
                },
                "title": "SubnetResponseDetail",
                "required": [
                    "id",
                    "vpc_id",
                    "cidr_block",
                    "ip_version",
                    "zone",
                    "gateway_ip",
                    "dns_nameservers",
                    "dhcp_pools"
                ],
                "example": {
                    "cidr_block": "172.20.0.0/24",
                    "created_at": "2022-01-01 00:00:00",
                    "description": "vpc description",
                    "dhcp_pools": [
                        {
                            "end": "172.50.0.254",
                            "start": "172.50.0.2"
                        }
                    ],
                    "dns_nameservers": [
                        "8.8.8.8"
                    ],
                    "gateway_ip": "172.50.0.1",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_version": "4",
                    "name": "vpc_name",
                    "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "SubnetResponseId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "title": "SubnetResponseId",
                "required": [
                    "id"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetsResponse": {
                "type": "object",
                "properties": {
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "title": "Id"
                                },
                                "vpc_id": {
                                    "type": "string",
                                    "title": "Vpc Id"
                                },
                                "name": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Name"
                                },
                                "description": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Description"
                                },
                                "cidr_block": {
                                    "type": "string",
                                    "title": "Cidr Block"
                                },
                                "subnetpool_id": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Subnetpool Id"
                                },
                                "ip_version": {
                                    "type": "string",
                                    "title": "Ip Version"
                                },
                                "zone": {
                                    "type": "string",
                                    "title": "Zone"
                                },
                                "created_at": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Created At"
                                },
                                "updated": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    ],
                                    "title": "Updated"
                                }
                            },
                            "title": "SubnetResponse",
                            "required": [
                                "id",
                                "vpc_id",
                                "cidr_block",
                                "ip_version",
                                "zone"
                            ],
                            "example": {
                                "cidr_block": "172.20.0.0/24",
                                "created_at": "2022-01-01 00:00:00",
                                "description": "vpc description",
                                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "ip_version": "4",
                                "name": "vpc_name",
                                "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "updated": "2022-01-01 00:00:00",
                                "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                "zone": "a"
                            }
                        },
                        "title": "Subnets",
                        "default": []
                    }
                },
                "title": "SubnetsResponse",
                "example": {
                    "subnets": [
                        {
                            "cidr_block": "172.20.0.0/24",
                            "created_at": "2022-01-01 00:00:00",
                            "description": "vpc description",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_version": "4",
                            "name": "vpc_name",
                            "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "a"
                        }
                    ]
                }
            },
            "UnbookCidrRequest": {
                "type": "object",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "title": "Cidr",
                        "description": "The CIDR notation for the subnet pool.",
                        "default": "172.26.0.0/16"
                    }
                },
                "title": "UnbookCidrRequest",
                "example": {
                    "cidr": "172.26.0.0/16"
                }
            },
            "VPCStatus": {
                "type": "string",
                "title": "VPCStatus",
                "enum": [
                    "pending",
                    "processing",
                    "processing_interconnect",
                    "processing_azdc_migration",
                    "error_interconnect",
                    "error_azdc_migration",
                    "created",
                    "error"
                ]
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "loc": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ]
            },
            "VpcCreatePayload": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the VPC. Must be alphanumeric or hyphens, max 50 chars."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description",
                        "description": "Optional description for the VPC. Must not contain special characters, max 200 chars."
                    }
                },
                "title": "VpcCreatePayload",
                "required": [
                    "name"
                ],
                "example": {
                    "description": "Description",
                    "name": "vpc-name"
                }
            },
            "VpcResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Tenant Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "router_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Router Id"
                    },
                    "external_network": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "External Network"
                    },
                    "network_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Network Id"
                    },
                    "subnets": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "title": "Subnets",
                        "default": []
                    },
                    "security_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Security Groups",
                        "default": []
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    },
                    "is_default": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Is Default"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Error"
                    },
                    "status": {
                        "type": "string",
                        "title": "VPCStatus",
                        "enum": [
                            "pending",
                            "processing",
                            "processing_interconnect",
                            "processing_azdc_migration",
                            "error_interconnect",
                            "error_azdc_migration",
                            "created",
                            "error"
                        ]
                    }
                },
                "title": "VpcResponse",
                "required": [
                    "status"
                ],
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "DESCRIPTION",
                    "error": "error",
                    "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "vpc_name",
                    "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "security_groups": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "status": "created",
                    "subnets": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00"
                }
            },
            "VpcResponseList": {
                "type": "object",
                "properties": {
                    "vpcs": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Id"
                                        },
                                        "tenant_id": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Tenant Id"
                                        },
                                        "name": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Name"
                                        },
                                        "description": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Description"
                                        },
                                        "router_id": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Router Id"
                                        },
                                        "external_network": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "External Network"
                                        },
                                        "network_id": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Network Id"
                                        },
                                        "subnets": {
                                            "anyOf": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "title": "Subnets",
                                            "default": []
                                        },
                                        "security_groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "title": "Security Groups",
                                            "default": []
                                        },
                                        "created_at": {
                                            "anyOf": [
                                                {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            ],
                                            "title": "Created At"
                                        },
                                        "updated": {
                                            "anyOf": [
                                                {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            ],
                                            "title": "Updated"
                                        },
                                        "is_default": {
                                            "anyOf": [
                                                {
                                                    "type": "boolean"
                                                }
                                            ],
                                            "title": "Is Default"
                                        },
                                        "error": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "title": "VPCStatus",
                                            "enum": [
                                                "pending",
                                                "processing",
                                                "processing_interconnect",
                                                "processing_azdc_migration",
                                                "error_interconnect",
                                                "error_azdc_migration",
                                                "created",
                                                "error"
                                            ]
                                        }
                                    },
                                    "title": "VpcResponse",
                                    "required": [
                                        "status"
                                    ],
                                    "example": {
                                        "created_at": "2022-01-01 00:00:00",
                                        "description": "DESCRIPTION",
                                        "error": "error",
                                        "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "is_default": true,
                                        "name": "vpc_name",
                                        "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "security_groups": [
                                            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                        ],
                                        "status": "created",
                                        "subnets": [
                                            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                        ],
                                        "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                        "updated": "2022-01-01 00:00:00"
                                    }
                                }
                            }
                        ],
                        "title": "Vpcs",
                        "default": []
                    }
                },
                "title": "VpcResponseList",
                "example": {
                    "vpcs": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "DESCRIPTION",
                            "error": "error",
                            "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "vpc_name",
                            "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "security_groups": [
                                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "status": "created",
                            "subnets": [
                                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "updated": "2022-01-01 00:00:00"
                        }
                    ]
                }
            },
            "vpc_api_product__v1__vpcs__schemas__VpcCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "VPCStatus",
                        "enum": [
                            "pending",
                            "processing",
                            "processing_interconnect",
                            "processing_azdc_migration",
                            "error_interconnect",
                            "error_azdc_migration",
                            "created",
                            "error"
                        ]
                    }
                },
                "title": "VpcCreateResponse",
                "required": [
                    "id",
                    "status"
                ],
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "pending"
                }
            },
            "vpc_api_product__vpc__models__port__PortResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Description"
                    },
                    "is_admin_state_up": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Is Admin State Up"
                    },
                    "vpc_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Vpc Id"
                    },
                    "is_port_security_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Is Port Security Enabled"
                    },
                    "security_groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Security Groups",
                        "default": []
                    },
                    "public_ip": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "public_ip_id": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Public Ip Id"
                                        },
                                        "public_ip": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                }
                                            ],
                                            "title": "Public Ip"
                                        }
                                    },
                                    "title": "PublicIpResponsePort",
                                    "example": {
                                        "public_ip": "100.94.5.31",
                                        "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                    }
                                }
                            }
                        ],
                        "title": "Public Ip",
                        "default": []
                    },
                    "ip_address": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ip_address": {
                                    "type": "string",
                                    "title": "Ip Address"
                                },
                                "subnet_id": {
                                    "type": "string",
                                    "title": "Subnet Id"
                                },
                                "ethertype": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Ethertype"
                                }
                            },
                            "title": "IpAddress",
                            "required": [
                                "ip_address",
                                "subnet_id"
                            ],
                            "example": {
                                "ethertype": "IPv4",
                                "ip_address": "172.20.0.2",
                                "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            }
                        },
                        "title": "Ip Address",
                        "default": []
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Created At"
                    },
                    "updated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ],
                        "title": "Updated"
                    },
                    "network": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NetworkZoneModel"
                            }
                        ]
                    },
                    "ip_spoofing_guard": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            }
                        ],
                        "title": "Ip Spoofing Guard"
                    }
                },
                "title": "PortResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "port description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_address": [
                        {
                            "ip_address": "172.20.0.2",
                            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ],
                    "is_admin_state_up": true,
                    "is_port_security_enabled": true,
                    "name": "port_name",
                    "public_ip": [
                        {
                            "public_ip": "100.94.5.31",
                            "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ],
                    "security_groups": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "vpc_api_product__vpc__models__public_ip__IpAddress": {
                "type": "object",
                "properties": {
                    "ip_address": {
                        "type": "string",
                        "title": "Ip Address"
                    },
                    "subnet_id": {
                        "type": "string",
                        "title": "Subnet Id"
                    },
                    "ethertype": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Ethertype"
                    }
                },
                "title": "IpAddress",
                "required": [
                    "ip_address",
                    "subnet_id"
                ],
                "example": {
                    "ethertype": "IPv4",
                    "ip_address": "172.20.0.2",
                    "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "vpc_api_product__vpc__models__public_ip__PublicIpResponsePort": {
                "type": "object",
                "properties": {
                    "public_ip_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Public Ip Id"
                    },
                    "public_ip": {
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Public Ip"
                    }
                },
                "title": "PublicIpResponsePort",
                "example": {
                    "public_ip": "100.94.5.31",
                    "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            }
        }
    },
    "tags": [
        {
            "name": "ports",
            "description": "Operations related to Ports"
        },
        {
            "name": "public_ips",
            "description": "Operations related to Public IPs"
        },
        {
            "name": "rules",
            "description": "Operations related to Rules"
        },
        {
            "name": "security_groups",
            "description": "Operations related to Security Groups"
        },
        {
            "name": "subnetpools",
            "description": "Operations related to Subnet Pools"
        },
        {
            "name": "subnets",
            "description": "Operations related to Subnets"
        },
        {
            "name": "vpcs",
            "description": "Operations related to VPCs"
        },
        {
            "name": "nat_gateways",
            "description": "Operations related to Nat Gateway"
        }
    ]
}