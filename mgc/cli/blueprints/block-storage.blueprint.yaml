blueprint: 1.0.0
name: block-storage
url: https://block-storage.magalu.cloud
version: 1.52.0
description: Operations for Block Storage API
components:
  schemas:
    VolumeAttachObject:
      type: object
      properties:
        block_storage_id:
          $ref: /block-storage/volumes/attach/parametersSchema/properties/id
        virtual_machine_id:
          $ref: /block-storage/volumes/attach/parametersSchema/properties/virtual_machine_id

  configsSchemas:
    default:
      $ref: /block-storage/volumes/get/configsSchema

children:
- name: volume-attachment
  description: Block Storage Volume Attachment
  isInternal: true
  children:

  - name: create
    description: Attach a volume to a virtual machine instance
    scopes:
    - "block-storage.write"

    parametersSchema:
      $ref: blueprint#/components/schemas/VolumeAttachObject
    configsSchema:
      $ref: blueprint#/components/configsSchemas/default
    resultSchema:
      $ref: blueprint#/components/schemas/VolumeAttachObject

    steps:
    - target: /block-storage/volumes/attach
      parameters:
        id: $.parameters.block_storage_id
        virtual_machine_id: $.parameters.virtual_machine_id

    links:
      get:
        target: /block-storage/volumes/get
        description: Check if this Public IP is attached to a Port
        parameters:
          id: $.parameters.id
        waitTermination:
          maxRetries: 5
          interval: 5s
          jsonPathQuery: |
            hasKey($.result, "attachment") && $.result.attachment.instance.id == $.owner.parameters.virtual_machine_id
          errorJsonPathQuery: |
            $.result.status == "attaching_error" || (!hasKey($.result, "attachment") && $.result.status == "completed")

  - name: get
    description: Check if a volume is attached to a virtual machine instance
    scopes:
    - "block-storage.read"

    parametersSchema:
      $ref: blueprint#/components/schemas/VolumeAttachObject
    configsSchema:
      $ref: blueprint#/components/configsSchemas/default
    resultSchema:
      $ref: blueprint#/components/schemas/VolumeAttachObject

    result: | # the result values must match the parameters, so use directly:
      {
        "block_storage_id": $.parameters.block_storage_id,
        "virtual_machine_id": $.parameters.virtual_machine_id
      }

    steps:
    - target: /block-storage/volumes/get
      parameters:
        id: $.parameters.block_storage_id

    waitTermination:
      maxRetries: 5
      interval: 5s
      jsonPathQuery: |
        hasKey($.last.result, "attachment") && $.last.result.attachment.instance.id == $.parameters.virtual_machine_id
      errorJsonPathQuery: |
        $.last.result.status == "attaching_error" || (!hasKey($.last.result, "attachment") && $.last.result.status == "completed")

  - name: delete
    description: Detach a volume from a virtual machine instance
    scopes:
    - "block-storage.write"

    confirm: |
      Detaching {{ .parameters.block_storage_id }} cannot be undone.
      Confirm?

    parametersSchema:
      $ref: blueprint#/components/schemas/VolumeAttachObject
    configsSchema:
      $ref: blueprint#/components/configsSchemas/default
    resultSchema:
      $ref: blueprint#/components/schemas/VolumeAttachObject

    result: | # the result values must match the parameters, so use directly:
      {
        "block_storage_id": $.parameters.block_storage_id,
      }

    steps:
    - target: /block-storage/volumes/detach
      parameters:
        id: $.parameters.block_storage_id
