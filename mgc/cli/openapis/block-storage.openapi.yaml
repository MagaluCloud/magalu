openapi: 3.0.3
info:
    title: Block Storage API Product
    description: Block Storage API Product Documentation
    contact:
        name: IaaS Products
        url: https://github.com/luizalabs
        email: kassio.junqueira@luizalabs.com
    version: 1.80.0
paths:
    /v0/snapshots:
        get:
            tags:
            - snapshots
            summary: List Snapshots
            description: List snapshots
            operationId: list_snapshots_v0_snapshots_get
            parameters:
            -   name: _sort
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/SortSnapshot'
                    default: created_at:desc
                    title: ' Sort'
                    type: string
            -   name: _limit
                in: query
                required: false
                schema:
                    type: integer
                    default: 50
                    title: ' Limit'
            -   name: _offset
                in: query
                required: false
                schema:
                    type: integer
                    default: 0
                    title: ' Offset'
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSnapshotResponse'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.read
        post:
            tags:
            - snapshots
            summary: Create Snapshot
            description: Create a snapshot
            operationId: create_snapshot_v0_snapshots_post
            parameters:
            -   name: force
                in: query
                required: false
                schema:
                    type: boolean
                    default: false
                    title: Force
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SnapshotCreateRequest'
            responses:
                '202':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    links:
                        delete:
                            operationId: delete_snapshot_v0_snapshots__snapshot_id__delete
                            description: Delete snapshot
                            parameters:
                                snapshot_id: $response.body#/id
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
    /v0/snapshots/{snapshot_id}:
        delete:
            tags:
            - snapshots
            summary: Delete Snapshot
            description: Delete a Snapshot
            operationId: delete_snapshot_v0_snapshots__snapshot_id__delete
            parameters:
            -   name: snapshot_id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Snapshot Id
                x-mgc-name: id
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
        post:
            tags:
            - snapshots
            summary: Restore Snapshot
            description: Restore a snapshot
            operationId: restore_snapshot_v0_snapshots__snapshot_id__post
            parameters:
            -   name: snapshot_id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Snapshot Id
                x-mgc-name: id
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SnapshotRestoreRequest'
            responses:
                '202':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
            x-mgc-name: restore
    /v0/usage:
        get:
            tags:
            - usage
            summary: Get Usage
            description: Retrieve usage for specific quota_slug (disk & volumes)
            operationId: get_usage_v0_usage_get
            parameters:
            -   name: quota_slug
                in: query
                required: false
                schema:
                    title: Quota Slug
                    nullable: true
                    type: string
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListResourceUsage'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.read
    /v0/volume_types:
        get:
            tags:
            - volume-types
            summary: List Volume Types
            description: Returns a list of volume types
            operationId: list_volume_types_v0_volume_types_get
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeTypeList'
                    links:
                        delete:
                            operationRef: '#/paths/~1v0~1snapshots~1{snapshot_id}/delete'
                            description: Delete snapshot
                            parameters:
                                snapshot_id: $response.body#/id
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.read
        post:
            tags:
            - volume-types
            summary: Create Volume Type
            description: Create volume type
            operationId: create_volume_type_v0_volume_types_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeTypeRequest'
                required: true
            responses:
                '201':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
    /v0/volume_types_all:
        get:
            tags:
            - volume-types
            summary: List Volume Types All
            description: Returns a list of all volume types from db
            operationId: list_volume_types_all_v0_volume_types_all_get
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeTypeDbListResponse'
            security:
            -   OAuth2:
                - block-storage.read
            x-mgc-hidden: true
    /v0/volumes:
        get:
            tags:
            - block-storage
            summary: List Volumes
            description: Returns a list of volumes from the provided tenant_id
            operationId: list_volumes_v0_volumes_get
            parameters:
            -   name: _limit
                in: query
                required: false
                schema:
                    type: integer
                    default: 50
                    title: ' Limit'
            -   name: _offset
                in: query
                required: false
                schema:
                    type: integer
                    default: 0
                    title: ' Offset'
            -   name: _sort
                in: query
                required: false
                schema:
                    type: string
                    default: created_at:desc
                    title: ' Sort'
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeListResponse'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.read
            x-mgc-description: List all Block Storage volumes
        post:
            tags:
            - block-storage
            summary: Create Volume
            description: Create a volume for a provided tenant_id
            operationId: create_volume_v0_volumes_post
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeCreateRequest'
            responses:
                '202':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeCreateResponse'
                    links:
                        read:
                            operationRef: '#/paths/~1v0~1volumes~1{id}/get'
                            description: Read Block Storage volume
                            parameters:
                                id: $response.body#/id
                        update:
                            operationRef: '#/paths/~1v0~1volumes~1{id}/patch'
                            description: Update Block Storage volume
                            parameters:
                                id: $response.body#/id
                        delete:
                            operationRef: '#/paths/~1v0~1volumes~1{id}/delete'
                            description: Delete Block Storage volume
                            parameters:
                                id: $response.body#/id
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
            x-mgc-description: Create a Block Storage volume
    /v0/volumes/{id}:
        delete:
            tags:
            - block-storage
            summary: Delete Volume
            description: Delete a volume from the provided tenant_id
            operationId: delete_volume_v0_volumes__id__delete
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    title: Id
            -   name: force
                in: query
                required: false
                schema:
                    type: boolean
                    default: false
                    title: Force
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
            x-mgc-description: Delete a Block Storage volume
        get:
            tags:
            - block-storage
            summary: Volume Details
            description: Returns a volume details from the provided tenant_id
            operationId: volume_details_v0_volumes__id__get
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    title: Id
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                    links:
                        update:
                            operationRef: '#/paths/~1v0~1volumes~1{id}/patch'
                            description: Update Block Storage volume
                            parameters:
                                id: $request.path.id
                        delete:
                            operationRef: '#/paths/~1v0~1volumes~1{id}/delete'
                            description: Delete Block Storage volume
                            parameters:
                                id: $request.path.id
                        create/attach-to-vm:
                            description: Attach this BS Volume to a VM instance
                            operationRef: '#/paths/~1v0~1volumes~1{id}~1attach~1{virtual_machine_id}/post'
                            parameters:
                                id: $request.path.id
                        delete/attach-to-vm:
                            description: Detach this BS Volume to a VM instance
                            operationRef: '#/paths/~1v0~1volumes~1{id}~1detach~1{virtual_machine_id}/post'
                            parameters:
                                id: $request.path.id
                        read/attach-to-vm:
                            description: Check if this BS Volume is attached to a
                                VM instance
                            operationRef: '#/paths/~1v0~1volumes~1{id}/get'
                            parameters:
                                id: $request.path.id
                            x-mgc-extra-parameters:
                            -   name: virtual_machine_id
                                required: true
                                schema:
                                    type: string
                                    format: uuid
                            x-mgc-wait-termination:
                                maxRetries: 2
                                interval: 5s
                                jsonPathQuery: $.result.attachments[?(@.virtual_machine_id
                                    == $.parameters.virtual_machine_id)]
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.read
            x-mgc-description: Get a Block Storage volume details
        patch:
            tags:
            - block-storage
            summary: Update Volume
            description: Update a volume's name from the provided tenant_id
            operationId: update_volume_v0_volumes__id__patch
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    title: Id
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeUpdateRequest'
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                    links:
                        read:
                            operationRef: '#/paths/~1v0~1volumes~1{id}/get'
                            description: Read Block Storage volume
                            parameters:
                                id: $request.path.id
                        delete:
                            operationRef: '#/paths/~1v0~1volumes~1{id}/delete'
                            description: Delete Block Storage volume
                            parameters:
                                id: $request.path.id
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
            x-mgc-description: Update a Block Storage volume
    /v0/volumes/{id}/attach/{virtual_machine_id}:
        post:
            tags:
            - block-storage
            summary: Attach Volume
            description: Attach a volume into an instance, both from the provided
                tenant_id
            operationId: attach_volume_v0_volumes__id__attach__virtual_machine_id__post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    title: Id
            -   name: virtual_machine_id
                in: path
                required: true
                schema:
                    type: string
                    title: Virtual Machine Id
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                    links:
                        delete:
                            description: Detach from a Virtual Machine instance
                            operationRef: '#/paths/~1v0~1volumes~1{id}~1detach~1{virtual_machine_id}/post'
                            parameters:
                                id: $request.path.id
                        read:
                            description: Check if block storage is attached to Virtual
                                Machine instance
                            operationRef: '#/paths/~1v0~1volumes/get'
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                maxRetries: 1
                                interval: 5s
                                jsonPathQuery: $.result.attachments[?(@.virtual_machine_id
                                    == $.owner.parameters.virtual_machine_id)]
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
            x-mgc-name: attach
    /v0/volumes/{id}/detach/{virtual_machine_id}:
        post:
            tags:
            - block-storage
            summary: Detach Volume
            description: 'Detaches a volume from an instance. Make sure to unmount

                any file systems on the device within your operating system before

                detaching the volume. Failure to do so can result in the volume

                becoming stuck in the busy state while detaching. If this happens,

                detachment can be delayed indefinitely until you unmount the volume,

                force detachment, reboot the instance, or all three.'
            operationId: detach_volume_v0_volumes__id__detach__virtual_machine_id__post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    title: Id
            -   name: virtual_machine_id
                in: path
                required: true
                schema:
                    type: string
                    title: Virtual Machine Id
            -   name: force
                in: query
                required: false
                schema:
                    type: boolean
                    default: false
                    title: Force
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            security:
            -   OAuth2:
                - block-storage.write
            x-mgc-name: detach
    /v1/volume_types:
        get:
            tags:
            - volume-types-v1
            summary: List Volume Types V1
            description: Returns a list of volume types
            operationId: list_volume_types_v1_v1_volume_types_get
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericVolumeTypeList_VolumeTypeResponse_'
            security:
            -   OAuth2:
                - block-storage.read
    /v1/volumes:
        post:
            tags:
            - block-storage-v1
            summary: Create a volume asynchronously.
            description: "Creates a Volume in the current tenant which is logged in.\n\
                \n    A volume is ready for you to use when it's in the available\
                \ state and the\n    completed status.\n\n    #### Notes\n    - For\
                \ the volume type data, you can use the block-storage volume-types\
                \ list\n        command to list all available volume types.\n    -\
                \ You can verify the state of your volume using the block-storage\
                \ volume\n        get --id [uuid] command."
            operationId: create_volume_v1_v1_volumes_post
            parameters:
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeCreateRequestV1'
            responses:
                '202':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /v1/volumes/{id}:
        delete:
            tags:
            - block-storage-v1
            summary: Delete Volume V1
            description: Delete a volume from the provided tenant_id
            operationId: delete_volume_v1_v1_volumes__id__delete
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /v1/volumes/{id}/attach/{virtual_machine_id}:
        post:
            tags:
            - block-storage-v1
            summary: Attach Volume V1
            description: Attach a volume into an instance, both from the provided
                tenant_id
            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: virtual_machine_id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Virtual Machine Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /v1/volumes/{id}/detach/{virtual_machine_id}:
        post:
            tags:
            - block-storage-v1
            summary: Detach Volume V1
            description: 'Detaches a volume from an instance. Make sure to unmount

                any file systems on the device within your operating system before

                detaching the volume. Failure to do so can result in the volume

                becoming stuck in the busy state while detaching. If this happens,

                detachment can be delayed indefinitely until you unmount the volume,

                force detachment, reboot the instance, or all three.'
            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: virtual_machine_id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Virtual Machine Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /v1/volumes/{id}/extend:
        post:
            tags:
            - volumes-v1
            summary: Extend Volume
            description: Increase selected volume size
            operationId: extend_volume_v1_volumes__id__extend_post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeExtendRequest'
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /v1/volumes/{id}/retype:
        post:
            tags:
            - volumes-v1
            summary: Retype Volume
            description: Change the volume type from a volume
            operationId: retype_volume_v1_volumes__id__retype_post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeRetypeRequest'
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /latest/volume_types:
        get:
            tags:
            - volume-types-latest
            summary: List Volume Types V1
            description: Returns a list of volume types
            operationId: list_volume_types_v1_latest_volume_types_get
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericVolumeTypeList_VolumeTypeResponse_'
            security:
            -   OAuth2:
                - block-storage.read
    /latest/volumes:
        post:
            tags:
            - block-storage-latest
            summary: Create a volume asynchronously.
            description: "Creates a Volume in the current tenant which is logged in.\n\
                \n    A volume is ready for you to use when it's in the available\
                \ state and the\n    completed status.\n\n    #### Notes\n    - For\
                \ the volume type data, you can use the block-storage volume-types\
                \ list\n        command to list all available volume types.\n    -\
                \ You can verify the state of your volume using the block-storage\
                \ volume\n        get --id [uuid] command."
            operationId: create_volume_v1_latest_volumes_post
            parameters:
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeCreateRequestV1'
            responses:
                '202':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /latest/volumes/{id}:
        delete:
            tags:
            - block-storage-latest
            summary: Delete Volume V1
            description: Delete a volume from the provided tenant_id
            operationId: delete_volume_v1_latest_volumes__id__delete
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /latest/volumes/{id}/attach/{virtual_machine_id}:
        post:
            tags:
            - block-storage-latest
            summary: Attach Volume V1
            description: Attach a volume into an instance, both from the provided
                tenant_id
            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: virtual_machine_id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Virtual Machine Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /latest/volumes/{id}/detach/{virtual_machine_id}:
        post:
            tags:
            - block-storage-latest
            summary: Detach Volume V1
            description: 'Detaches a volume from an instance. Make sure to unmount

                any file systems on the device within your operating system before

                detaching the volume. Failure to do so can result in the volume

                becoming stuck in the busy state while detaching. If this happens,

                detachment can be delayed indefinitely until you unmount the volume,

                force detachment, reboot the instance, or all three.'
            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: virtual_machine_id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Virtual Machine Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /latest/volumes/{id}/extend:
        post:
            tags:
            - volumes-latest
            summary: Extend Volume
            description: Increase selected volume size
            operationId: extend_volume_latest_volumes__id__extend_post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeExtendRequest'
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /latest/volumes/{id}/retype:
        post:
            tags:
            - volumes-latest
            summary: Retype Volume
            description: Change the volume type from a volume
            operationId: retype_volume_latest_volumes__id__retype_post
            parameters:
            -   name: id
                in: path
                required: true
                schema:
                    type: string
                    format: uuid
                    title: Id
            -   name: project_type
                in: query
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/ProjectTypeAll'
                    default: default
                    title: Project Type
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeRetypeRequest'
            responses:
                '204':
                    description: Successful Response
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
            x-viveiro: true
            security:
            -   OAuth2:
                - block-storage.write
    /healthcheck:
        get:
            tags:
            - healthchecks
            summary: Health Check
            description: Check api status
            operationId: health_check_healthcheck_get
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthCheck'
            security:
            -   OAuth2:
                - block-storage.read
components:
    schemas:
        AttachmentResponse:
            properties:
                virtual_machine_id:
                    type: string
                    title: Virtual Machine Id
            type: object
            required:
            - virtual_machine_id
            title: AttachmentResponse
            example:
                virtual_machine_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        DiskType:
            type: string
            enum:
            - nvme
            - hdd
            title: DiskType
        GenericVolumeTypeList_VolumeTypeResponse_:
            properties:
                types:
                    items:
                        $ref: '#/components/schemas/block_storage_api_product__volume__models__volume_type_v1__VolumeTypeResponse'
                    type: array
                    title: Types
            type: object
            required:
            - types
            title: GenericVolumeTypeList[VolumeTypeResponse]
            example:
                types:
                -   disk_type: nvme
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    iops:
                        read: 1000
                        write: 1000
                    name: my_volume_type
                    status: active
        HTTPValidationError:
            properties:
                message:
                    title: Message
                    type: string
                slug:
                    title: Slug
                    type: string
            type: object
            title: HTTPValidationError
            example:
                message: Unauthorized
                slug: Unauthorized
        HealthCheck:
            properties:
                status:
                    type: string
                    title: Status
            type: object
            required:
            - status
            title: HealthCheck
            example:
                status: OK
        IdRequest:
            properties:
                id:
                    type: string
                    minLength: 1
                    title: Id
            type: object
            required:
            - id
            title: IdRequest
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        IdResponse:
            properties:
                id:
                    type: string
                    minLength: 1
                    title: Id
            type: object
            required:
            - id
            title: IdResponse
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        ListResourceUsage:
            properties:
                results:
                    items:
                        $ref: '#/components/schemas/ResourceUsageResponse'
                    type: array
                    title: Results
            type: object
            required:
            - results
            title: ListResourceUsage
            example:
                results:
                -   quota_slug: disk
                    used: 10
        ListSnapshotResponse:
            properties:
                results:
                    items:
                        $ref: '#/components/schemas/SnapshotResponse'
                    type: array
                    title: Results
            type: object
            required:
            - results
            title: ListSnapshotResponse
            example:
                results:
                -   created_at: '2023-05-26T11:20:57Z'
                    id: some_id
                    name: some_name
                    size: 10
                    status: created
                    updated_at: '2023-05-26T12:20:57Z'
                    volume_id: 00000000-0000-0000-0000-000000000000
                    volume_type_id: 00000000-0000-0000-0000-000000000000
        ProjectType:
            type: string
            enum:
            - dbaas
            - iamaas
            - k8saas
            - mngsvc
            title: ProjectType
        ProjectTypeAll:
            type: string
            enum:
            - dbaas
            - iamaas
            - k8saas
            - mngsvc
            - default
            title: ProjectTypeAll
        ResourceUsageResponse:
            properties:
                quota_slug:
                    type: string
                    title: Quota Slug
                used:
                    type: integer
                    title: Used
            type: object
            required:
            - quota_slug
            - used
            title: ResourceUsageResponse
            example:
                quota_slug: disk
                used: 10
        SnapshotCreateRequest:
            properties:
                volume_id:
                    type: string
                    title: Volume Id
                name:
                    type: string
                    title: Name
            type: object
            required:
            - volume_id
            - name
            title: SnapshotCreateRequest
            example:
                name: snapshot name
                volume_id: 00000000-0000-0000-0000-000000000000
        SnapshotResponse:
            properties:
                id:
                    type: string
                    title: Id
                created_at:
                    type: string
                    title: Created At
                    example: '2022-01-01T00:00:10Z'
                updated_at:
                    title: Updated At
                    nullable: true
                    type: string
                    example: '2022-01-01T00:00:10Z'
                name:
                    title: Name
                    nullable: true
                    type: string
                volume_id:
                    title: Volume Id
                    nullable: true
                    type: string
                volume_type_id:
                    type: string
                    title: Volume Type Id
                status:
                    type: string
                    title: Status
                size:
                    type: integer
                    title: Size
            type: object
            required:
            - id
            - created_at
            - volume_type_id
            - status
            - size
            title: SnapshotResponse
            example:
                created_at: '2023-05-26T11:20:57Z'
                id: some_id
                name: some_name
                size: 10
                status: created
                updated_at: '2023-05-26T12:20:57Z'
                volume_id: 00000000-0000-0000-0000-000000000000
                volume_type_id: 00000000-0000-0000-0000-000000000000
        SnapshotRestoreRequest:
            properties:
                name:
                    type: string
                    title: Name
                description:
                    title: Description
                    nullable: true
                    type: string
            type: object
            required:
            - name
            title: SnapshotRestoreRequest
            example:
                description: volume description
                name: volume name
        SortSnapshot:
            type: string
            enum:
            - created_at:asc
            - updated_at:asc
            - status:asc
            - id:asc
            - created_at:desc
            - updated_at:desc
            - status:desc
            - id:desc
            title: SortSnapshot
        Specs:
            properties:
                total_iops_sec:
                    type: integer
                    title: Total Iops Sec
            type: object
            required:
            - total_iops_sec
            title: Specs
        ValidationError:
            properties:
                message:
                    title: Message
                    type: string
                slug:
                    title: Slug
                    type: string
            type: object
            required:
            - loc
            - msg
            - type
            title: ValidationError
            example:
                message: Unauthorized
                slug: Unauthorized
        VolumeCreateRequest:
            properties:
                name:
                    type: string
                    maxLength: 255
                    minLength: 1
                    title: Name
                size:
                    type: integer
                    exclusiveMaximum: true
                    exclusiveMinimum: true
                    title: Size
                    description: Gibibytes (GiB)
                    maximum: 2147483646
                    minimum: 0
                volume_type_id:
                    title: Volume Type Id
                    nullable: true
                    type: string
                volume_type:
                    title: Volume Type
                    nullable: true
                    type: string
                description:
                    title: Description
                    nullable: true
                    type: string
            type: object
            required:
            - name
            - size
            title: VolumeCreateRequest
            example:
                description: volume description
                name: volume name
                size: 10
                volume_type: rbd
                volume_type_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        VolumeCreateRequestV1:
            properties:
                name:
                    type: string
                    maxLength: 255
                    minLength: 1
                    title: Name
                size:
                    type: integer
                    maximum: 2147483648
                    minimum: 1
                    title: Size
                    description: Gibibytes (GiB)
                type:
                    anyOf:
                    -   $ref: '#/components/schemas/IdRequest'
                    -   $ref: '#/components/schemas/VolumeName'
                    title: Type
                availability_zone:
                    title: Availability Zone
                    nullable: true
                    type: string
            type: object
            required:
            - name
            - size
            - type
            title: VolumeCreateRequestV1
            example:
                availability_zone: some_az
                name: volume name
                size: 10
                type:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        VolumeCreateResponse:
            properties:
                id:
                    type: string
                    title: Id
            type: object
            required:
            - id
            title: VolumeCreateResponse
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        VolumeExtendRequest:
            properties:
                new_volume_size:
                    type: integer
                    exclusiveMinimum: true
                    title: New Volume Size
                    description: New volume size in GB
                    minimum: 0
            type: object
            required:
            - new_volume_size
            title: VolumeExtendRequest
            example:
                new_volume_size: 20
        VolumeListResponse:
            properties:
                volumes:
                    items:
                        $ref: '#/components/schemas/VolumeResponse'
                    type: array
                    title: Volumes
            type: object
            required:
            - volumes
            title: VolumeListResponse
            example:
                volumes:
                -   attachments:
                    -   virtual_machine_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    created_at: '2022-01-01T00:00:10Z'
                    description: volume description
                    error: description if status error
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: volume name
                    size: 10
                    status: available
                    updated_at: '2022-01-01T00:00:10Z'
                    volume_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    volume_type:
                        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                        name: rbd
                        sku: deprecated
        VolumeName:
            properties:
                name:
                    type: string
                    maxLength: 255
                    minLength: 1
                    title: Name
            type: object
            required:
            - name
            title: VolumeName
            example:
                name: some_resource_name
        VolumeResponse:
            properties:
                id:
                    type: string
                    title: Id
                volume_id:
                    title: Volume Id
                    nullable: true
                    type: string
                status:
                    type: string
                    title: Status
                error:
                    title: Error
                    nullable: true
                    type: string
                size:
                    type: integer
                    title: Size
                    description: Gibibytes (GiB)
                name:
                    type: string
                    title: Name
                volume_type:
                    $ref: '#/components/schemas/VolumeTypeResponseForVolume'
                description:
                    title: Description
                    nullable: true
                    type: string
                attachments:
                    title: Attachments
                    nullable: true
                    items:
                        $ref: '#/components/schemas/AttachmentResponse'
                    type: array
                created_at:
                    title: Created At
                    nullable: true
                    type: string
                    example: '2022-01-01T00:00:10Z'
                updated_at:
                    title: Updated At
                    nullable: true
                    type: string
                    example: '2022-01-01T00:00:10Z'
            type: object
            required:
            - id
            - status
            - size
            - name
            - volume_type
            title: VolumeResponse
            example:
                attachments:
                -   virtual_machine_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                created_at: '2022-01-01T00:00:10Z'
                description: volume description
                error: description if status error
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: volume name
                size: 10
                status: available
                updated_at: '2022-01-01T00:00:10Z'
                volume_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                volume_type:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: rbd
                    sku: deprecated
        VolumeRetypeRequest:
            properties:
                volume_type_id:
                    type: string
                    title: Volume Type Id
            type: object
            required:
            - volume_type_id
            title: VolumeRetypeRequest
            example:
                volume_type_id: 00000000-0000-0000-0000-000000000000
        VolumeTypeDbListResponse:
            properties:
                types:
                    items:
                        $ref: '#/components/schemas/VolumeTypeDbResponse'
                    type: array
                    title: Types
            type: object
            required:
            - types
            title: VolumeTypeDbListResponse
            example:
                types:
                -   created_at: '2022-01-01 00:00:00'
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    internal: true
                    name: cloud_nvme
                    sku: sku1234
                    status: active
                    total_iops_sec: 1000
                    type: nvme
                    updated_at: '2022-01-01 00:00:00'
        VolumeTypeDbResponse:
            properties:
                id:
                    type: string
                    title: Id
                name:
                    type: string
                    title: Name
                sku:
                    type: string
                    title: Sku
                internal:
                    type: boolean
                    title: Internal
                total_iops_sec:
                    type: integer
                    title: Total Iops Sec
                type:
                    type: string
                    title: Type
                status:
                    type: string
                    title: Status
                created_at:
                    title: Created At
                    nullable: true
                    type: string
                    format: date-time
                updated_at:
                    title: Updated At
                    nullable: true
                    type: string
                    format: date-time
            type: object
            required:
            - id
            - name
            - sku
            - internal
            - total_iops_sec
            - type
            - status
            title: VolumeTypeDbResponse
            example:
                created_at: '2022-01-01 00:00:00'
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                internal: true
                name: cloud_nvme
                sku: sku1234
                status: active
                total_iops_sec: 1000
                type: nvme
                updated_at: '2022-01-01 00:00:00'
        VolumeTypeList:
            properties:
                types:
                    items:
                        $ref: '#/components/schemas/block_storage_api_product__volume__models__volume_type__VolumeTypeResponse'
                    type: array
                    title: Types
            type: object
            required:
            - types
            title: VolumeTypeList
            example:
                types:
                -   id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: cloud_nvme
                    sku: sku1234
                    specs:
                        total_iops_sec: 1000
                    status: active
                    type: nvme
        VolumeTypeRequest:
            properties:
                name:
                    type: string
                    title: Name
                sku:
                    type: string
                    title: Sku
                internal:
                    type: boolean
                    title: Internal
                type:
                    type: string
                    title: Type
            type: object
            required:
            - name
            - sku
            - internal
            - type
            title: VolumeTypeRequest
            example:
                internal: true
                name: cloud_nvme
                sku: sku1234
                type: nvme
        VolumeTypeResponseForVolume:
            properties:
                id:
                    type: string
                    title: Id
                name:
                    type: string
                    title: Name
                sku:
                    type: string
                    title: Sku
                    default: deprecated
            type: object
            required:
            - id
            - name
            title: VolumeTypeResponseForVolume
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: cloud_nvme
                sku: deprecated
        VolumeTypeSpec:
            properties:
                read:
                    type: integer
                    title: Read
                write:
                    type: integer
                    title: Write
            type: object
            required:
            - read
            - write
            title: VolumeTypeSpec
        VolumeTypeStatus:
            type: string
            enum:
            - active
            - deprecated
            - deleted
            title: VolumeTypeStatus
        VolumeUpdateRequest:
            properties:
                name:
                    type: string
                    maxLength: 255
                    minLength: 1
                    title: Name
            type: object
            required:
            - name
            title: VolumeUpdateRequest
            example:
                name: new volume name
        block_storage_api_product__volume__models__volume_type__VolumeTypeResponse:
            properties:
                id:
                    type: string
                    title: Id
                name:
                    type: string
                    title: Name
                type:
                    type: string
                    title: Type
                sku:
                    type: string
                    title: Sku
                status:
                    title: Status
                    nullable: true
                    type: string
                specs:
                    nullable: true
                    $ref: '#/components/schemas/Specs'
            type: object
            required:
            - id
            - name
            - type
            - sku
            title: VolumeTypeResponse
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: cloud_nvme
                sku: sku1234
                specs:
                    total_iops_sec: 1000
                status: active
                type: nvme
        block_storage_api_product__volume__models__volume_type_v1__VolumeTypeResponse:
            properties:
                iops:
                    $ref: '#/components/schemas/VolumeTypeSpec'
                id:
                    type: string
                    title: Id
                name:
                    type: string
                    title: Name
                disk_type:
                    $ref: '#/components/schemas/DiskType'
                status:
                    $ref: '#/components/schemas/VolumeTypeStatus'
            type: object
            required:
            - iops
            - id
            - name
            - disk_type
            - status
            title: VolumeTypeResponse
            example:
                disk_type: nvme
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                iops:
                    read: 1000
                    write: 1000
                name: my_volume_type
                status: active
$id: https://block-storage.jaxyendy.com/openapi.json
servers:
-   url: https://{env}/{region}/volume
    variables:
        region:
            description: Region to reach the service
            default: br-ne-1
            enum:
            - br-ne-1
            - br-se-1
        env:
            description: Environment to use
            default: api2.magalu.cloud
            enum:
            - api2.magalu.cloud
            - api.pre-prod.jaxyendy.com
            x-mgc-transforms:
            -   type: translate
                translations:
                -   from: prod
                    to: api2.magalu.cloud
                -   from: pre-prod
                    to: api.pre-prod.jaxyendy.com
tags:
-   name: healthchecks
    description: healthchecks
    x-mgc-hidden: true
-   name: usage
    description: Usage
-   name: snapshots
    description: Snapshots
-   name: volume-types
    description: Volume types
-   name: block-storage
    x-mgc-description: Block Storage Volume Resources
    x-mgc-name: volume
-   name: block-storage-v1
    x-mgc-description: Block Storage Volume Resources V1
    x-mgc-name: volume-v1
-   name: block-storage-latest
    x-mgc-description: Block Storage Volume Resources Latest
    x-mgc-name: volume-latest
-   name: volume-types-v1
    description: Volume types V1
    x-mgc-name: volume-types-v1
-   name: volume-types-latest
    description: Volume types Latest
    x-mgc-name: volume-types-latest
