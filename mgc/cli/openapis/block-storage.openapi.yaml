openapi: 3.0.3
info:
    contact:
        email: kassio.junqueira@luizalabs.com
        name: IaaS Products
        url: https://github.com/luizalabs
    description: Block Storage API Product Documentation
    title: Block Storage API Product
    version: 1.92.2
components:
    schemas:
        AttachmentResponse:
            example:
                virtual_machine_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                virtual_machine_id:
                    title: Virtual Machine Id
                    type: string
            required:
            - virtual_machine_id
            title: AttachmentResponse
            type: object
        DiskType:
            enum:
            - nvme
            - hdd
            title: DiskType
            type: string
        ErrorResponse:
            example:
                message: Unauthorized
                slug: Unauthorized
            properties:
                message:
                    title: Message
                    type: string
                slug:
                    title: Slug
                    type: string
            required:
            - slug
            - message
            - detail
            title: ErrorResponse
            type: object
        GenericVolumeTypeList_VolumeTypeResponse_:
            example:
                types:
                -   disk_type: nvme
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    iops:
                        read: 1000
                        write: 1000
                    name: my_volume_type
                    status: active
            properties:
                types:
                    items:
                        $ref: '#/components/schemas/block_storage_api_product__volume_type__models__v1__VolumeTypeResponse'
                    title: Types
                    type: array
            required:
            - types
            title: GenericVolumeTypeList[VolumeTypeResponse]
            type: object
        HTTPValidationError:
            properties:
                message:
                    title: Message
                    type: string
                slug:
                    title: Slug
                    type: string
            title: HTTPValidationError
            type: object
            example:
                message: Unauthorized
                slug: Unauthorized
        IdRequest:
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                id:
                    minLength: 1
                    title: Id
                    type: string
            required:
            - id
            title: IdRequest
            type: object
        IdResponse:
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                id:
                    minLength: 1
                    title: Id
                    type: string
            required:
            - id
            title: IdResponse
            type: object
        ListResourceUsage:
            example:
                results:
                -   quota_slug: disk
                    used: 10
            properties:
                results:
                    items:
                        $ref: '#/components/schemas/ResourceUsageResponse'
                    title: Results
                    type: array
            required:
            - results
            title: ListResourceUsage
            type: object
        ListSnapshotResponse:
            example:
                results:
                -   created_at: '2023-05-26T11:20:57Z'
                    id: some_id
                    name: some_name
                    size: 10
                    status: created
                    updated_at: '2023-05-26T12:20:57Z'
                    volume_id: 00000000-0000-0000-0000-000000000000
                    volume_type_id: 00000000-0000-0000-0000-000000000000
            properties:
                results:
                    items:
                        $ref: '#/components/schemas/block_storage_api_product__volume__models__snapshots__SnapshotResponse'
                    title: Results
                    type: array
            required:
            - results
            title: ListSnapshotResponse
            type: object
        Name:
            example:
                name: some_resource_name
            properties:
                name:
                    maxLength: 255
                    minLength: 1
                    title: Name
                    type: string
            required:
            - name
            title: Name
            type: object
        RenameVolumeRequest:
            example:
                name: volume name
            properties:
                name:
                    maxLength: 255
                    minLength: 1
                    title: Name
                    type: string
            required:
            - name
            title: RenameVolumeRequest
            type: object
        ResourceUsageResponse:
            example:
                quota_slug: disk
                used: 10
            properties:
                quota_slug:
                    title: Quota Slug
                    type: string
                used:
                    title: Used
                    type: integer
            required:
            - quota_slug
            - used
            title: ResourceUsageResponse
            type: object
        SnapshotCreateRequest:
            example:
                name: snapshot name
                volume_id: 00000000-0000-0000-0000-000000000000
            properties:
                name:
                    title: Name
                    type: string
                volume_id:
                    title: Volume Id
                    type: string
            required:
            - volume_id
            - name
            title: SnapshotCreateRequest
            type: object
        SnapshotCreationRequest:
            example:
                description: my-snapshot
                name: snapshot name
                volume:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                description:
                    type: string
                    title: Description
                name:
                    title: Name
                    type: string
                volume:
                    anyOf:
                    -   $ref: '#/components/schemas/IdRequest'
                    -   $ref: '#/components/schemas/Name'
                    title: Volume
            required:
            - volume
            - name
            - description
            title: SnapshotCreationRequest
            type: object
        SnapshotListResponse:
            example:
                snapshots:
                -   created_at: '2022-01-01T00:00:10Z'
                    description: my snapshot for testing
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: My snapshot
                    size: 10
                    state: available
                    status: completed
                    updated_at: '2022-01-01T00:00:10Z'
                    volume:
                        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                snapshots:
                    items:
                        $ref: '#/components/schemas/block_storage_api_product__snapshot__models__payload__SnapshotResponse'
                    title: Snapshots
                    type: array
            required:
            - snapshots
            title: SnapshotListResponse
            type: object
        SnapshotStateV1:
            enum:
            - new
            - available
            - deleted
            title: SnapshotStateV1
            type: string
        SnapshotStatusV1:
            enum:
            - provisioning
            - creating
            - creating_error
            - creating_error_quota
            - completed
            - deleting
            - deleted
            - deleted_error
            title: SnapshotStatusV1
            type: string
        SnapshotVolume:
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: My volume
                size: 10
                type:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: My volume type
            properties:
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
                size:
                    title: Size
                    type: integer
                type:
                    $ref: '#/components/schemas/SnapshotVolumeType'
            required:
            - id
            - name
            - size
            - type
            title: SnapshotVolume
            type: object
        SnapshotVolumeType:
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: My volume type
            properties:
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
            required:
            - id
            - name
            title: SnapshotVolumeType
            type: object
        SortSnapshot:
            enum:
            - created_at:asc
            - updated_at:asc
            - status:asc
            - id:asc
            - created_at:desc
            - updated_at:desc
            - status:desc
            - id:desc
            title: SortSnapshot
            type: string
        Specs:
            properties:
                total_iops_sec:
                    title: Total Iops Sec
                    type: integer
            required:
            - total_iops_sec
            title: Specs
            type: object
        ValidationError:
            properties:
                message:
                    title: Message
                    type: string
                slug:
                    title: Slug
                    type: string
            required:
            - loc
            - msg
            - type
            title: ValidationError
            type: object
            example:
                message: Unauthorized
                slug: Unauthorized
        VolumeCreateRequest:
            example:
                description: volume description
                name: volume name
                size: 10
                volume_type: rbd
                volume_type_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                description:
                    type: string
                    title: Description
                name:
                    maxLength: 255
                    minLength: 1
                    title: Name
                    type: string
                size:
                    description: Gibibytes (GiB)
                    maximum: 2147483646.0
                    minimum: 0.0
                    title: Size
                    type: integer
                volume_type:
                    type: string
                    title: Volume Type
                volume_type_id:
                    type: string
                    title: Volume Type Id
            required:
            - name
            - size
            title: VolumeCreateRequest
            type: object
        VolumeCreateRequestV1:
            example:
                name: volume name
                size: 10
                type:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                name:
                    maxLength: 255
                    minLength: 1
                    title: Name
                    type: string
                size:
                    description: Gibibytes (GiB)
                    maximum: 2147483648.0
                    minimum: 1.0
                    title: Size
                    type: integer
                type:
                    anyOf:
                    -   $ref: '#/components/schemas/IdRequest'
                    -   $ref: '#/components/schemas/Name'
                    title: Type
            required:
            - name
            - size
            - type
            title: VolumeCreateRequestV1
            type: object
        VolumeCreateResponse:
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                id:
                    title: Id
                    type: string
            required:
            - id
            title: VolumeCreateResponse
            type: object
        VolumeExtendRequest:
            example:
                size: 20
            properties:
                size:
                    description: New volume size in GB
                    minimum: 0.0
                    title: Size
                    type: integer
            required:
            - size
            title: VolumeExtendRequest
            type: object
        VolumeListResponse:
            example:
                volumes:
                -   attachments:
                    -   virtual_machine_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    created_at: '2022-01-01T00:00:10Z'
                    description: volume description
                    error: description if status error
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: volume name
                    size: 10
                    status: available
                    updated_at: '2022-01-01T00:00:10Z'
                    volume_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    volume_type:
                        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                        name: rbd
                        sku: deprecated
            properties:
                volumes:
                    items:
                        $ref: '#/components/schemas/VolumeResponse'
                    title: Volumes
                    type: array
            required:
            - volumes
            title: VolumeListResponse
            type: object
        VolumeResponse:
            example:
                attachments:
                -   virtual_machine_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                created_at: '2022-01-01T00:00:10Z'
                description: volume description
                error: description if status error
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: volume name
                size: 10
                status: available
                updated_at: '2022-01-01T00:00:10Z'
                volume_id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                volume_type:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: rbd
                    sku: deprecated
            properties:
                attachments:
                    items:
                        $ref: '#/components/schemas/AttachmentResponse'
                    type: array
                    title: Attachments
                created_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Created At
                description:
                    type: string
                    title: Description
                error:
                    type: string
                    title: Error
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
                size:
                    description: Gibibytes (GiB)
                    title: Size
                    type: integer
                status:
                    title: Status
                    type: string
                updated_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Updated At
                volume_id:
                    type: string
                    title: Volume Id
                volume_type:
                    $ref: '#/components/schemas/VolumeTypeResponseForVolume'
            required:
            - id
            - status
            - size
            - name
            - volume_type
            title: VolumeResponse
            type: object
        VolumeResponseError:
            properties:
                message:
                    title: Message
                    type: string
                slug:
                    title: Slug
                    type: string
            required:
            - slug
            - message
            title: VolumeResponseError
            type: object
            example:
                message: Unauthorized
                slug: Unauthorized
        VolumeResponseV1:
            example:
                created_at: '2022-01-01T00:00:10Z'
                error:
                    message: You have reached the limit of allowed disks. Please,
                        remove unused disks or contact support to increase your quota.
                    slug: creating_error_quota
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: volume name
                size: 10
                state: available
                status: completed
                type:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                updated_at: '2022-01-01T00:00:10Z'
            properties:
                created_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Created At
                error:
                    anyOf:
                    -   $ref: '#/components/schemas/VolumeResponseError'
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
                size:
                    title: Size
                    type: integer
                state:
                    $ref: '#/components/schemas/VolumeStateV1'
                status:
                    $ref: '#/components/schemas/VolumeStatusV1'
                type:
                    anyOf:
                    -   $ref: '#/components/schemas/IdRequest'
                    -   $ref: '#/components/schemas/block_storage_api_product__volume_type__models__v1__VolumeTypeResponse'
                    title: Type
                updated_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Updated At
            required:
            - id
            - name
            - size
            - status
            - state
            - created_at
            - updated_at
            - type
            title: VolumeResponseV1
            type: object
        VolumeRetypeRequest:
            example:
                new_type:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                new_type:
                    anyOf:
                    -   $ref: '#/components/schemas/IdRequest'
                    -   $ref: '#/components/schemas/Name'
                    title: New Type
            required:
            - new_type
            title: VolumeRetypeRequest
            type: object
        VolumeStateV1:
            enum:
            - new
            - available
            - in-use
            - deleted
            - legacy
            title: VolumeStateV1
            type: string
        VolumeStatusV1:
            enum:
            - provisioning
            - creating
            - creating_error
            - creating_error_quota
            - completed
            - extend_pending
            - extending
            - extend_error
            - extend_quota
            - attaching_pending
            - attaching_error
            - attaching
            - in_use
            - detaching_pending
            - detaching_error
            - detaching
            - retype_pending
            - retyping
            - retype_error
            - retype_error_quota
            - deleting_pending
            - deleting
            - deleted
            - deleted_error
            title: VolumeStatusV1
            type: string
        VolumeTypeDbListResponse:
            example:
                types:
                -   created_at: '2022-01-01T00:00:10Z'
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    internal: true
                    name: cloud_nvme
                    sku: sku1234
                    status: active
                    total_iops_sec: 1000
                    type: nvme
                    updated_at: '2022-01-01T00:00:10Z'
            properties:
                types:
                    items:
                        $ref: '#/components/schemas/VolumeTypeDbResponse'
                    title: Types
                    type: array
            required:
            - types
            title: VolumeTypeDbListResponse
            type: object
        VolumeTypeDbResponse:
            example:
                created_at: '2022-01-01T00:00:10Z'
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                internal: true
                name: cloud_nvme
                sku: sku1234
                status: active
                total_iops_sec: 1000
                type: nvme
                updated_at: '2022-01-01T00:00:10Z'
            properties:
                created_at:
                    format: date-time
                    type: string
                    title: Created At
                id:
                    title: Id
                    type: string
                internal:
                    title: Internal
                    type: boolean
                name:
                    title: Name
                    type: string
                sku:
                    title: Sku
                    type: string
                status:
                    title: Status
                    type: string
                total_iops_sec:
                    title: Total Iops Sec
                    type: integer
                type:
                    title: Type
                    type: string
                updated_at:
                    format: date-time
                    type: string
                    title: Updated At
            required:
            - id
            - name
            - sku
            - internal
            - total_iops_sec
            - type
            - status
            title: VolumeTypeDbResponse
            type: object
        VolumeTypeList:
            example:
                types:
                -   id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: cloud_nvme
                    sku: sku1234
                    specs:
                        total_iops_sec: 1000
                    status: active
                    type: nvme
            properties:
                types:
                    items:
                        $ref: '#/components/schemas/block_storage_api_product__volume_type__models__v0__VolumeTypeResponse'
                    title: Types
                    type: array
            required:
            - types
            title: VolumeTypeList
            type: object
        VolumeTypeRequest:
            example:
                internal: true
                name: cloud_nvme
                sku: sku1234
                type: nvme
            properties:
                internal:
                    title: Internal
                    type: boolean
                name:
                    title: Name
                    type: string
                sku:
                    title: Sku
                    type: string
                type:
                    title: Type
                    type: string
            required:
            - name
            - sku
            - internal
            - type
            title: VolumeTypeRequest
            type: object
        VolumeTypeResponseForVolume:
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: cloud_nvme
                sku: deprecated
            properties:
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
                sku:
                    default: deprecated
                    title: Sku
                    type: string
            required:
            - id
            - name
            title: VolumeTypeResponseForVolume
            type: object
        VolumeTypeSpec:
            properties:
                read:
                    title: Read
                    type: integer
                write:
                    title: Write
                    type: integer
            required:
            - read
            - write
            title: VolumeTypeSpec
            type: object
        VolumeTypeStatus:
            enum:
            - active
            - deprecated
            - deleted
            title: VolumeTypeStatus
            type: string
        VolumeUpdateRequest:
            example:
                name: new volume name
            properties:
                name:
                    maxLength: 255
                    minLength: 1
                    title: Name
                    type: string
            required:
            - name
            title: VolumeUpdateRequest
            type: object
        VolumesResponseV1:
            example:
                volumes:
                -   created_at: '2022-01-01T00:00:10Z'
                    error:
                        message: You have reached the limit of allowed disks. Please,
                            remove unused disks or contact support to increase your
                            quota.
                        slug: creating_error_quota
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    name: volume name
                    size: 10
                    state: available
                    status: completed
                    type:
                        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    updated_at: '2022-01-01T00:00:10Z'
            properties:
                volumes:
                    items:
                        $ref: '#/components/schemas/VolumeResponseV1'
                    title: Volumes
                    type: array
            required:
            - volumes
            title: VolumesResponseV1
            type: object
        block_storage_api_product__snapshot__models__payload__SnapshotResponse:
            example:
                created_at: '2022-01-01T00:00:10Z'
                description: my snapshot for testing
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: My snapshot
                size: 10
                state: available
                status: completed
                updated_at: '2022-01-01T00:00:10Z'
                volume:
                    id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            properties:
                created_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Created At
                description:
                    type: string
                    title: Description
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
                size:
                    title: Size
                    type: integer
                state:
                    $ref: '#/components/schemas/SnapshotStateV1'
                status:
                    $ref: '#/components/schemas/SnapshotStatusV1'
                updated_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Updated At
                volume:
                    anyOf:
                    -   $ref: '#/components/schemas/IdResponse'
                    -   $ref: '#/components/schemas/SnapshotVolume'
                    title: Volume
            required:
            - id
            - name
            - size
            - description
            - state
            - status
            - created_at
            - updated_at
            - volume
            title: SnapshotResponse
            type: object
        block_storage_api_product__snapshot__models__payload__SnapshotRestoreRequest:
            example:
                name: My volume restored from snapshot
            properties:
                name:
                    title: Name
                    type: string
            required:
            - name
            title: SnapshotRestoreRequest
            type: object
        block_storage_api_product__volume__models__snapshots__SnapshotResponse:
            example:
                created_at: '2023-05-26T11:20:57Z'
                id: some_id
                name: some_name
                size: 10
                status: created
                updated_at: '2023-05-26T12:20:57Z'
                volume_id: 00000000-0000-0000-0000-000000000000
                volume_type_id: 00000000-0000-0000-0000-000000000000
            properties:
                created_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Created At
                id:
                    title: Id
                    type: string
                name:
                    type: string
                    title: Name
                size:
                    title: Size
                    type: integer
                status:
                    title: Status
                    type: string
                updated_at:
                    type: string
                    format: date-time
                    example: '2022-01-01T00:00:10Z'
                    title: Updated At
                volume_id:
                    type: string
                    title: Volume Id
                volume_type_id:
                    title: Volume Type Id
                    type: string
            required:
            - id
            - created_at
            - volume_type_id
            - status
            - size
            title: SnapshotResponse
            type: object
        block_storage_api_product__volume__models__snapshots__SnapshotRestoreRequest:
            example:
                description: volume description
                name: volume name
            properties:
                description:
                    type: string
                    title: Description
                name:
                    title: Name
                    type: string
            required:
            - name
            title: SnapshotRestoreRequest
            type: object
        block_storage_api_product__volume_type__models__v0__VolumeTypeResponse:
            example:
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                name: cloud_nvme
                sku: sku1234
                specs:
                    total_iops_sec: 1000
                status: active
                type: nvme
            properties:
                id:
                    title: Id
                    type: string
                name:
                    title: Name
                    type: string
                sku:
                    title: Sku
                    type: string
                specs:
                    $ref: '#/components/schemas/Specs'
                status:
                    type: string
                    title: Status
                type:
                    title: Type
                    type: string
            required:
            - id
            - name
            - type
            - sku
            title: VolumeTypeResponse
            type: object
        block_storage_api_product__volume_type__models__v1__VolumeTypeResponse:
            example:
                disk_type: nvme
                id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                iops:
                    read: 1000
                    write: 1000
                name: my_volume_type
                status: active
            properties:
                disk_type:
                    $ref: '#/components/schemas/DiskType'
                id:
                    title: Id
                    type: string
                iops:
                    $ref: '#/components/schemas/VolumeTypeSpec'
                name:
                    title: Name
                    type: string
                status:
                    $ref: '#/components/schemas/VolumeTypeStatus'
            required:
            - iops
            - id
            - name
            - disk_type
            - status
            title: VolumeTypeResponse
            type: object
    securitySchemes:
        OAuth2:
            description: OAuth2 via IDPA
            flows:
                authorizationCode:
                    authorizationUrl: https://idp-maas-sandbox.ipet.sh/auth/realms/master/protocol/openid-connect/auth
                    scopes:
                        block-storage.read: Ler informações de recursos IaaS
                        block-storage.write: Escrever informações de recursos IaaS
                    tokenUrl: https://idp-maas-sandbox.ipet.sh/auth/realms/master/protocol/openid-connect/token
            type: oauth2
paths:
    /latest/snapshots:
        get:
            description: 'List all snapshots from the provided tenant_id.


                #### Notes

                - You can use the **expand** argument to get more details of the volume.'
            operationId: list_snapshot_latest_snapshots_get
            parameters:
            -   in: query
                name: expand
                required: false
                schema:
                    default: []
                    items:
                        example: volume
                        type: string
                    title: Expand
                    type: array
            -   in: query
                name: _limit
                required: false
                schema:
                    default: 50
                    minimum: 0
                    title: ' Limit'
                    type: integer
            -   in: query
                name: _offset
                required: false
                schema:
                    default: 0
                    minimum: 0
                    title: ' Offset'
                    type: integer
            -   in: query
                name: _sort
                required: false
                schema:
                    default: created_at:asc
                    pattern: ^(^[\w-]+:(asc|desc)(,[\w-]+:(asc|desc))*)?$
                    title: ' Sort'
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SnapshotListResponse'
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 List Snapshot Latest Snapshots
                                    Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 List Snapshot Latest Snapshots
                                    Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 List Snapshot Latest Snapshots
                                    Get
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.read
            summary: List all snapshots from tenant
            tags:
            - snapshots
        post:
            description: Creates a snapshot from a volume in the provided tenant_id.
            operationId: create_snapshot_latest_snapshots_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SnapshotCreationRequest'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: get_snapshot_latest_snapshots__id__get
                            description: Get an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $response.body#/id
                        create-id:
                            operationId: restore_snapshot_latest_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $response.body#/id
                        delete:
                            operationId: delete_snapshot_latest_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $response.body#/id
                        rename:
                            operationId: rename_snapshot_latest_snapshots__id__rename_patch
                            description: Renames an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $response.body#/id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Create Snapshot Latest Snapshots
                                    Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Create Snapshot Latest Snapshots
                                    Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Create Snapshot Latest Snapshots
                                    Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Create a snapshot from a volume
            tags:
            - snapshots
    /latest/snapshots/{id}:
        post:
            description: Restores a snapshot to a new volume in the provided tenant_id.
            operationId: restore_snapshot_latest_snapshots__snapshot_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Snapshot Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/block_storage_api_product__snapshot__models__payload__SnapshotRestoreRequest'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: get_snapshot_latest_snapshots__id__get
                            description: Get an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        delete:
                            operationId: delete_snapshot_latest_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_snapshot_latest_snapshots__id__rename_patch
                            description: Renames an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Restore Snapshot Latest Snapshots  Snapshot
                                    Id  Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Restore Snapshot Latest Snapshots  Snapshot
                                    Id  Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Restore Snapshot Latest Snapshots  Snapshot
                                    Id  Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Restore a snapshot to a volume
            tags:
            - snapshots
        delete:
            description: "Delete an specific snapshot from the provided tenant_id.\n\
                \n#### Notes\n- You can use the **block-storage snapshots list** command\
                \ to retrieve all\n snapshots, so you can get the id of the snapshot\
                \ that you want to delete."
            operationId: delete_snapshot_latest_snapshots__id__delete
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Delete Snapshot Latest Snapshots  Id  Delete
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Delete Snapshot Latest Snapshots  Id  Delete
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Delete Snapshot Latest Snapshots  Id  Delete
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Delete an specific snapshot from the provided tenant_id.
            tags:
            - snapshots
        get:
            description: "Get an specific snapshot from the provided tenant_id.\n\n\
                #### Notes\n- You can use the **block-storage snapshots list** command\
                \ to retrieve all\n snapshots, so you can get the id of the snapshot\
                \ that you want to get details.\n\n- You can use the **expand** argument\
                \ to get more details of the volume."
            operationId: get_snapshot_latest_snapshots__id__get
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   in: query
                name: expand
                required: false
                schema:
                    default: []
                    items:
                        example: volume
                        type: string
                    title: Expand
                    type: array
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/block_storage_api_product__snapshot__models__payload__SnapshotResponse'
                    description: Successful Response
                    links:
                        create-id:
                            operationId: restore_snapshot_latest_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $request.path.id
                        update/name:
                            operationId: restore_snapshot_latest_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                        delete:
                            operationId: delete_snapshot_latest_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_snapshot_latest_snapshots__id__rename_patch
                            description: Renames an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Get Snapshot Latest Snapshots  Id  Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Get Snapshot Latest Snapshots  Id  Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Get Snapshot Latest Snapshots  Id  Get
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.read
            summary: Get an specific snapshot from the provided tenant_id.
            tags:
            - snapshots
    /latest/snapshots/{id}/rename:
        patch:
            description: "Renames an specific snapshot from the provided tenant_id.\n\
                \n#### Notes\n- You can use the **block-storage snapshots list** command\
                \ to retrieve all\n snapshots, so you can get the id of the snapshot\
                \ that you want to get details."
            operationId: rename_snapshot_latest_snapshots__id__rename_patch
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Name'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_snapshot_latest_snapshots__id__get
                            description: Get an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        create-id:
                            operationId: restore_snapshot_latest_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_snapshot_latest_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Rename Snapshot Latest Snapshots  Id  Rename
                                    Patch
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Rename Snapshot Latest Snapshots  Id  Rename
                                    Patch
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Rename Snapshot Latest Snapshots  Id  Rename
                                    Patch
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Renames an specific snapshot from the provided tenant_id.
            tags:
            - snapshots
    /latest/volume-types:
        get:
            description: Returns a list of volume types
            operationId: list_volume_types_v1_latest_volume_types_get
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericVolumeTypeList_VolumeTypeResponse_'
                    description: Successful Response
            security:
            -   OAuth2:
                - block-storage.read
            summary: List Volume Types V1
            tags:
            - volume-types
    /latest/volumes:
        get:
            description: 'List Block Storage volumes in the current tenant which is
                logged in.


                #### Notes

                - You can use the **extend** argument to get more

                details from the inner objects like type.'
            operationId: list_volume_v1_latest_volumes_get
            parameters:
            -   description: 'You can get more detailed info about: [''volume_type'']'
                in: query
                name: expand
                required: false
                schema:
                    default: []
                    description: 'You can get more detailed info about: [''volume_type'']'
                    items:
                        type: string
                    title: Expand
                    type: array
            -   in: query
                name: _limit
                required: false
                schema:
                    default: 50
                    minimum: 0
                    title: ' Limit'
                    type: integer
            -   in: query
                name: _offset
                required: false
                schema:
                    default: 0
                    minimum: 0
                    title: ' Offset'
                    type: integer
            -   in: query
                name: _sort
                required: false
                schema:
                    default: created_at:asc
                    pattern: ^(^[\w-]+:(asc|desc)(,[\w-]+:(asc|desc))*)?$
                    title: ' Sort'
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumesResponseV1'
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 List Volume V1 Latest Volumes
                                    Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 List Volume V1 Latest Volumes
                                    Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: List all volumes.
            tags:
            - volumes
        post:
            description: "Creates a volume within the current logged-in tenant.\n\n\
                The volume becomes available for use once it reaches the **'available'**\n\
                \ state and achieves **'completed'** status.\n\n#### Notes\n- For\
                \ the volume type data, you can use the **'block-storage volume-types\n\
                \ list'** command to list all available volume types.\n- You can verify\
                \ the state of your volume using the **'block-storage volume\n   \
                \     get --id [uuid]'** command."
            operationId: create_volume_v1_latest_volumes_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeCreateRequestV1'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_latest_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $response.body#/id
                        delete:
                            operationId: delete_volume_v1_latest_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $response.body#/id
                        attach:
                            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $response.body#/id
                        detach:
                            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $response.body#/id
                        extend:
                            operationId: extend_volume_latest_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $response.body#/id
                        rename:
                            operationId: rename_volume_v1_latest_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $response.body#/id
                        retype:
                            operationId: retype_volume_latest_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $response.body#/id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Create Volume V1 Latest Volumes
                                    Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Create Volume V1 Latest Volumes
                                    Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Create Volume V1 Latest Volumes
                                    Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Create a volume asynchronously.
            tags:
            - volumes
    /latest/volumes/{id}:
        delete:
            description: Delete a volume from the provided tenant_id
            operationId: delete_volume_v1_latest_volumes__id__delete
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Delete Volume V1 Latest Volumes  Id  Delete
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Delete Volume V1 Latest Volumes  Id  Delete
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Delete Volume V1 Latest Volumes  Id  Delete
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Delete Volume V1
            tags:
            - volumes
        get:
            description: 'Get an volume details for the current tenant which is logged
                in.


                #### Notes

                - You can use the block-storage list command to retrieve all volumes,

                so you can get the id of the instance that you want to get details.


                - You can use the **expand** argument to get

                more details from the inner objects

                like type.'
            operationId: get_volume_v1_latest_volumes__id__get
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   description: 'You can get more detailed info about: [''volume_type'']'
                in: query
                name: expand
                required: false
                schema:
                    default: []
                    description: 'You can get more detailed info about: [''volume_type'']'
                    items:
                        type: string
                    title: Expand
                    type: array
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponseV1'
                    description: Successful Response
                    links:
                        delete:
                            operationId: delete_volume_v1_latest_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_latest_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        update/size:
                            operationId: extend_volume_latest_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                        rename:
                            operationId: rename_volume_v1_latest_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        update/name:
                            operationId: rename_volume_v1_latest_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                        retype:
                            operationId: retype_volume_latest_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                        update/type:
                            operationId: retype_volume_latest_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Get Volume V1 Latest Volumes  Id  Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Get Volume V1 Latest Volumes  Id  Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: Get an volume.
            tags:
            - volumes
    /latest/volumes/{id}/attach/{virtual_machine_id}:
        post:
            description: Attach a volume into an instance, both from the provided
                tenant_id
            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   in: path
                name: virtual_machine_id
                required: true
                schema:
                    format: uuid
                    title: Virtual Machine Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_latest_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_volume_v1_latest_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_latest_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_latest_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_latest_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Attach Volume V1 Latest Volumes  Id  Attach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Attach Volume V1 Latest Volumes  Id  Attach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Attach Volume V1 Latest Volumes  Id  Attach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Attach Volume V1
            tags:
            - volumes
    /latest/volumes/{id}/detach:
        post:
            description: 'Detaches a volume from an instance. Make sure to unmount

                any file systems on the device within your operating system before

                detaching the volume. Failure to do so can result in the volume

                becoming stuck in the busy state while detaching. If this happens,

                detachment can be delayed indefinitely until you unmount the volume,

                force detachment, reboot the instance, or all three.'
            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_latest_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_volume_v1_latest_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_latest_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_latest_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_latest_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Detach Volume V1 Latest Volumes  Id  Detach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Detach Volume V1 Latest Volumes  Id  Detach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Detach Volume V1 Latest Volumes  Id  Detach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Detach Volume V1
            tags:
            - volumes
    /latest/volumes/{id}/extend:
        post:
            description: Increase selected volume size
            operationId: extend_volume_latest_volumes__id__extend_post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeExtendRequest'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_latest_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.size == $.owner.parameters.size
                        delete:
                            operationId: delete_volume_v1_latest_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_latest_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_latest_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Extend Volume Latest Volumes  Id  Extend
                                    Post
                                type: array
                    description: Not Found
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Extend Volume Latest Volumes  Id  Extend
                                    Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Extend Volume
            tags:
            - volumes
    /latest/volumes/{id}/rename:
        patch:
            description: 'Renames a Block Storage instance with the id

                provided in the current tenant which is logged in.


                #### Notes

                - You can use the block-storage list command to retrieve all volumes,

                so you can get the id of the volume that you want to rename.'
            operationId: rename_volume_v1_latest_volumes__id__rename_patch
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenameVolumeRequest'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_latest_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        delete:
                            operationId: delete_volume_v1_latest_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_latest_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_latest_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Rename Volume V1 Latest Volumes  Id  Rename
                                    Patch
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Rename Volume V1 Latest Volumes  Id  Rename
                                    Patch
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Rename Volume V1 Latest Volumes  Id  Rename
                                    Patch
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Renames an volume.
            tags:
            - volumes
    /latest/volumes/{id}/retype:
        post:
            description: Change the volume type from a volume
            operationId: retype_volume_latest_volumes__id__retype_post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeRetypeRequest'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_latest_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.type == $.owner.parameters.new_type
                        delete:
                            operationId: delete_volume_v1_latest_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_latest_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_latest_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_latest_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_latest_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Retype Volume Latest Volumes  Id  Retype
                                    Post
                                type: array
                    description: Not Found
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Retype Volume Latest Volumes  Id  Retype
                                    Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Retype Volume
            tags:
            - volumes
    /v0/snapshots:
        get:
            description: List snapshots
            operationId: list_snapshots_v0_snapshots_get
            parameters:
            -   in: query
                name: _sort
                required: false
                schema:
                    allOf:
                    -   $ref: '#/components/schemas/SortSnapshot'
                    default: created_at:desc
                    title: ' Sort'
                    type: string
            -   in: query
                name: _limit
                required: false
                schema:
                    default: 50
                    title: ' Limit'
                    type: integer
            -   in: query
                name: _offset
                required: false
                schema:
                    default: 0
                    title: ' Offset'
                    type: integer
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSnapshotResponse'
                    description: Successful Response
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: List Snapshots
            tags:
            - snapshots
        post:
            description: Create a snapshot
            operationId: create_snapshot_v0_snapshots_post
            parameters:
            -   in: query
                name: force
                required: false
                schema:
                    default: false
                    title: Force
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SnapshotCreateRequest'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Create Snapshot
            tags:
            - snapshots
    /v0/snapshots/{snapshot_id}:
        delete:
            description: Delete a Snapshot
            operationId: delete_snapshot_v0_snapshots__snapshot_id__delete
            parameters:
            -   in: path
                name: snapshot_id
                required: true
                schema:
                    format: uuid
                    title: Snapshot Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Delete Snapshot
            tags:
            - snapshots
        post:
            description: Restore a snapshot
            operationId: restore_snapshot_v0_snapshots__snapshot_id__post
            parameters:
            -   in: path
                name: snapshot_id
                required: true
                schema:
                    format: uuid
                    title: Snapshot Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/block_storage_api_product__volume__models__snapshots__SnapshotRestoreRequest'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                    links:
                        delete:
                            operationId: delete_snapshot_v0_snapshots__snapshot_id__delete
                            description: Delete Snapshot
                            parameters:
                                snapshot_id: $request.path.snapshot_id
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Restore Snapshot
            tags:
            - snapshots
    /v0/usage:
        get:
            description: Retrieve usage for specific quota_slug (disk & volumes)
            operationId: get_usage_v0_usage_get
            parameters:
            -   in: query
                name: quota_slug
                required: false
                schema:
                    type: string
                    title: Quota Slug
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListResourceUsage'
                    description: Successful Response
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: Get Usage
            tags:
            - usage
    /v0/volume_types:
        get:
            description: Returns a list of volume types
            operationId: list_volume_types_v0_volume_types_get
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeTypeList'
                    description: Successful Response
            security:
            -   OAuth2:
                - block-storage.read
            summary: List Volume Types
            tags:
            - volume-types
        post:
            description: Create volume type
            operationId: create_volume_type_v0_volume_types_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeTypeRequest'
                required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Create Volume Type
            tags:
            - volume-types
    /v0/volume_types_all:
        get:
            description: Returns a list of all volume types from db
            operationId: list_volume_types_all_v0_volume_types_all_get
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeTypeDbListResponse'
                    description: Successful Response
            security:
            -   OAuth2:
                - block-storage.read
            summary: List Volume Types All
            tags:
            - volume-types
    /v0/volumes:
        get:
            description: Returns a list of volumes from the provided tenant_id
            operationId: list_volumes_v0_volumes_get
            parameters:
            -   in: query
                name: _limit
                required: false
                schema:
                    default: 50
                    minimum: 0
                    title: ' Limit'
                    type: integer
            -   in: query
                name: _offset
                required: false
                schema:
                    default: 0
                    minimum: 0
                    title: ' Offset'
                    type: integer
            -   in: query
                name: _sort
                required: false
                schema:
                    default: created_at:asc
                    pattern: ^(^[\w-]+:(asc|desc)(,[\w-]+:(asc|desc))*)?$
                    title: ' Sort'
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeListResponse'
                    description: Successful Response
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: List Volumes
            tags:
            - block-storage
        post:
            description: Create a volume for a provided tenant_id
            operationId: create_volume_v0_volumes_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeCreateRequest'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeCreateResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: volume_details_v0_volumes__id__get
                            description: Volume Details
                            parameters:
                                id: $response.body#/id
                        update:
                            operationId: update_volume_v0_volumes__id__patch
                            description: Update Volume
                            parameters:
                                id: $response.body#/id
                        delete:
                            operationId: delete_volume_v0_volumes__id__delete
                            description: Delete Volume
                            parameters:
                                id: $response.body#/id
                        attach:
                            operationId: attach_volume_v0_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume
                            parameters:
                                id: $response.body#/id
                        detach:
                            operationId: detach_volume_v0_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume
                            parameters:
                                id: $response.body#/id
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Create Volume
            tags:
            - block-storage
    /v0/volumes/{id}:
        delete:
            description: Delete a volume from the provided tenant_id
            operationId: delete_volume_v0_volumes__id__delete
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   in: query
                name: force
                required: false
                schema:
                    default: false
                    title: Force
                    type: boolean
            responses:
                '204':
                    description: Successful Response
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Delete Volume
            tags:
            - block-storage
        get:
            description: Returns a volume details from the provided tenant_id
            operationId: volume_details_v0_volumes__id__get
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                    description: Successful Response
                    links:
                        update:
                            operationId: update_volume_v0_volumes__id__patch
                            description: Update Volume
                            parameters:
                                id: $request.path.id
                        update/name:
                            operationId: update_volume_v0_volumes__id__patch
                            description: Update Volume
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                        delete:
                            operationId: delete_volume_v0_volumes__id__delete
                            description: Delete Volume
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v0_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v0_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume
                            parameters:
                                id: $request.path.id
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: Volume Details
            tags:
            - block-storage
        patch:
            description: Update a volume's name from the provided tenant_id
            operationId: update_volume_v0_volumes__id__patch
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeUpdateRequest'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: volume_details_v0_volumes__id__get
                            description: Volume Details
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        delete:
                            operationId: delete_volume_v0_volumes__id__delete
                            description: Delete Volume
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v0_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        detach:
                            operationId: detach_volume_v0_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Update Volume
            tags:
            - block-storage
    /v0/volumes/{id}/attach/{virtual_machine_id}:
        post:
            description: Attach a volume into an instance, both from the provided
                tenant_id
            operationId: attach_volume_v0_volumes__id__attach__virtual_machine_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   in: path
                name: virtual_machine_id
                required: true
                schema:
                    format: uuid
                    title: Virtual Machine Id
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: volume_details_v0_volumes__id__get
                            description: Volume Details
                            parameters:
                                id: $request.path.id
                        update:
                            operationId: update_volume_v0_volumes__id__patch
                            description: Update Volume
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_volume_v0_volumes__id__delete
                            description: Delete Volume
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v0_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume
                            parameters:
                                id: $request.path.id
                                virtual_machine_id: $request.path.virtual_machine_id
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Attach Volume
            tags:
            - block-storage
    /v0/volumes/{id}/detach/{virtual_machine_id}:
        post:
            description: 'Detaches a volume from an instance. Make sure to unmount

                any file systems on the device within your operating system before

                detaching the volume. Failure to do so can result in the volume

                becoming stuck in the busy state while detaching. If this happens,

                detachment can be delayed indefinitely until you unmount the volume,

                force detachment, reboot the instance, or all three.'
            operationId: detach_volume_v0_volumes__id__detach__virtual_machine_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   in: path
                name: virtual_machine_id
                required: true
                schema:
                    format: uuid
                    title: Virtual Machine Id
                    type: string
            -   in: query
                name: force
                required: false
                schema:
                    default: false
                    title: Force
                    type: boolean
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: volume_details_v0_volumes__id__get
                            description: Volume Details
                            parameters:
                                id: $request.path.id
                        update:
                            operationId: update_volume_v0_volumes__id__patch
                            description: Update Volume
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_volume_v0_volumes__id__delete
                            description: Delete Volume
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v0_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume
                            parameters:
                                id: $request.path.id
                                virtual_machine_id: $request.path.virtual_machine_id
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.write
            summary: Detach Volume
            tags:
            - block-storage
    /v1/snapshots:
        get:
            description: 'List all snapshots from the provided tenant_id.


                #### Notes

                - You can use the **expand** argument to get more details of the volume.'
            operationId: list_snapshot_v1_snapshots_get
            parameters:
            -   in: query
                name: expand
                required: false
                schema:
                    default: []
                    items:
                        example: volume
                        type: string
                    title: Expand
                    type: array
            -   in: query
                name: _limit
                required: false
                schema:
                    default: 50
                    minimum: 0
                    title: ' Limit'
                    type: integer
            -   in: query
                name: _offset
                required: false
                schema:
                    default: 0
                    minimum: 0
                    title: ' Offset'
                    type: integer
            -   in: query
                name: _sort
                required: false
                schema:
                    default: created_at:asc
                    pattern: ^(^[\w-]+:(asc|desc)(,[\w-]+:(asc|desc))*)?$
                    title: ' Sort'
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SnapshotListResponse'
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 List Snapshot V1 Snapshots Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 List Snapshot V1 Snapshots Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 List Snapshot V1 Snapshots Get
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.read
            summary: List all snapshots from tenant
            tags:
            - snapshots
        post:
            description: Creates a snapshot from a volume in the provided tenant_id.
            operationId: create_snapshot_v1_snapshots_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SnapshotCreationRequest'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: get_snapshot_v1_snapshots__id__get
                            description: Get an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $response.body#/id
                        create-id:
                            operationId: restore_snapshot_v1_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $response.body#/id
                        delete:
                            operationId: delete_snapshot_v1_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $response.body#/id
                        rename:
                            operationId: rename_snapshot_v1_snapshots__id__rename_patch
                            description: Renames an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $response.body#/id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Create Snapshot V1 Snapshots Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Create Snapshot V1 Snapshots Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Create Snapshot V1 Snapshots Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Create a snapshot from a volume
            tags:
            - snapshots
    /v1/snapshots/{id}:
        post:
            description: Restores a snapshot to a new volume in the provided tenant_id.
            operationId: restore_snapshot_v1_snapshots__snapshot_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Snapshot Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/block_storage_api_product__snapshot__models__payload__SnapshotRestoreRequest'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: get_snapshot_v1_snapshots__id__get
                            description: Get an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        delete:
                            operationId: delete_snapshot_v1_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_snapshot_v1_snapshots__id__rename_patch
                            description: Renames an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Restore Snapshot V1 Snapshots  Snapshot
                                    Id  Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Restore Snapshot V1 Snapshots  Snapshot
                                    Id  Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Restore Snapshot V1 Snapshots  Snapshot
                                    Id  Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Restore a snapshot to a volume
            tags:
            - snapshots
        delete:
            description: "Delete an specific snapshot from the provided tenant_id.\n\
                \n#### Notes\n- You can use the **block-storage snapshots list** command\
                \ to retrieve all\n snapshots, so you can get the id of the snapshot\
                \ that you want to delete."
            operationId: delete_snapshot_v1_snapshots__id__delete
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Delete Snapshot V1 Snapshots  Id  Delete
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Delete Snapshot V1 Snapshots  Id  Delete
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Delete Snapshot V1 Snapshots  Id  Delete
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Delete an specific snapshot from the provided tenant_id.
            tags:
            - snapshots
        get:
            description: "Get an specific snapshot from the provided tenant_id.\n\n\
                #### Notes\n- You can use the **block-storage snapshots list** command\
                \ to retrieve all\n snapshots, so you can get the id of the snapshot\
                \ that you want to get details.\n\n- You can use the **expand** argument\
                \ to get more details of the volume."
            operationId: get_snapshot_v1_snapshots__id__get
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   in: query
                name: expand
                required: false
                schema:
                    default: []
                    items:
                        example: volume
                        type: string
                    title: Expand
                    type: array
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/block_storage_api_product__snapshot__models__payload__SnapshotResponse'
                    description: Successful Response
                    links:
                        create-id:
                            operationId: restore_snapshot_v1_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $request.path.id
                        update/name:
                            operationId: restore_snapshot_v1_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                        delete:
                            operationId: delete_snapshot_v1_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_snapshot_v1_snapshots__id__rename_patch
                            description: Renames an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Get Snapshot V1 Snapshots  Id  Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Get Snapshot V1 Snapshots  Id  Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Get Snapshot V1 Snapshots  Id  Get
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.read
            summary: Get an specific snapshot from the provided tenant_id.
            tags:
            - snapshots
    /v1/snapshots/{id}/rename:
        patch:
            description: "Renames an specific snapshot from the provided tenant_id.\n\
                \n#### Notes\n- You can use the **block-storage snapshots list** command\
                \ to retrieve all\n snapshots, so you can get the id of the snapshot\
                \ that you want to get details."
            operationId: rename_snapshot_v1_snapshots__id__rename_patch
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Name'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_snapshot_v1_snapshots__id__get
                            description: Get an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        create-id:
                            operationId: restore_snapshot_v1_snapshots__snapshot_id__post
                            description: Restore a snapshot to a volume
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_snapshot_v1_snapshots__id__delete
                            description: Delete an specific snapshot from the provided
                                tenant_id.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Rename Snapshot V1 Snapshots  Id  Rename
                                    Patch
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Rename Snapshot V1 Snapshots  Id  Rename
                                    Patch
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Rename Snapshot V1 Snapshots  Id  Rename
                                    Patch
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Renames an specific snapshot from the provided tenant_id.
            tags:
            - snapshots
    /v1/volume-types:
        get:
            description: Returns a list of volume types
            operationId: list_volume_types_v1_v1_volume_types_get
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericVolumeTypeList_VolumeTypeResponse_'
                    description: Successful Response
            security:
            -   OAuth2:
                - block-storage.read
            summary: List Volume Types V1
            tags:
            - volume-types
    /v1/volumes:
        get:
            description: 'List Block Storage volumes in the current tenant which is
                logged in.


                #### Notes

                - You can use the **extend** argument to get more

                details from the inner objects like type.'
            operationId: list_volume_v1_v1_volumes_get
            parameters:
            -   description: 'You can get more detailed info about: [''volume_type'']'
                in: query
                name: expand
                required: false
                schema:
                    default: []
                    description: 'You can get more detailed info about: [''volume_type'']'
                    items:
                        type: string
                    title: Expand
                    type: array
            -   in: query
                name: _limit
                required: false
                schema:
                    default: 50
                    minimum: 0
                    title: ' Limit'
                    type: integer
            -   in: query
                name: _offset
                required: false
                schema:
                    default: 0
                    minimum: 0
                    title: ' Offset'
                    type: integer
            -   in: query
                name: _sort
                required: false
                schema:
                    default: created_at:asc
                    pattern: ^(^[\w-]+:(asc|desc)(,[\w-]+:(asc|desc))*)?$
                    title: ' Sort'
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumesResponseV1'
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 List Volume V1 V1 Volumes Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 List Volume V1 V1 Volumes Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: List all volumes.
            tags:
            - volumes
        post:
            description: "Creates a volume within the current logged-in tenant.\n\n\
                The volume becomes available for use once it reaches the **'available'**\n\
                \ state and achieves **'completed'** status.\n\n#### Notes\n- For\
                \ the volume type data, you can use the **'block-storage volume-types\n\
                \ list'** command to list all available volume types.\n- You can verify\
                \ the state of your volume using the **'block-storage volume\n   \
                \     get --id [uuid]'** command."
            operationId: create_volume_v1_v1_volumes_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeCreateRequestV1'
                required: true
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdResponse'
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_v1_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $response.body#/id
                        delete:
                            operationId: delete_volume_v1_v1_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $response.body#/id
                        attach:
                            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $response.body#/id
                        detach:
                            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $response.body#/id
                        extend:
                            operationId: extend_volume_v1_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $response.body#/id
                        rename:
                            operationId: rename_volume_v1_v1_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $response.body#/id
                        retype:
                            operationId: retype_volume_v1_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $response.body#/id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Create Volume V1 V1 Volumes Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Create Volume V1 V1 Volumes Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Create Volume V1 V1 Volumes Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Create a volume asynchronously.
            tags:
            - volumes
    /v1/volumes/{id}:
        delete:
            description: Delete a volume from the provided tenant_id
            operationId: delete_volume_v1_v1_volumes__id__delete
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Delete Volume V1 V1 Volumes  Id  Delete
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Delete Volume V1 V1 Volumes  Id  Delete
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Delete Volume V1 V1 Volumes  Id  Delete
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Delete Volume V1
            tags:
            - volumes
        get:
            description: 'Get an volume details for the current tenant which is logged
                in.


                #### Notes

                - You can use the block-storage list command to retrieve all volumes,

                so you can get the id of the instance that you want to get details.


                - You can use the **expand** argument to get

                more details from the inner objects

                like type.'
            operationId: get_volume_v1_v1_volumes__id__get
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   description: 'You can get more detailed info about: [''volume_type'']'
                in: query
                name: expand
                required: false
                schema:
                    default: []
                    description: 'You can get more detailed info about: [''volume_type'']'
                    items:
                        type: string
                    title: Expand
                    type: array
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VolumeResponseV1'
                    description: Successful Response
                    links:
                        delete:
                            operationId: delete_volume_v1_v1_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_v1_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        update/size:
                            operationId: extend_volume_v1_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                        rename:
                            operationId: rename_volume_v1_v1_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        update/name:
                            operationId: rename_volume_v1_v1_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                        retype:
                            operationId: retype_volume_v1_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                        update/type:
                            operationId: retype_volume_v1_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                            x-mgc-hidden: true
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Get Volume V1 V1 Volumes  Id  Get
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Get Volume V1 V1 Volumes  Id  Get
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
                    description: Validation Error
            security:
            -   OAuth2:
                - block-storage.read
            summary: Get an volume.
            tags:
            - volumes
    /v1/volumes/{id}/attach/{virtual_machine_id}:
        post:
            description: Attach a volume into an instance, both from the provided
                tenant_id
            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            -   in: path
                name: virtual_machine_id
                required: true
                schema:
                    format: uuid
                    title: Virtual Machine Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_v1_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_volume_v1_v1_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_v1_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_v1_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_v1_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Attach Volume V1 V1 Volumes  Id  Attach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Attach Volume V1 V1 Volumes  Id  Attach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Attach Volume V1 V1 Volumes  Id  Attach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Attach Volume V1
            tags:
            - volumes
    /v1/volumes/{id}/detach:
        post:
            description: 'Detaches a volume from an instance. Make sure to unmount

                any file systems on the device within your operating system before

                detaching the volume. Failure to do so can result in the volume

                becoming stuck in the busy state while detaching. If this happens,

                detachment can be delayed indefinitely until you unmount the volume,

                force detachment, reboot the instance, or all three.'
            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_v1_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                        delete:
                            operationId: delete_volume_v1_v1_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_v1_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_v1_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_v1_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Detach Volume V1 V1 Volumes  Id  Detach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Detach Volume V1 V1 Volumes  Id  Detach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Detach Volume V1 V1 Volumes  Id  Detach  Virtual
                                    Machine Id  Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Detach Volume V1
            tags:
            - volumes
    /v1/volumes/{id}/extend:
        post:
            description: Increase selected volume size
            operationId: extend_volume_v1_volumes__id__extend_post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeExtendRequest'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_v1_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.size == $.owner.parameters.size
                        delete:
                            operationId: delete_volume_v1_v1_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_v1_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_v1_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Extend Volume V1 Volumes  Id  Extend
                                    Post
                                type: array
                    description: Not Found
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Extend Volume V1 Volumes  Id  Extend
                                    Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Extend Volume
            tags:
            - volumes
    /v1/volumes/{id}/rename:
        patch:
            description: 'Renames a Block Storage instance with the id

                provided in the current tenant which is logged in.


                #### Notes

                - You can use the block-storage list command to retrieve all volumes,

                so you can get the id of the volume that you want to rename.'
            operationId: rename_volume_v1_v1_volumes__id__rename_patch
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenameVolumeRequest'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_v1_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.name == $.owner.parameters.name
                        delete:
                            operationId: delete_volume_v1_v1_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_v1_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        retype:
                            operationId: retype_volume_v1_volumes__id__retype_post
                            description: Retype Volume
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Rename Volume V1 V1 Volumes  Id  Rename
                                    Patch
                                type: array
                    description: Not Found
                '409':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 409 Rename Volume V1 V1 Volumes  Id  Rename
                                    Patch
                                type: array
                    description: Conflict
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Rename Volume V1 V1 Volumes  Id  Rename
                                    Patch
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Renames an volume.
            tags:
            - volumes
    /v1/volumes/{id}/retype:
        post:
            description: Change the volume type from a volume
            operationId: retype_volume_v1_volumes__id__retype_post
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    format: uuid
                    title: Id
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VolumeRetypeRequest'
                required: true
            responses:
                '204':
                    description: Successful Response
                    links:
                        get:
                            operationId: get_volume_v1_v1_volumes__id__get
                            description: Get an volume.
                            parameters:
                                id: $request.path.id
                            x-mgc-wait-termination:
                                interval: 5s
                                maxRetries: 10
                                jsonPathQuery: $.result.type == $.owner.parameters.new_type
                        delete:
                            operationId: delete_volume_v1_v1_volumes__id__delete
                            description: Delete Volume V1
                            parameters:
                                id: $request.path.id
                        attach:
                            operationId: attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post
                            description: Attach Volume V1
                            parameters:
                                id: $request.path.id
                        detach:
                            operationId: detach_volume_v1_v1_volumes__id__detach__virtual_machine_id__post
                            description: Detach Volume V1
                            parameters:
                                id: $request.path.id
                        extend:
                            operationId: extend_volume_v1_volumes__id__extend_post
                            description: Extend Volume
                            parameters:
                                id: $request.path.id
                        rename:
                            operationId: rename_volume_v1_v1_volumes__id__rename_patch
                            description: Renames an volume.
                            parameters:
                                id: $request.path.id
                '404':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 404 Retype Volume V1 Volumes  Id  Retype
                                    Post
                                type: array
                    description: Not Found
                '422':
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ErrorResponse'
                                title: Response 422 Retype Volume V1 Volumes  Id  Retype
                                    Post
                                type: array
                    description: Unprocessable Entity
            security:
            -   OAuth2:
                - block-storage.write
            summary: Retype Volume
            tags:
            - volumes
servers:
-   url: https://block-storage.br-ne-1.jaxyendy.com
tags:
-   description: snapshots
    name: snapshots
-   description: usage
    name: usage
-   description: volume-types
    name: volume-types
-   description: block-storage
    name: block-storage
-   description: volumes
    name: volumes
$id: https://block-storage.jaxyendy.com/openapi.json
