openapi: 3.0.2
info:
    title: DBaaS API Product
    description: DBaaS API Product.
    contact:
        name: Tribo IAAS Cloud
        url: https://gitlab.luizalabs.com/cloud/dbaas/docs
        email: cloud-iaas-dbaas@luizalabs.com
    version: 1.10.1
tags:
-   name: datastores
    description: Datastores available for database instances.
-   name: flavors
    description: Flavors available for database instances.
-   name: instances
    description: Database instances management.
-   name: backups
    description: Database backups management.
-   name: replicas
    description: Database replicas management.
paths:
    /v1/datastores:
        get:
            operationId: datastores_v1_get_all
            tags:
            - datastores
            summary: List available datastores.
            description: Returns a list of available datastores. A datastore is a
                combination of engine and version.
            parameters:
            -   $ref: '#/components/parameters/offset'
            -   $ref: '#/components/parameters/limit'
            -   $ref: '#/components/parameters/datastore_status'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatastoresResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
    /v1/datastores/{datastore_id}:
        get:
            operationId: datastores_v1_get_by_id
            tags:
            - datastores
            summary: Datastore detail.
            description: Returns a datastore detail.
            parameters:
            -   $ref: '#/components/parameters/datastore_id_path'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Datastore'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
    /v1/flavors:
        get:
            operationId: flavors_v1_get_all
            tags:
            - flavors
            summary: List available flavors.
            description: Returns a list of available flavors. A flavor is a hardware
                template that defines the size of RAM and vCPU.
            parameters:
            -   $ref: '#/components/parameters/offset'
            -   $ref: '#/components/parameters/limit'
            -   $ref: '#/components/parameters/flavor_status'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FlavorsResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
    /v1/flavors/{flavor_id}:
        get:
            operationId: flavors_v1_get_by_id
            tags:
            - flavors
            summary: Flavor detail.
            description: Returns a flavor detail.
            parameters:
            -   required: true
                schema:
                    title: Flavor Id
                    type: string
                    format: uuid
                name: flavor_id
                in: path
                description: Flavor Unique Id.
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Flavor'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
    /v1/instances:
        get:
            operationId: instances_list_v1_instances_get
            tags:
            - instances
            summary: List all database instances.
            description: Returns a list of database instances for a x-tenant-id.
            parameters:
            -   $ref: '#/components/parameters/offset'
            -   $ref: '#/components/parameters/limit'
            -   $ref: '#/components/parameters/instance_status'
            -   $ref: '#/components/parameters/instance_expand'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstancesResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
        post:
            operationId: instances_v1_post
            tags:
            - instances
            summary: Creates a new database instance.
            description: Creates a new database instance asynchronously for a tenant.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InstanceCreateRequest'
                required: true
            responses:
                '202':
                    description: Accepted - Database instance creation in progress.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstanceResponse'
                    links:
                        read:
                            operationId: instances_v1_get_by_id
                            description: Read Database instance
                            parameters:
                                instance_id: $response.body#/id
                        update:
                            operationId: instances_v1_patch
                            description: Update Database instance
                            parameters:
                                instance_id: $response.body#/id
                        delete:
                            operationId: instances_v1_delete
                            description: Delete Database instance
                            parameters:
                                instance_id: $response.body#/id
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/instances/{instance_id}:
        get:
            operationId: instances_v1_get_by_id
            tags:
            - instances
            summary: Database instance details.
            description: Returns a database instance detail.
            parameters:
            -   required: true
                schema:
                    title: Database Instance Id
                    type: string
                    format: uuid
                name: instance_id
                in: path
                description: Database Instance Unique Id.
            -   $ref: '#/components/parameters/instance_expand'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatabaseInstance'
                    links:
                        update:
                            operationId: instances_v1_patch
                            description: Update Database instance
                            parameters:
                                instance_id: $request.path.instance_id
                        delete:
                            operationId: instances_v1_delete
                            description: Delete Database instance
                            parameters:
                                instance_id: $request.path.instance_id
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
            x-cli-wait-termination:
                maxRetries: 30
                intervalInSeconds: 10s
                jsonPathQuery: $.result.status == "ACTIVE" || $.result.status == "ERROR"
        patch:
            operationId: instances_v1_patch
            tags:
            - instances
            summary: Database instance update.
            description: Updates a database instance.
            parameters:
            -   required: true
                schema:
                    title: Database Instance Id
                    type: string
                    format: uuid
                name: instance_id
                in: path
                description: Database Instance Unique Id.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatabaseInstanceUpdateRequest'
                required: true
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatabaseInstance'
                    links:
                        read:
                            operationId: instances_v1_get_by_id
                            description: Read Database instance
                            parameters:
                                instance_id: $request.path.instance_id
                        delete:
                            operationId: instances_v1_delete
                            description: Delete Database instance
                            parameters:
                                instance_id: $request.path.instance_id
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
        delete:
            operationId: instances_v1_delete
            tags:
            - instances
            summary: Deletes a database instance.
            description: Deletes a database instance.
            parameters:
            -   required: true
                schema:
                    title: Database Instance Id
                    type: string
                    format: uuid
                name: instance_id
                in: path
                description: Database Instance Unique Id.
            responses:
                '202':
                    description: Accepted - Database instance deletion in progress.
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/instances/{instance_id}/resize:
        post:
            tags:
            - instances
            summary: Resizes a database instance.
            description: Resizes a database instance.
            operationId: instances_v1_resize
            parameters:
            -   required: true
                schema:
                    title: Database Instance Id
                    type: string
                    format: uuid
                name: instance_id
                in: path
                description: Database Instance Unique Id.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InstanceResizeRequest'
                required: true
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatabaseInstance'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/instances/{instance_id}/start:
        post:
            tags:
            - instances
            summary: Starts a database instance.
            description: Starts a database instance.
            operationId: instances_v1_start
            parameters:
            -   required: true
                schema:
                    title: Database Instance Id
                    type: string
                    format: uuid
                name: instance_id
                in: path
                description: Database Instance Unique Id.
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatabaseInstance'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/instances/{instance_id}/stop:
        post:
            tags:
            - instances
            summary: Stops a database instance.
            description: Stops a database instance.
            operationId: instances_v1_stop
            parameters:
            -   required: true
                schema:
                    title: Database Instance Id
                    type: string
                    format: uuid
                name: instance_id
                in: path
                description: Database Instance Unique Id.
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatabaseInstance'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/instances/{instance_id}/backups:
        get:
            tags:
            - instances
            summary: Backups List.
            description: List all backups.
            operationId: backups_list_v1_instances__instance_id__backups_get
            parameters:
            -   $ref: '#/components/parameters/instance_id'
            -   $ref: '#/components/parameters/offset'
            -   $ref: '#/components/parameters/limit'
            -   $ref: '#/components/parameters/backup_type'
            -   $ref: '#/components/parameters/backup_mode'
            -   $ref: '#/components/parameters/backup_status'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackupsResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
        post:
            tags:
            - instances
            summary: Backup Create.
            description: Creates a new backup asynchronously.
            operationId: backup_create_v1_instances__instance_id__backups_post
            parameters:
            -   $ref: '#/components/parameters/instance_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BackupCreateRequest'
                required: true
            responses:
                '202':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackupResponse'
                    links:
                        read:
                            operationId: backup_detail_v1_instances__instance_id__backups__backup_id__get
                            description: Read a Backup
                            parameters:
                                instance_id: $request.path.instance_id
                                backup_id: $response.body#/id
                        delete:
                            operationId: delete_backup_v1_instances__instance_id__backups__backup_id__delete
                            description: Delete a Backup
                            parameters:
                                instance_id: $request.path.instance_id
                                backup_id: $response.body#/id
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/instances/{instance_id}/backups/{backup_id}:
        get:
            tags:
            - instances
            summary: Backup Detail.
            description: Get a backup detail.
            operationId: backup_detail_v1_instances__instance_id__backups__backup_id__get
            parameters:
            -   $ref: '#/components/parameters/instance_id'
            -   $ref: '#/components/parameters/backup_id'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackupDetailResponse'
                    links:
                        delete:
                            operationId: delete_backup_v1_instances__instance_id__backups__backup_id__delete
                            description: Delete a Backup
                            parameters:
                                instance_id: $request.path.instance_id
                                backup_id: request.path.id
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
        delete:
            tags:
            - instances
            summary: Delete Backup.
            description: Deletes a database backup.
            operationId: delete_backup_v1_instances__instance_id__backups__backup_id__delete
            parameters:
            -   $ref: '#/components/parameters/instance_id'
            -   $ref: '#/components/parameters/backup_id'
            responses:
                '202':
                    description: Successful Response.
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/backups:
        get:
            tags:
            - backups
            summary: Backups List.
            description: List all backups.
            operationId: backups_list_v1__backups_get
            parameters:
            -   $ref: '#/components/parameters/offset'
            -   $ref: '#/components/parameters/limit'
            -   $ref: '#/components/parameters/backup_type'
            -   $ref: '#/components/parameters/backup_mode'
            -   $ref: '#/components/parameters/backup_status'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackupsResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
    /v1/backups/{backup_id}:
        get:
            tags:
            - backups
            summary: Backup Detail.
            description: Get a backup detail.
            operationId: backup_detail_v1__backups__backup_id__get
            parameters:
            -   $ref: '#/components/parameters/backup_id'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackupDetailResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
        delete:
            tags:
            - backups
            summary: Delete Backup.
            description: Deletes a database backup.
            operationId: delete_backup_v1__backups__backup_id__delete
            parameters:
            -   $ref: '#/components/parameters/backup_id'
            responses:
                '202':
                    description: Successful Response.
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/replicas:
        get:
            tags:
            - replicas
            summary: Replicas List.
            description: List all replicas for a given instance.
            operationId: replicas_list_v1_replicas_get
            parameters:
            -   $ref: '#/components/parameters/source_id'
            -   $ref: '#/components/parameters/offset'
            -   $ref: '#/components/parameters/limit'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReplicasResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
        post:
            tags:
            - replicas
            summary: Replica Create.
            description: Creates a new replica for an instance asynchronously.
            operationId: replica_create_v1_replicas_post
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReplicaCreateRequest'
                required: true
            responses:
                '202':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReplicaResponse'
                    links:
                        read:
                            operationId: replica_detail_v1_replicas__replica_id__get
                            description: Read Database replica
                            parameters:
                                replica_id: $response.body#/id
                        delete:
                            operationId: replica_delete_v1_replicas__replica_id__delete
                            description: Delete Database replica
                            parameters:
                                replica_id: $response.body#/id
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/replicas/{replica_id}:
        get:
            tags:
            - replicas
            summary: Replica Detail.
            description: Get an instance replica detail.
            operationId: replica_detail_v1_replicas__replica_id__get
            parameters:
            -   $ref: '#/components/parameters/replica_id'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReplicaDetailResponse'
                    links:
                        delete:
                            operationId: replica_delete_v1_replicas__replica_id__delete
                            description: Delete Database replica
                            parameters:
                                replica_id: $request.path.replica_id
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.read
        delete:
            operationId: replica_v1_delete
            tags:
            - replicas
            summary: Deletes a replica instance.
            description: Deletes a replica instance.
            parameters:
            -   required: true
                schema:
                    title: Database Replica Id
                    type: string
                    format: uuid
                name: replica_id
                in: path
                description: Database Replica Unique Id
            responses:
                '202':
                    description: Accepted - Database replica deletion in progress.
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/replicas/{replica_id}/resize:
        post:
            tags:
            - replicas
            summary: Replica Resize.
            description: Resize an instance replica.
            operationId: replica_resize_v1_replicas_post
            parameters:
            -   $ref: '#/components/parameters/replica_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReplicaResizeRequest'
                required: true
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReplicaDetailResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/replicas/{replica_id}/start:
        post:
            tags:
            - replicas
            summary: Replica Start.
            description: Start an instance replica.
            operationId: replica_start_v1_replicas_post
            parameters:
            -   $ref: '#/components/parameters/replica_id'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReplicaDetailResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/replicas/{replica_id}/stop:
        post:
            tags:
            - replicas
            summary: Replica Stop.
            description: Stop an instance replica.
            operationId: replica_stop_v1_replicas_post
            parameters:
            -   $ref: '#/components/parameters/replica_id'
            responses:
                '200':
                    description: Successful Response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReplicaDetailResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
    /v1/instances/{instance_id}/restores:
        post:
            tags:
            - instances
            summary: Backup restore.
            description: Restores a backup for an instance asynchronously.
            operationId: instances_v1_restore
            parameters:
            -   $ref: '#/components/parameters/instance_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InstanceRestoreRequest'
                required: true
            responses:
                '202':
                    description: Accepted - Database restore creation in progress.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestoreResponse'
                '400':
                    $ref: '#/components/responses/RequiredField'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                '500':
                    $ref: '#/components/responses/InternalServerError'
            security:
            -   OAuth2:
                - dbaas.write
components:
    parameters:
        replica_id:
            name: replica_id
            in: path
            required: true
            style: simple
            explode: false
            schema:
                title: Replica Id
                type: string
                format: uuid
            example: 2218ad95-6ba2-4fef-8302-a31cb1062412
            description: Value referring to replica Id.
        source_id:
            name: source_id
            in: query
            required: false
            style: form
            explode: true
            schema:
                title: Source Id
                type: string
                format: uuid
            example: 9959ee7a-0710-4faa-9f10-6845819e8ac0
            description: Value referring to source Id.
        backup_id:
            name: backup_id
            in: path
            required: true
            style: simple
            explode: false
            schema:
                title: Backup Id
                type: string
                format: uuid
            example: 1b65c0e4-94a1-4385-aedb-c1b34f6e8935
            description: Value referring to backup Id.
        instance_id:
            name: instance_id
            in: path
            required: true
            style: simple
            explode: false
            schema:
                title: Instance Id
                type: string
                format: uuid
            example: f21999cb-302f-48f7-b584-6a84748e112c
            description: Value referring to instance Id.
        datastore_id_path:
            name: datastore_id
            in: path
            required: true
            schema:
                title: Datastore Id
                type: string
                format: uuid
            example: 7a11cfc5-f9f8-4fa2-a418-94a423f6a51f
            description: Value referring to datastore Id.
        instance_expand:
            name: _expand
            in: query
            required: false
            schema:
                type: string
                enum:
                - replicas
            description: 'Instance extra attributes or relations to show with the
                main query. When available, more than one value can be informed using
                commas. e.g: `_expand=value1,value2`'
        offset:
            name: _offset
            in: query
            required: false
            schema:
                type: integer
                minimum: 0
                default: 0
            description: offset
        limit:
            name: _limit
            in: query
            required: false
            schema:
                type: integer
                minimum: 1
                maximum: 25
                default: 10
            description: limit
        datastore_status:
            name: status
            in: query
            schema:
                $ref: '#/components/schemas/DatastoreStatus'
            description: Value referring to datastore status.
        flavor_status:
            name: status
            in: query
            schema:
                $ref: '#/components/schemas/FlavorStatus'
            description: An enumeration.
        backup_type:
            name: type
            in: query
            schema:
                $ref: '#/components/schemas/BackupType'
            description: Value referring to backup type.
        backup_mode:
            name: mode
            in: query
            schema:
                $ref: '#/components/schemas/BackupMode'
            description: Value referring to backup mode.
        backup_status:
            name: status
            in: query
            schema:
                $ref: '#/components/schemas/BackupStatus'
            description: Value referring to backup status.
        instance_status:
            name: status
            in: query
            schema:
                $ref: '#/components/schemas/InstanceStatus'
            description: Value referring to instace status.
    schemas:
        BackupsResponse:
            title: Backups Response
            required:
            - results
            type: object
            properties:
                results:
                    title: Results
                    type: array
                    items:
                        $ref: '#/components/schemas/BackupDetailResponse'
        BackupDetailResponse:
            title: Backup Detail Response
            required:
            - id
            - instance_id
            - type
            - status
            - mode
            - created_at
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid
                instance_id:
                    title: Instance Id
                    type: string
                    format: uuid
                name:
                    title: Name
                    type: string
                location:
                    title: Location
                    type: string
                type:
                    $ref: '#/components/schemas/BackupType'
                status:
                    $ref: '#/components/schemas/BackupStatus'
                mode:
                    $ref: '#/components/schemas/BackupMode'
                db_size:
                    title: Database Size
                    type: integer
                    description: Database size in kilobytes (1024 kilobytes = 1 megabyte).
                    minimum: 0.0
                    exclusiveMinimum: true
                size:
                    title: Size
                    type: integer
                    description: Backup file size in kilobytes (1024 kilobytes = 1
                        megabyte).
                    minimum: 0.0
                    exclusiveMinimum: true
                started_at:
                    title: Started At
                    type: string
                    format: date-time
                finished_at:
                    title: Finished At
                    type: string
                    format: date-time
                created_at:
                    title: Created At
                    type: string
                    format: date-time
                updated_at:
                    title: Updated At
                    type: string
                    format: date-time
        BackupStatus:
            title: Backup Status
            type: string
            description: An enumeration.
            enum:
            - PENDING
            - CREATING
            - CREATED
            - ERROR
            - DELETING
            - DELETED
        BackupType:
            title: Backup Type
            type: string
            description: An enumeration.
            enum:
            - ON_DEMAND
            - AUTOMATED
        BackupMode:
            title: Backup Mode
            type: string
            description: An enumeration.
            enum:
            - FULL
            - INCREMENTAL
        BackupCreateRequest:
            title: Backup Create Request
            required:
            - mode
            type: object
            properties:
                mode:
                    $ref: '#/components/schemas/BackupModeRequest'
        BackupModeRequest:
            title: Backup Mode Request
            type: string
            description: An enumeration.
            enum:
            - FULL
        BackupResponse:
            title: Backup Response
            required:
            - id
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid
        FlavorsResponse:
            title: Flavors Response
            required:
            - results
            type: object
            properties:
                results:
                    title: Results
                    type: array
                    items:
                        $ref: '#/components/schemas/Flavor'
        AddressAccess:
            title: Address Access
            type: string
            enum:
            - PRIVATE
            - PUBLIC
            example: PRIVATE
        AddressType:
            title: Address Type
            type: string
            enum:
            - IPv4
            - IPv6
            example: IPv4
        InstanceStatusUpdate:
            type: string
            enum:
            - ACTIVE
            - STOPPED
            example: ACTIVE
        InstancesResponse:
            title: Instances Response
            required:
            - results
            type: object
            properties:
                results:
                    title: Results
                    type: array
                    items:
                        $ref: '#/components/schemas/DatabaseInstance'
        InstanceStatus:
            type: string
            readOnly: true
            enum:
            - CREATING
            - ERROR
            - STOPPED
            - REBOOT
            - PENDING
            - RESIZING
            - DELETED
            - ACTIVE
            - STARTING
            - STOPPING
            - BACKING_UP
            - DELETING
            - RESTORING
            - ERROR_DELETING
            example: ACTIVE
        InstanceCreateRequest:
            title: Instance Create Request
            required:
            - datastore_id
            - flavor_id
            - name
            - password
            - user
            - volume
            type: object
            properties:
                name:
                    title: Name
                    maxLength: 255
                    type: string
                datastore_id:
                    title: Datastore Id
                    type: string
                    format: uuid
                flavor_id:
                    title: Flavor Id
                    type: string
                    format: uuid
                user:
                    title: User
                    maxLength: 25
                    type: string
                password:
                    title: Password
                    maxLength: 50
                    type: string
                volume:
                    $ref: '#/components/schemas/InstanceVolumeRequest'
                backup_retention_days:
                    title: Backup Retention Days
                    type: integer
                    example: 7
                    default: 30
                    description: The number of days that a particular backup is kept
                        until its deletion.
                    minimum: 0.0
                    exclusiveMinimum: true
                backup_start_at:
                    title: Backup Start At
                    description: Start time which is allowed to start the automated
                        backup process.
                    type: string
                    format: time
                    example: 03:00:00
                    default: 01:00:00
        InstanceVolumeRequest:
            title: Instance Volume Request
            required:
            - size
            type: object
            properties:
                size:
                    description: The size of the volume (in GiB).
                    type: number
                    minimum: 10
                    maximum: 50000
                    example: 30
                type:
                    description: The type of the volume.
                    type: string
                    enum:
                    - CLOUD_NVME
                    - CLOUD_HDD
                    default: CLOUD_NVME
        InstanceVolumeResizeRequest:
            title: Instance Volume Request
            required:
            - size
            type: object
            properties:
                size:
                    description: The size of the volume (in GiB).
                    type: number
                    minimum: 10
                    maximum: 50000
                    example: 30
        InstanceResponse:
            title: Instance Response
            required:
            - id
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid
        RestoreResponse:
            title: Restore Response
            required:
            - id
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid
        InstanceRestoreRequest:
            title: Instance Restore Request
            required:
            - backup_id
            type: object
            properties:
                backup_id:
                    title: Backup Id
                    type: string
                    format: uuid
        DatabaseInstance:
            required:
            - id
            - name
            - datastore_id
            - flavor_id
            - volume
            - addresses
            - status
            - created_at
            - backup_start_at
            - backup_retention_days
            - replicas
            type: object
            properties:
                id:
                    title: Id
                    description: Database instance unique identifier.
                    type: string
                    format: uuid
                    readOnly: true
                name:
                    title: Name
                    description: Database instance unique name.
                    type: string
                    maxLength: 100
                    example: mydbinstance
                datastore_id:
                    description: Datastore unique identifier. Engine and version of
                        datastore.
                    type: string
                    format: uuid
                flavor_id:
                    description: Flavor unique identifier. Instance size.
                    type: string
                    format: uuid
                user:
                    writeOnly: true
                    description: Database User.
                    type: string
                    maxLength: 25
                    example: myuser
                password:
                    writeOnly: true
                    description: Database Password.
                    type: string
                    maxLength: 50
                    format: password
                    example: cGFzc3dk
                volume:
                    $ref: '#/components/schemas/Volume'
                addresses:
                    title: Addresses
                    type: array
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/Addresses'
                status:
                    $ref: '#/components/schemas/InstanceStatus'
                backup_retention_days:
                    title: Backup Retention Days
                    type: integer
                    example: 7
                    default: 30
                    description: The number of days that a particular backup is kept
                        until its deletion.
                    minimum: 0.0
                    exclusiveMinimum: true
                backup_start_at:
                    title: Backup Start At
                    description: Start time (UTC timezone) which is allowed to start
                        the automated backup process.
                    type: string
                    format: time
                    example: 02:00:00
                    default: 04:00:00
                created_at:
                    title: Creation date
                    type: string
                    format: date-time
                    readOnly: true
                updated_at:
                    title: Last updated date
                    type: string
                    format: date-time
                    readOnly: true
                started_at:
                    title: Initial setup start date
                    type: string
                    format: date-time
                    readOnly: true
                finished_at:
                    title: Initial setup finish date
                    type: string
                    format: date-time
                    readOnly: true
                replicas:
                    title: Replicas
                    type: array
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/ReplicaDetailResponse'
        DatabaseInstanceUpdateRequest:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/InstanceStatusUpdate'
                backup_retention_days:
                    title: Backup Retention Days
                    type: integer
                    example: 7
                    default: 30
                    description: The number of days that a particular backup is kept
                        until its deletion.
                    minimum: 0.0
                    exclusiveMinimum: true
                backup_start_at:
                    title: Backup Start At
                    description: Start time which is allowed to start the automated
                        backup process.
                    type: string
                    format: time
                    example: 03:00:00
                    default: 01:00:00
        DatastoreStatus:
            title: Datastore Status
            type: string
            description: An enumeration.
            enum:
            - ACTIVE
            - DEPRECATED
        DatastoresResponse:
            title: Datastores Response
            required:
            - results
            type: object
            properties:
                results:
                    title: Results
                    type: array
                    items:
                        $ref: '#/components/schemas/Datastore'
        Datastore:
            title: Datastore
            required:
            - engine
            - id
            - version
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid
                    description: Datastore unique identifier.
                engine:
                    title: Engine
                    type: string
                    example: mysql
                    description: Database engine.
                version:
                    title: Version
                    type: string
                    description: Database engine version.
                    example: '5.7'
                status:
                    $ref: '#/components/schemas/DatastoreStatus'
        FlavorStatus:
            title: Flavor Status
            type: string
            default: ACTIVE
            description: An enumeration.
            enum:
            - ACTIVE
            - DEPRECATED
        ReplicasResponse:
            title: Replicas Response
            required:
            - results
            type: object
            properties:
                results:
                    title: Results
                    type: array
                    items:
                        $ref: '#/components/schemas/ReplicaDetailResponse'
        ReplicaDetailResponse:
            title: Replica Detail Response
            required:
            - addresses
            - created_at
            - datastore_id
            - flavor_id
            - volume
            - id
            - name
            - source_id
            - status
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid
                source_id:
                    title: Source Id
                    type: string
                    format: uuid
                name:
                    title: Name
                    type: string
                datastore_id:
                    readOnly: true
                    description: Datastore unique identifier. Engine and version of
                        datastore.
                    type: string
                    format: uuid
                flavor_id:
                    title: Flavor Id
                    type: string
                    format: uuid
                volume:
                    $ref: '#/components/schemas/Volume'
                addresses:
                    title: Addresses
                    type: array
                    items:
                        $ref: '#/components/schemas/ReplicaAddressResponse'
                status:
                    $ref: '#/components/schemas/InstanceStatus'
                created_at:
                    title: Created At
                    type: string
                    format: date-time
                updated_at:
                    title: Updated At
                    type: string
                    format: date-time
                started_at:
                    title: Initial setup start date
                    type: string
                    format: date-time
                    readOnly: true
                finished_at:
                    title: Initial setup finish date
                    type: string
                    format: date-time
                    readOnly: true
        ReplicaAddressResponse:
            title: Replica Address Response
            required:
            - access
            type: object
            properties:
                access:
                    $ref: '#/components/schemas/AddressAccess'
                type:
                    $ref: '#/components/schemas/AddressType'
                address:
                    title: Address
                    type: string
        ReplicaCreateRequest:
            title: Replica Create Request
            required:
            - name
            - source_id
            type: object
            properties:
                source_id:
                    title: Source Id
                    type: string
                    format: uuid
                name:
                    title: Name
                    maxLength: 255
                    type: string
                flavor_id:
                    title: Flavor Id
                    type: string
                    format: uuid
        ReplicaResizeRequest:
            title: Replica Resize Request
            required:
            - flavor_id
            type: object
            properties:
                flavor_id:
                    title: Flavor Id
                    type: string
                    format: uuid
        ReplicaResponse:
            title: Replica Response
            required:
            - id
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid
        Volume:
            type: object
            properties:
                size:
                    description: The size of the volume (in GiB).
                    type: number
                    minimum: 10
                    maximum: 50000
                    example: 30
                type:
                    description: The type of the volume.
                    type: string
                    enum:
                    - CLOUD_NVME
                    - CLOUD_HDD
                    - CLOUD_NVME_15K
            required:
            - size
            - type
        Addresses:
            required:
            - access
            - type
            - address
            type: object
            properties:
                access:
                    title: Access
                    description: Determine if the IP can be accessed from the internet.
                    type: string
                    enum:
                    - PRIVATE
                    - PUBLIC
                type:
                    title: Type
                    type: string
                    enum:
                    - IPv4
                    - IPv6
                address:
                    title: Address
                    type: string
                    example: 172.53.10.82
        Flavor:
            type: object
            required:
            - id
            - name
            - label
            - vcpu
            - ram
            - family_description
            - family_slug
            - size
            - sku_source
            - sku_replica
            properties:
                id:
                    description: Flavor unique identifier.
                    type: string
                    format: uuid
                name:
                    description: Flavor name.
                    type: string
                    example: i0-c1-r4-d10
                label:
                    description: Flavor label.
                    type: string
                    example: cloud-dbaas-bs1.small
                vcpu:
                    description: Number of vCPUs.
                    type: string
                    example: '1'
                ram:
                    description: RAM Amount.
                    type: string
                    example: 4 GB
                family_description:
                    description: Flavor Family Description.
                    type: string
                    example: Basic
                family_slug:
                    description: Flavor Family SLUG.
                    type: string
                    example: bs1
                size:
                    description: Flavor Size Description.
                    type: string
                    example: Small
                sku_source:
                    description: SKU Database Instance Source.
                    type: string
                    example: BRNE10600101sm
                sku_replica:
                    description: SKU Database Instance Replica.
                    type: string
                    example: BRNE10610101sm
        ErrorResponse:
            type: object
            properties:
                message:
                    title: Message
                    type: string
                slug:
                    title: Slug
                    type: string
            required:
            - slug
            - message
            example:
                message: Unauthorized
                slug: Unauthorized
        InstanceResizeRequest:
            title: Instance Resize Request
            type: object
            properties:
                flavor_id:
                    title: Flavor Id
                    type: string
                    format: uuid
                volume:
                    $ref: '#/components/schemas/InstanceVolumeResizeRequest'
    securitySchemes:
        OAuth2-pre-prod:
            flows:
                authorizationCode:
                    authorizationUrl: https://idpa-api-preprod.luizalabs.com/oauth/authorize
                    tokenUrl: https://idpa-api-preprod.luizalabs.com/oauth/token
                    scopes:
                        dbaas.read: Ler informações de recursos DBaaS
                        dbaas.write: Escrever informações de recursos DBaaS
            type: oauth2
            description: OAuth2 via IDPA
        OAuth2-prod:
            flows:
                authorizationCode:
                    authorizationUrl: https://autoseg-idp.luizalabs.com/oauth/authorize
                    tokenUrl: https://autoseg-idp.luizalabs.com/oauth/token
                    scopes:
                        dbaas.read: Ler informações de recursos DBaaS
                        dbaas.write: Escrever informações de recursos DBaaS
            type: oauth2
            description: OAuth2 via IDPA.
    responses:
        BadRequest:
            description: Bad Request.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: bad_request
                        message: Bad request
        NotFound:
            description: Not Found.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: not_found
                        message: Not Found
        RequiredField:
            description: Required Field.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: bad_request
                        message: Bad request
        Unauthorized:
            description: Access Unauthorized.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: unauthorized
                        message: Access unauthorized
        Forbidden:
            description: Access Forbidden.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: forbidden
                        message: Access Forbidden
        UnprocessableEntity:
            description: Unprocessable Entity.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: unprocessable_entity
                        message: Unprocessable entity
        TooManyRequests:
            description: Too Many Requests.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: too_many_requests
                        message: Too Many Requests
        InternalServerError:
            description: Internal Server Error.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
                    example:
                        slug: internal_server_error
                        message: Internal server error
servers:
-   url: https://api-dbaas{env}.{region}.jaxyendy.com
    variables:
        region:
            description: Region to reach the service
            default: br-ne-1
            enum:
            - br-ne-1
            - br-ne-2
            - br-se-1
        env:
            description: Environment to use
            default: ''
            enum:
            - ''
            - .pre-prod
            x-cli-transforms:
            -   type: translate
                translations:
                -   from: prod
                    to: ''
                -   from: pre-prod
                    to: .pre-prod
-   url: https://api-dbaas.team-integration.br-se-1.jaxyendy.com
-   url: https://api-dbaas.pre-prod.br-se-1.jaxyendy.com
-   url: https://api-dbaas.br-se-1.jaxyendy.com
-   url: https://api-dbaas.dev-qa.br-ne-1.jaxyendy.com
-   url: https://api-dbaas.team-integration.br-ne-1.jaxyendy.com
-   url: https://api-dbaas.pre-prod.br-ne-1.jaxyendy.com
-   url: https://api-dbaas.br-ne-1.jaxyendy.com
$id: https://dbaas.jaxyendy.com/openapi.json
