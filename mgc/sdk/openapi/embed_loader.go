// Code generated by oapi_index_gen. DO NOT EDIT.

//nolint

package openapi

import (
	_ "embed"
	"os"
	"syscall"
	"magalu.cloud/core/dataloader"
)

//go:embed openapis/audit.openapi.yaml
var audit []byte
//go:embed openapis/block-storage.openapi.yaml
var blockStorage []byte
//go:embed openapis/container-registry.openapi.yaml
var containerRegistry []byte
//go:embed openapis/dbaas.openapi.yaml
var dbaas []byte
//go:embed openapis/index.openapi.yaml
var index []byte
//go:embed openapis/kubernetes.openapi.yaml
var kubernetes []byte
//go:embed openapis/network.openapi.yaml
var network []byte
//go:embed openapis/profile.openapi.yaml
var profile []byte
//go:embed openapis/virtual-machine.openapi.yaml
var virtualMachine []byte

type embedLoader map[string][]byte

func GetEmbedLoader() dataloader.Loader {
	return embedLoaderInstance
}

func (f embedLoader) Load(name string) ([]byte, error) {
	if data, ok := embedLoaderInstance[name]; ok {
		return data, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: syscall.ENOENT}
}

func (f embedLoader) String() string {
	return "embedLoader"
}

var embedLoaderInstance = embedLoader{
	"index.openapi.yaml": index,
	"audit.openapi.yaml": audit,
	"block-storage.openapi.yaml": blockStorage,
	"container-registry.openapi.yaml": containerRegistry,
	"dbaas.openapi.yaml": dbaas,
	"kubernetes.openapi.yaml": kubernetes,
	"network.openapi.yaml": network,
	"profile.openapi.yaml": profile,
	"virtual-machine.openapi.yaml": virtualMachine,
}
