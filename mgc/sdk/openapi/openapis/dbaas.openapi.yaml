{
  "openapi": "3.0.3",
  "info": {
    "title": "DBaaS API Product",
    "description": "DBaaS API Product.",
    "contact": {
      "name": "Tribo IAAS Cloud",
      "url": "https://gitlab.luizalabs.com/cloud/dbaas/docs",
      "email": "cloud-iaas-dbaas@luizalabs.com"
    },
    "version": "1.42.0"
  },
  "tags": [
    {
      "name": "engines",
      "description": "Engines available for database instances."
    },
    {
      "name": "instance_types",
      "description": "Instance Types available for database instances."
    },
    {
      "name": "instances",
      "description": "Database instances management."
    },
    {
      "name": "replicas",
      "description": "Database replicas management."
    },
    {
      "name": "snapshots",
      "description": "Snapshots management."
    }
  ],
  "paths": {
    "/v1/engines": {
      "get": {
        "operationId": "engines_v1_get_all",
        "tags": [
          "engines"
        ],
        "summary": "List available engines.",
        "description": "Returns a list of available engines.",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit_medium"
          },
          {
            "$ref": "#/components/parameters/engine_status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnginesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      }
    },
    "/v1/engines/{engine_id}": {
      "get": {
        "operationId": "engines_v1_get_by_id",
        "tags": [
          "engines"
        ],
        "summary": "Engine detail.",
        "description": "Returns a engine detail.",
        "parameters": [
          {
            "$ref": "#/components/parameters/engine_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      }
    },
    "/v1/instance-types": {
      "get": {
        "operationId": "instance_types_v1_get_all",
        "tags": [
          "instance_types"
        ],
        "summary": "List available instance types.",
        "description": "Returns a list of available instance types. An instance type is a hardware template that defines the size of RAM and vCPU.",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit_medium"
          },
          {
            "$ref": "#/components/parameters/instance_type_status"
          },
          {
            "in": "query",
            "name": "engine_id",
            "required": false,
            "description": "Engine Id unique identifier",
            "schema": {
              "type": "string",
              "title": "Engine Id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceTypesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      }
    },
    "/v1/instance-types/{instance_type_id}": {
      "get": {
        "operationId": "instance_types_v1_get_by_id",
        "tags": [
          "instance_types"
        ],
        "summary": "Instance Type detail.",
        "description": "Returns an instance type detail.",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Type Id",
              "format": "uuid"
            },
            "name": "instance_type_id",
            "in": "path",
            "description": "Instance Type Unique Id."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      }
    },
    "/v1/instances": {
      "get": {
        "operationId": "instances_v1_get_all",
        "tags": [
          "instances"
        ],
        "summary": "List all database instances.",
        "description": "Returns a list of database instances for a x-tenant-id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit_small"
          },
          {
            "$ref": "#/components/parameters/instance_status"
          },
          {
            "$ref": "#/components/parameters/instance_expand"
          },
          {
            "$ref": "#/components/parameters/engine_id_query"
          },
          {
            "$ref": "#/components/parameters/volume_size_query"
          },
          {
            "$ref": "#/components/parameters/volume_size_gt"
          },
          {
            "$ref": "#/components/parameters/volume_size_gte"
          },
          {
            "$ref": "#/components/parameters/volume_size_lt"
          },
          {
            "$ref": "#/components/parameters/volume_size_lte"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstancesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      },
      "post": {
        "operationId": "instances_v1_post",
        "tags": [
          "instances"
        ],
        "summary": "Creates a new database instance.",
        "description": "Creates a new database instance asynchronously for a tenant.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted - Database instance creation in progress.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/instances/{instance_id}": {
      "get": {
        "operationId": "instances_v1_get_by_id",
        "tags": [
          "instances"
        ],
        "summary": "Database instance details.",
        "description": "Returns a database instance detail.",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          },
          {
            "$ref": "#/components/parameters/instance_expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      },
      "patch": {
        "operationId": "instances_v1_patch",
        "tags": [
          "instances"
        ],
        "summary": "Database instance update.",
        "description": "Updates a database instance.",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseInstanceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "instances_v1_delete",
        "tags": [
          "instances"
        ],
        "summary": "Deletes a database instance.",
        "description": "Deletes a database instance.",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Accepted - Database instance deletion in progress."
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/instances/{instance_id}/resize": {
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Resizes a database instance.",
        "description": "Resizes a database instance.",
        "operationId": "instances_v1_resize",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceResizeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/instances/{instance_id}/start": {
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Starts a database instance.",
        "description": "Starts a database instance.",
        "operationId": "instances_v1_start",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/instances/{instance_id}/stop": {
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Stops a database instance.",
        "description": "Stops a database instance.",
        "operationId": "instances_v1_stop",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/replicas": {
      "get": {
        "tags": [
          "replicas"
        ],
        "summary": "Replicas List.",
        "description": "List all replicas for a given instance.",
        "operationId": "replicas_v1_get_all",
        "parameters": [
          {
            "$ref": "#/components/parameters/source_id"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit_medium"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicasResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Create.",
        "description": "Creates a new replica for an instance asynchronously.",
        "operationId": "replicas_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplicaCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/replicas/{replica_id}": {
      "get": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Detail.",
        "description": "Get an instance replica detail.",
        "operationId": "replicas_v1_get_by_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/replica_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "replicas_v1_delete",
        "tags": [
          "replicas"
        ],
        "summary": "Deletes a replica instance.",
        "description": "Deletes a replica instance.",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Database Replica Id",
              "format": "uuid"
            },
            "name": "replica_id",
            "in": "path",
            "description": "Database Replica Unique Id"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Database replica deletion in progress."
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/replicas/{replica_id}/resize": {
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Resize.",
        "description": "Resize an instance replica.",
        "operationId": "replicas_v1_resize",
        "parameters": [
          {
            "$ref": "#/components/parameters/replica_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplicaResizeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/replicas/{replica_id}/start": {
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Start.",
        "description": "Start an instance replica.",
        "operationId": "replicas_v1_start",
        "parameters": [
          {
            "$ref": "#/components/parameters/replica_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/replicas/{replica_id}/stop": {
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Stop.",
        "description": "Stop an instance replica.",
        "operationId": "replicas_v1_stop",
        "parameters": [
          {
            "$ref": "#/components/parameters/replica_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/instances/{instance_id}/snapshots": {
      "get": {
        "tags": [
          "instances"
        ],
        "summary": "Snapshots List.",
        "description": "List all snapshots.",
        "operationId": "instances_v1_snapshots_get_all",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit_medium"
          },
          {
            "$ref": "#/components/parameters/snapshot_type"
          },
          {
            "$ref": "#/components/parameters/snapshot_status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Snapshot Create.",
        "description": "Creates a new snapshot asynchronously.",
        "operationId": "instances_v1_snapshots_post",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/instances/{instance_id}/snapshots/{snapshot_id}": {
      "get": {
        "tags": [
          "instances"
        ],
        "summary": "Snapshot Detail.",
        "description": "Get a snapshot detail.",
        "operationId": "instances_v1_snapshot_get_by_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          },
          {
            "$ref": "#/components/parameters/snapshot_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.read"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.read"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "instances"
        ],
        "summary": "Snapshot Update.",
        "description": "Updates a snapshot.",
        "operationId": "instances_v1_snapshots_patch",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          },
          {
            "$ref": "#/components/parameters/snapshot_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotDetailResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "summary": "Delete Snapshot.",
        "description": "Deletes a database snapshot.",
        "operationId": "instances_v1_snapshots_delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/instance_id"
          },
          {
            "$ref": "#/components/parameters/snapshot_id"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response."
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    },
    "/v1/snapshots/{snapshot_id}/restores": {
      "post": {
        "operationId": "restores_instance_from_snapshot_v1__snapshot_id__post",
        "parameters": [
          {
            "$ref": "#/components/parameters/snapshot_id"
          }
        ],
        "tags": [
          "snapshots"
        ],
        "summary": "Create a new instance from snapshot asynchronously.",
        "description": "Create a new instance from snapshot.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreSnapshotRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted - Snapshot restore instance in progress.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RequiredField"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2PreProd": [
              "dbaas.write"
            ]
          },
          {
            "OAuth2Prod": [
              "dbaas.write"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "replica_id": {
        "name": "replica_id",
        "in": "path",
        "required": true,
        "schema": {
          "title": "Replica Id",
          "type": "string",
          "format": "uuid"
        },
        "example": "2218ad95-6ba2-4fef-8302-a31cb1062412",
        "description": "Value referring to replica Id."
      },
      "source_id": {
        "name": "source_id",
        "in": "query",
        "required": false,
        "schema": {
          "title": "Source Id",
          "type": "string",
          "format": "uuid"
        },
        "example": "9959ee7a-0710-4faa-9f10-6845819e8ac0",
        "description": "Value referring to source Id."
      },
      "backup_id": {
        "name": "backup_id",
        "in": "path",
        "required": true,
        "schema": {
          "title": "Backup Id",
          "type": "string",
          "format": "uuid"
        },
        "example": "1b65c0e4-94a1-4385-aedb-c1b34f6e8935",
        "description": "Value referring to backup Id."
      },
      "snapshot_id": {
        "name": "snapshot_id",
        "in": "path",
        "required": true,
        "schema": {
          "title": "Snapshot Id",
          "type": "string",
          "format": "uuid"
        },
        "example": "c1b34f6e-94a1-4385-aedb-1b65c0e48935",
        "description": "Value referring to snapshot Id."
      },
      "instance_id": {
        "name": "instance_id",
        "in": "path",
        "required": true,
        "schema": {
          "title": "Instance Id",
          "type": "string",
          "format": "uuid"
        },
        "example": "f21999cb-302f-48f7-b584-6a84748e112c",
        "description": "Value referring to instance Id."
      },
      "instance_id_query": {
        "name": "instance_id",
        "in": "query",
        "required": false,
        "schema": {
          "title": "Instance Id",
          "type": "string",
          "format": "uuid"
        },
        "example": "f21999cb-302f-48f7-b584-6a84748e112c",
        "description": "Value referring to instance Id."
      },
      "engine_id": {
        "name": "engine_id",
        "in": "path",
        "required": true,
        "schema": {
          "title": "Datastore Id (Deprecated)",
          "type": "string",
          "format": "uuid",
          "description": "**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n"
        },
        "example": "7a11cfc5-f9f8-4fa2-a418-94a423f6a51f",
        "description": "Value referring to datastore Id."
      },
      "instance_type_id": {
        "name": "instance_type_id",
        "in": "path",
        "required": true,
        "schema": {
          "title": "Flavor Id (Deprecated)",
          "type": "string",
          "format": "uuid",
          "description": "**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.\n"
        },
        "example": "7a11cfc5-f9f8-4fa2-a418-94a423f6a51f",
        "description": "Value referring to instance type Id."
      },
      "engine_id_query": {
        "name": "engine_id",
        "in": "query",
        "required": false,
        "schema": {
          "format": "uuid",
          "title": "Engine Id",
          "type": "string"
        },
        "description": "Value referring to engine Id."
      },
      "volume_size_query": {
        "name": "volume.size",
        "in": "query",
        "required": false,
        "schema": {
          "title": "Volume.Size",
          "type": "integer"
        },
        "description": "Value referring to volume size."
      },
      "volume_size_gt": {
        "name": "volume.size__gt",
        "in": "query",
        "required": false,
        "schema": {
          "title": "Volume.Size Gt",
          "type": "integer"
        },
        "description": "Value referring to volume size greater than."
      },
      "volume_size_gte": {
        "name": "volume.size__gte",
        "in": "query",
        "required": false,
        "schema": {
          "title": "Volume.Size Gte",
          "type": "integer"
        },
        "description": "Value referring to volume size greater than or equal to."
      },
      "volume_size_lt": {
        "name": "volume.size__lt",
        "in": "query",
        "required": false,
        "schema": {
          "title": "Volume.Size Lt",
          "type": "integer"
        },
        "description": "Value referring to volume size less than."
      },
      "volume_size_lte": {
        "name": "volume.size__lte",
        "in": "query",
        "required": false,
        "schema": {
          "title": "Volume.Size Lte",
          "type": "integer"
        },
        "description": "Value referring to volume size less than or equal to."
      },
      "instance_expand": {
        "name": "_expand",
        "in": "query",
        "required": false,
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/InstanceExpand"
            }
          ]
        },
        "description": "Instance extra attributes or relations to show with the main query. When available, more than one value can be informed using commas. e.g: `_expand=value1,value2`"
      },
      "offset": {
        "name": "_offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "description": "The number of items to skip before starting to collect the result set."
      },
      "limit_small": {
        "name": "_limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 25,
          "default": 10
        },
        "description": "The maximum number of items per page."
      },
      "limit_medium": {
        "name": "_limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        },
        "description": "The maximum number of items per page."
      },
      "engine_status": {
        "name": "status",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/EngineStatus"
        },
        "description": "Value referring to engine status."
      },
      "instance_type_status": {
        "name": "status",
        "in": "query",
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/InstanceTypeStatus"
            }
          ],
          "default": "ACTIVE"
        },
        "description": "An enumeration."
      },
      "snapshot_type": {
        "name": "type",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SnapshotType"
        },
        "description": "Value referring to snapshot type."
      },
      "snapshot_status": {
        "name": "status",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SnapshotStatus"
        },
        "description": "Value referring to snapshot status."
      },
      "instance_status": {
        "name": "status",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/InstanceStatus"
        },
        "description": "Value referring to instance status."
      }
    },
    "schemas": {
      "MetaResponse": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "title": "Field",
                  "description": "The field name used to filter the response."
                },
                "value": {
                  "type": "string",
                  "title": "Value",
                  "description": "The field value used to filter the response."
                }
              },
              "title": "FieldValueResponse",
              "required": [
                "field",
                "value"
              ]
            },
            "title": "Filters",
            "description": "Data filters use in the current request pagination."
          },
          "page": {
            "type": "object",
            "properties": {
              "offset": {
                "type": "integer",
                "title": "Offset",
                "description": "The number of items to skip before starting to collect the result set."
              },
              "limit": {
                "type": "integer",
                "title": "Limit",
                "description": "The maximum number of items per page."
              },
              "count": {
                "type": "integer",
                "title": "Count",
                "description": "The number of items on the current page."
              },
              "total": {
                "type": "integer",
                "title": "Total",
                "description": "The total number of items available across all pages."
              },
              "max_limit": {
                "type": "integer",
                "title": "Max Limit",
                "description": "The maximum allowable limit for the number of items per page."
              }
            },
            "title": "PageResponse",
            "required": [
              "limit",
              "offset",
              "count",
              "total",
              "max_limit"
            ]
          }
        },
        "title": "Meta Response",
        "required": [
          "page",
          "filters"
        ],
        "description": "Page details about the current request pagination."
      },
      "FieldValueResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "title": "Field",
            "description": "The field name used to filter the response."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The field value used to filter the response."
          }
        },
        "title": "FieldValueResponse",
        "required": [
          "field",
          "value"
        ]
      },
      "PageResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "title": "Offset",
            "description": "The number of items to skip before starting to collect the result set."
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "The maximum number of items per page."
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "description": "The number of items on the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "The total number of items available across all pages."
          },
          "max_limit": {
            "type": "integer",
            "title": "Max Limit",
            "description": "The maximum allowable limit for the number of items per page."
          }
        },
        "title": "PageResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "total",
          "max_limit"
        ]
      },
      "SnapshotDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "instance": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "title": "Id",
                "format": "uuid",
                "description": "Database instance unique identifier."
              },
              "name": {
                "type": "string",
                "title": "Name",
                "maxLength": 100,
                "description": "Database instance unique name.",
                "example": "my-db-instance"
              }
            },
            "title": "Instance Detail Response",
            "required": [
              "id",
              "name"
            ],
            "description": "This response object provides details about a database instance associated with a snapshot.\n"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "type": {
            "type": "string",
            "title": "Backup Type",
            "enum": [
              "ON_DEMAND",
              "AUTOMATED"
            ],
            "description": "An enumeration."
          },
          "status": {
            "type": "string",
            "title": "Snapshot Status",
            "enum": [
              "PENDING",
              "CREATING",
              "AVAILABLE",
              "RESTORING",
              "ERROR",
              "DELETING",
              "DELETED"
            ],
            "description": "An enumeration."
          },
          "allocated_size": {
            "type": "integer",
            "title": "Allocated Size",
            "description": "Allocated size in gibibytes."
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Finished At",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "format": "date-time"
          }
        },
        "title": "Snapshot Detail Response",
        "required": [
          "id",
          "instance",
          "allocated_size",
          "name",
          "description",
          "type",
          "status",
          "created_at"
        ]
      },
      "SnapshotStatus": {
        "type": "string",
        "title": "Snapshot Status",
        "enum": [
          "PENDING",
          "CREATING",
          "AVAILABLE",
          "RESTORING",
          "ERROR",
          "DELETING",
          "DELETED"
        ],
        "description": "An enumeration."
      },
      "SnapshotType": {
        "type": "string",
        "title": "Backup Type",
        "enum": [
          "ON_DEMAND",
          "AUTOMATED"
        ],
        "description": "An enumeration."
      },
      "SnapshotsResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "filters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "title": "Field",
                      "description": "The field name used to filter the response."
                    },
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "description": "The field value used to filter the response."
                    }
                  },
                  "title": "FieldValueResponse",
                  "required": [
                    "field",
                    "value"
                  ]
                },
                "title": "Filters",
                "description": "Data filters use in the current request pagination."
              },
              "page": {
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "title": "Offset",
                    "description": "The number of items to skip before starting to collect the result set."
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Limit",
                    "description": "The maximum number of items per page."
                  },
                  "count": {
                    "type": "integer",
                    "title": "Count",
                    "description": "The number of items on the current page."
                  },
                  "total": {
                    "type": "integer",
                    "title": "Total",
                    "description": "The total number of items available across all pages."
                  },
                  "max_limit": {
                    "type": "integer",
                    "title": "Max Limit",
                    "description": "The maximum allowable limit for the number of items per page."
                  }
                },
                "title": "PageResponse",
                "required": [
                  "limit",
                  "offset",
                  "count",
                  "total",
                  "max_limit"
                ]
              }
            },
            "title": "Meta Response",
            "required": [
              "page",
              "filters"
            ],
            "description": "Page details about the current request pagination."
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id",
                  "format": "uuid"
                },
                "instance": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Id",
                      "format": "uuid",
                      "description": "Database instance unique identifier."
                    },
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "maxLength": 100,
                      "description": "Database instance unique name.",
                      "example": "my-db-instance"
                    }
                  },
                  "title": "Instance Detail Response",
                  "required": [
                    "id",
                    "name"
                  ],
                  "description": "This response object provides details about a database instance associated with a snapshot.\n"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "description": {
                  "type": "string",
                  "title": "Description"
                },
                "type": {
                  "type": "string",
                  "title": "Backup Type",
                  "enum": [
                    "ON_DEMAND",
                    "AUTOMATED"
                  ],
                  "description": "An enumeration."
                },
                "status": {
                  "type": "string",
                  "title": "Snapshot Status",
                  "enum": [
                    "PENDING",
                    "CREATING",
                    "AVAILABLE",
                    "RESTORING",
                    "ERROR",
                    "DELETING",
                    "DELETED"
                  ],
                  "description": "An enumeration."
                },
                "allocated_size": {
                  "type": "integer",
                  "title": "Allocated Size",
                  "description": "Allocated size in gibibytes."
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "finished_at": {
                  "type": "string",
                  "title": "Finished At",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated At",
                  "format": "date-time"
                }
              },
              "title": "Snapshot Detail Response",
              "required": [
                "id",
                "instance",
                "allocated_size",
                "name",
                "description",
                "type",
                "status",
                "created_at"
              ]
            },
            "title": "Results"
          }
        },
        "title": "Snapshots Response",
        "required": [
          "meta",
          "results"
        ]
      },
      "SnapshotInstanceDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid",
            "description": "Database instance unique identifier."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100,
            "description": "Database instance unique name.",
            "example": "my-db-instance"
          }
        },
        "title": "Instance Detail Response",
        "required": [
          "id",
          "name"
        ],
        "description": "This response object provides details about a database instance associated with a snapshot.\n"
      },
      "SnapshotCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100,
            "description": "Snapshot unique name.",
            "example": "my-snapshot"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "maxLength": 255,
            "description": "Snapshot description.",
            "example": "my-description"
          }
        },
        "required": [
          "name"
        ]
      },
      "SnapshotUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100,
            "description": "Snapshot unique name.",
            "example": "my-snapshot-updated"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "maxLength": 255,
            "description": "Snapshot description.",
            "example": "my-description-updated"
          }
        }
      },
      "SnapshotResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "Snapshot Response",
        "required": [
          "id"
        ]
      },
      "RestoreSnapshotRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100
          },
          "instance_type_id": {
            "type": "string",
            "title": "Instance Type Id",
            "format": "uuid"
          },
          "volume": {
            "type": "object",
            "properties": {
              "size": {
                "type": "integer",
                "maximum": 50000,
                "minimum": 10,
                "description": "The size of the volume (in GiB).",
                "example": 30
              },
              "type": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VolumeType"
                  }
                ],
                "description": "The type of the volume.",
                "default": "CLOUD_NVME_15K"
              }
            },
            "title": "Instance Volume Request",
            "required": [
              "size"
            ]
          },
          "backup_retention_days": {
            "type": "integer",
            "title": "Backup Retention Days",
            "description": "The number of days that a particular backup is kept until its deletion.",
            "default": 7
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time",
            "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
            "default": "04:00:00"
          }
        },
        "title": "Restore Snapshot Instance Request",
        "required": [
          "name",
          "instance_type_id"
        ]
      },
      "InstanceTypesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "filters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "title": "Field",
                      "description": "The field name used to filter the response."
                    },
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "description": "The field value used to filter the response."
                    }
                  },
                  "title": "FieldValueResponse",
                  "required": [
                    "field",
                    "value"
                  ]
                },
                "title": "Filters",
                "description": "Data filters use in the current request pagination."
              },
              "page": {
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "title": "Offset",
                    "description": "The number of items to skip before starting to collect the result set."
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Limit",
                    "description": "The maximum number of items per page."
                  },
                  "count": {
                    "type": "integer",
                    "title": "Count",
                    "description": "The number of items on the current page."
                  },
                  "total": {
                    "type": "integer",
                    "title": "Total",
                    "description": "The total number of items available across all pages."
                  },
                  "max_limit": {
                    "type": "integer",
                    "title": "Max Limit",
                    "description": "The maximum allowable limit for the number of items per page."
                  }
                },
                "title": "PageResponse",
                "required": [
                  "limit",
                  "offset",
                  "count",
                  "total",
                  "max_limit"
                ]
              }
            },
            "title": "Meta Response",
            "required": [
              "page",
              "filters"
            ],
            "description": "Page details about the current request pagination."
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Instance Type unique identifier."
                },
                "name": {
                  "type": "string",
                  "description": "Instance Type name.",
                  "example": "i0-c1-r4-d10"
                },
                "label": {
                  "type": "string",
                  "description": "Instance Type label.",
                  "example": "cloud-dbaas-bs1.small"
                },
                "vcpu": {
                  "type": "string",
                  "description": "Number of vCPUs.",
                  "example": "1"
                },
                "ram": {
                  "type": "string",
                  "description": "RAM Amount.",
                  "example": "4 GB"
                },
                "family_description": {
                  "type": "string",
                  "description": "Instance Type Family Description.",
                  "example": "Basic"
                },
                "family_slug": {
                  "type": "string",
                  "description": "Instance Type Family SLUG.",
                  "example": "bs1"
                },
                "size": {
                  "type": "string",
                  "description": "Instance Type Size Description.",
                  "example": "Small"
                },
                "sku_source": {
                  "type": "string",
                  "description": "SKU Database Instance Source.",
                  "example": "BRNE10600101sm"
                },
                "sku_replica": {
                  "type": "string",
                  "description": "SKU Database Instance Replica.",
                  "example": "BRNE10610101sm"
                }
              },
              "required": [
                "id",
                "name",
                "label",
                "vcpu",
                "ram",
                "family_description",
                "family_slug",
                "size",
                "sku_source",
                "sku_replica"
              ]
            },
            "title": "Results"
          }
        },
        "title": "InstanceTypes Response",
        "required": [
          "meta",
          "results"
        ]
      },
      "AddressAccess": {
        "type": "string",
        "title": "Address Access",
        "enum": [
          "PRIVATE",
          "PUBLIC"
        ],
        "example": "PRIVATE"
      },
      "AddressType": {
        "type": "string",
        "title": "Address Type",
        "enum": [
          "IPv4",
          "IPv6"
        ],
        "example": "IPv4"
      },
      "InstanceStatusUpdate": {
        "type": "string",
        "title": "Instance Status Update",
        "enum": [
          "ACTIVE",
          "STOPPED"
        ],
        "example": "ACTIVE"
      },
      "InstancesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "filters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "title": "Field",
                      "description": "The field name used to filter the response."
                    },
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "description": "The field value used to filter the response."
                    }
                  },
                  "title": "FieldValueResponse",
                  "required": [
                    "field",
                    "value"
                  ]
                },
                "title": "Filters",
                "description": "Data filters use in the current request pagination."
              },
              "page": {
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "title": "Offset",
                    "description": "The number of items to skip before starting to collect the result set."
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Limit",
                    "description": "The maximum number of items per page."
                  },
                  "count": {
                    "type": "integer",
                    "title": "Count",
                    "description": "The number of items on the current page."
                  },
                  "total": {
                    "type": "integer",
                    "title": "Total",
                    "description": "The total number of items available across all pages."
                  },
                  "max_limit": {
                    "type": "integer",
                    "title": "Max Limit",
                    "description": "The maximum allowable limit for the number of items per page."
                  }
                },
                "title": "PageResponse",
                "required": [
                  "limit",
                  "offset",
                  "count",
                  "total",
                  "max_limit"
                ]
              }
            },
            "title": "Meta Response",
            "required": [
              "page",
              "filters"
            ],
            "description": "Page details about the current request pagination."
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id",
                  "format": "uuid",
                  "description": "Database instance unique identifier."
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 100,
                  "description": "Database instance unique name.",
                  "example": "my-db-instance"
                },
                "engine_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Engine unique identifier."
                },
                "datastore_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Datastore unique identifier (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
                  "deprecated": true
                },
                "flavor_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Flavor unique identifier. Instance size  (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.\n",
                  "deprecated": true
                },
                "instance_type_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Instance Type unique identifier. Instance size."
                },
                "volume": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "maximum": 50000,
                      "minimum": 10,
                      "description": "The size of the volume (in GiB).",
                      "example": 30
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CLOUD_NVME",
                        "CLOUD_HDD",
                        "CLOUD_NVME_15K"
                      ],
                      "description": "The type of the volume."
                    }
                  },
                  "required": [
                    "size",
                    "type"
                  ]
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "access": {
                        "type": "string",
                        "title": "Access",
                        "enum": [
                          "PRIVATE",
                          "PUBLIC"
                        ],
                        "description": "Determine if the IP can be accessed from the internet."
                      },
                      "type": {
                        "type": "string",
                        "title": "Type",
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ]
                      },
                      "address": {
                        "type": "string",
                        "title": "Address",
                        "example": "172.53.10.82"
                      }
                    },
                    "required": [
                      "access"
                    ]
                  },
                  "title": "Addresses"
                },
                "status": {
                  "type": "string",
                  "title": "Instance Status",
                  "enum": [
                    "CREATING",
                    "ERROR",
                    "STOPPED",
                    "REBOOT",
                    "PENDING",
                    "RESIZING",
                    "DELETED",
                    "ACTIVE",
                    "STARTING",
                    "STOPPING",
                    "BACKING_UP",
                    "DELETING",
                    "RESTORING",
                    "ERROR_DELETING",
                    "MAINTENANCE",
                    "MAINTENANCE_ERROR"
                  ],
                  "example": "ACTIVE"
                },
                "generation": {
                  "type": "string",
                  "title": "Instance Generation",
                  "enum": [
                    "G0B",
                    "G1B",
                    "G2B",
                    "G3B",
                    "G4B",
                    "G5B",
                    "G6B",
                    "G7B",
                    "G8B",
                    "G9B",
                    "G10B",
                    "G1"
                  ],
                  "description": "Current database instance generation",
                  "example": "G1B"
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Instance Parameters Name",
                        "enum": [
                          "LOWER_CASE_TABLE_NAMES"
                        ],
                        "description": "Database parameter name."
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "title": "Instance Parameters Value",
                        "description": "Database parameter value."
                      }
                    },
                    "title": "InstanceParametersResponse",
                    "required": [
                      "name",
                      "value"
                    ]
                  }
                },
                "backup_retention_days": {
                  "type": "integer",
                  "title": "Backup Retention Days",
                  "description": "The number of days that a particular backup is kept until its deletion.",
                  "example": 7
                },
                "backup_start_at": {
                  "type": "string",
                  "title": "Backup Start At",
                  "format": "time",
                  "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
                  "example": "04:00:00"
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation date",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Last updated date",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Initial setup start date",
                  "format": "date-time"
                },
                "finished_at": {
                  "type": "string",
                  "title": "Initial setup finish date",
                  "format": "date-time"
                },
                "maintenance_scheduled_at": {
                  "type": "string",
                  "title": "Maintenance schedule date",
                  "format": "date-time"
                },
                "replicas": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Id",
                        "format": "uuid"
                      },
                      "source_id": {
                        "type": "string",
                        "title": "Source Id",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string",
                        "title": "Name"
                      },
                      "engine_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Engine unique identifier."
                      },
                      "datastore_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Datastore unique identifier (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
                        "deprecated": true
                      },
                      "instance_type_id": {
                        "type": "string",
                        "title": "Instance Type Id",
                        "format": "uuid"
                      },
                      "flavor_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Instance Type Id (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
                        "deprecated": true
                      },
                      "volume": {
                        "type": "object",
                        "properties": {
                          "size": {
                            "type": "integer",
                            "maximum": 50000,
                            "minimum": 10,
                            "description": "The size of the volume (in GiB).",
                            "example": 30
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "CLOUD_NVME",
                              "CLOUD_HDD",
                              "CLOUD_NVME_15K"
                            ],
                            "description": "The type of the volume."
                          }
                        },
                        "required": [
                          "size",
                          "type"
                        ]
                      },
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "access": {
                              "type": "string",
                              "title": "Address Access",
                              "enum": [
                                "PRIVATE",
                                "PUBLIC"
                              ],
                              "example": "PRIVATE"
                            },
                            "type": {
                              "type": "string",
                              "title": "Address Type",
                              "enum": [
                                "IPv4",
                                "IPv6"
                              ],
                              "example": "IPv4"
                            },
                            "address": {
                              "type": "string",
                              "title": "Address"
                            }
                          },
                          "title": "Replica Address Response",
                          "required": [
                            "access"
                          ]
                        },
                        "title": "Addresses"
                      },
                      "status": {
                        "type": "string",
                        "title": "Instance Status",
                        "enum": [
                          "CREATING",
                          "ERROR",
                          "STOPPED",
                          "REBOOT",
                          "PENDING",
                          "RESIZING",
                          "DELETED",
                          "ACTIVE",
                          "STARTING",
                          "STOPPING",
                          "BACKING_UP",
                          "DELETING",
                          "RESTORING",
                          "ERROR_DELETING",
                          "MAINTENANCE",
                          "MAINTENANCE_ERROR"
                        ],
                        "example": "ACTIVE"
                      },
                      "generation": {
                        "type": "string",
                        "title": "Instance Generation",
                        "enum": [
                          "G0B",
                          "G1B",
                          "G2B",
                          "G3B",
                          "G4B",
                          "G5B",
                          "G6B",
                          "G7B",
                          "G8B",
                          "G9B",
                          "G10B",
                          "G1"
                        ],
                        "description": "Current database instance generation",
                        "example": "G1B"
                      },
                      "parameters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "title": "Instance Parameters Name",
                              "enum": [
                                "LOWER_CASE_TABLE_NAMES"
                              ],
                              "description": "Database parameter name."
                            },
                            "value": {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "title": "Instance Parameters Value",
                              "description": "Database parameter value."
                            }
                          },
                          "title": "InstanceParametersResponse",
                          "required": [
                            "name",
                            "value"
                          ]
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Updated At",
                        "format": "date-time"
                      },
                      "started_at": {
                        "type": "string",
                        "title": "Initial setup start date",
                        "format": "date-time"
                      },
                      "finished_at": {
                        "type": "string",
                        "title": "Initial setup finish date",
                        "format": "date-time"
                      },
                      "maintenance_scheduled_at": {
                        "type": "string",
                        "title": "Maintenance schedule date",
                        "format": "date-time"
                      }
                    },
                    "title": "Replica Detail Response",
                    "required": [
                      "addresses",
                      "created_at",
                      "engine_id",
                      "datastore_id",
                      "flavor_id",
                      "instance_type_id",
                      "volume",
                      "id",
                      "name",
                      "source_id",
                      "status",
                      "generation",
                      "parameters"
                    ]
                  },
                  "title": "Replicas"
                }
              },
              "title": "Instance Detail Response",
              "required": [
                "id",
                "name",
                "engine_id",
                "datastore_id",
                "flavor_id",
                "instance_type_id",
                "volume",
                "addresses",
                "status",
                "generation",
                "parameters",
                "created_at",
                "backup_start_at",
                "backup_retention_days"
              ]
            },
            "title": "Results"
          }
        },
        "title": "Instances Response",
        "required": [
          "meta",
          "results"
        ]
      },
      "InstanceStatus": {
        "type": "string",
        "title": "Instance Status",
        "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE",
          "MAINTENANCE_ERROR"
        ],
        "example": "ACTIVE"
      },
      "InstanceGeneration": {
        "type": "string",
        "title": "Instance Generation",
        "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B",
          "G4B",
          "G5B",
          "G6B",
          "G7B",
          "G8B",
          "G9B",
          "G10B",
          "G1"
        ],
        "description": "Current database instance generation",
        "example": "G1B"
      },
      "InstanceParametersNames": {
        "type": "string",
        "title": "Instance Parameters Name",
        "enum": [
          "LOWER_CASE_TABLE_NAMES"
        ],
        "description": "Database parameter name."
      },
      "InstanceParametersRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Instance Parameters Name",
            "enum": [
              "LOWER_CASE_TABLE_NAMES"
            ],
            "description": "Database parameter name."
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ],
            "title": "Instance Parameters Value",
            "description": "Database parameter value."
          }
        },
        "title": "InstanceParametersRequest",
        "required": [
          "name",
          "value"
        ]
      },
      "InstanceParametersResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Instance Parameters Name",
            "enum": [
              "LOWER_CASE_TABLE_NAMES"
            ],
            "description": "Database parameter name."
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ],
            "title": "Instance Parameters Value",
            "description": "Database parameter value."
          }
        },
        "title": "InstanceParametersResponse",
        "required": [
          "name",
          "value"
        ]
      },
      "InstanceCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100
          },
          "engine_id": {
            "type": "string",
            "title": "Engine Id",
            "format": "uuid"
          },
          "datastore_id": {
            "type": "string",
            "title": "Datastore Id (Deprecated)",
            "format": "uuid",
            "description": "**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
            "deprecated": true
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id (Deprecated)",
            "format": "uuid",
            "description": "**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.\n",
            "deprecated": true
          },
          "instance_type_id": {
            "type": "string",
            "title": "Instance Type Id",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "title": "User",
            "maxLength": 25
          },
          "password": {
            "type": "string",
            "title": "Password",
            "maxLength": 50
          },
          "volume": {
            "type": "object",
            "properties": {
              "size": {
                "type": "integer",
                "maximum": 50000,
                "minimum": 10,
                "description": "The size of the volume (in GiB).",
                "example": 30
              },
              "type": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VolumeType"
                  }
                ],
                "description": "The type of the volume.",
                "default": "CLOUD_NVME_15K"
              }
            },
            "title": "Instance Volume Request",
            "required": [
              "size"
            ]
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Instance Parameters Name",
                  "enum": [
                    "LOWER_CASE_TABLE_NAMES"
                  ],
                  "description": "Database parameter name."
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "title": "Instance Parameters Value",
                  "description": "Database parameter value."
                }
              },
              "title": "InstanceParametersRequest",
              "required": [
                "name",
                "value"
              ]
            },
            "default": []
          },
          "backup_retention_days": {
            "type": "integer",
            "title": "Backup Retention Days",
            "description": "The number of days that a particular backup is kept until its deletion.",
            "default": 7
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time",
            "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
            "default": "04:00:00"
          }
        },
        "title": "Instance Create Request",
        "required": [
          "name",
          "password",
          "user",
          "volume"
        ]
      },
      "InstanceVolumeRequest": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "maximum": 50000,
            "minimum": 10,
            "description": "The size of the volume (in GiB).",
            "example": 30
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VolumeType"
              }
            ],
            "description": "The type of the volume.",
            "default": "CLOUD_NVME_15K"
          }
        },
        "title": "Instance Volume Request",
        "required": [
          "size"
        ]
      },
      "InstanceVolumeResizeRequest": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "maximum": 50000,
            "minimum": 10,
            "description": "The size of the volume (in GiB).",
            "example": 30
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VolumeType"
              }
            ],
            "description": "The type of the volume.",
            "default": "CLOUD_NVME_15K"
          }
        },
        "title": "Instance Volume Request",
        "required": [
          "size"
        ]
      },
      "InstanceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "Instance Response",
        "required": [
          "id"
        ]
      },
      "InstanceDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid",
            "description": "Database instance unique identifier."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100,
            "description": "Database instance unique name.",
            "example": "my-db-instance"
          },
          "engine_id": {
            "type": "string",
            "format": "uuid",
            "description": "Engine unique identifier."
          },
          "datastore_id": {
            "type": "string",
            "format": "uuid",
            "description": "Datastore unique identifier (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
            "deprecated": true
          },
          "flavor_id": {
            "type": "string",
            "format": "uuid",
            "description": "Flavor unique identifier. Instance size  (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.\n",
            "deprecated": true
          },
          "instance_type_id": {
            "type": "string",
            "format": "uuid",
            "description": "Instance Type unique identifier. Instance size."
          },
          "volume": {
            "type": "object",
            "properties": {
              "size": {
                "type": "integer",
                "maximum": 50000,
                "minimum": 10,
                "description": "The size of the volume (in GiB).",
                "example": 30
              },
              "type": {
                "type": "string",
                "enum": [
                  "CLOUD_NVME",
                  "CLOUD_HDD",
                  "CLOUD_NVME_15K"
                ],
                "description": "The type of the volume."
              }
            },
            "required": [
              "size",
              "type"
            ]
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "title": "Access",
                  "enum": [
                    "PRIVATE",
                    "PUBLIC"
                  ],
                  "description": "Determine if the IP can be accessed from the internet."
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "enum": [
                    "IPv4",
                    "IPv6"
                  ]
                },
                "address": {
                  "type": "string",
                  "title": "Address",
                  "example": "172.53.10.82"
                }
              },
              "required": [
                "access"
              ]
            },
            "title": "Addresses"
          },
          "status": {
            "type": "string",
            "title": "Instance Status",
            "enum": [
              "CREATING",
              "ERROR",
              "STOPPED",
              "REBOOT",
              "PENDING",
              "RESIZING",
              "DELETED",
              "ACTIVE",
              "STARTING",
              "STOPPING",
              "BACKING_UP",
              "DELETING",
              "RESTORING",
              "ERROR_DELETING",
              "MAINTENANCE",
              "MAINTENANCE_ERROR"
            ],
            "example": "ACTIVE"
          },
          "generation": {
            "type": "string",
            "title": "Instance Generation",
            "enum": [
              "G0B",
              "G1B",
              "G2B",
              "G3B",
              "G4B",
              "G5B",
              "G6B",
              "G7B",
              "G8B",
              "G9B",
              "G10B",
              "G1"
            ],
            "description": "Current database instance generation",
            "example": "G1B"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Instance Parameters Name",
                  "enum": [
                    "LOWER_CASE_TABLE_NAMES"
                  ],
                  "description": "Database parameter name."
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "title": "Instance Parameters Value",
                  "description": "Database parameter value."
                }
              },
              "title": "InstanceParametersResponse",
              "required": [
                "name",
                "value"
              ]
            }
          },
          "backup_retention_days": {
            "type": "integer",
            "title": "Backup Retention Days",
            "description": "The number of days that a particular backup is kept until its deletion.",
            "example": 7
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time",
            "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
            "example": "04:00:00"
          },
          "created_at": {
            "type": "string",
            "title": "Creation date",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Last updated date",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "title": "Initial setup start date",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Initial setup finish date",
            "format": "date-time"
          },
          "maintenance_scheduled_at": {
            "type": "string",
            "title": "Maintenance schedule date",
            "format": "date-time"
          },
          "replicas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id",
                  "format": "uuid"
                },
                "source_id": {
                  "type": "string",
                  "title": "Source Id",
                  "format": "uuid"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "engine_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Engine unique identifier."
                },
                "datastore_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Datastore unique identifier (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
                  "deprecated": true
                },
                "instance_type_id": {
                  "type": "string",
                  "title": "Instance Type Id",
                  "format": "uuid"
                },
                "flavor_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Instance Type Id (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
                  "deprecated": true
                },
                "volume": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "maximum": 50000,
                      "minimum": 10,
                      "description": "The size of the volume (in GiB).",
                      "example": 30
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CLOUD_NVME",
                        "CLOUD_HDD",
                        "CLOUD_NVME_15K"
                      ],
                      "description": "The type of the volume."
                    }
                  },
                  "required": [
                    "size",
                    "type"
                  ]
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "access": {
                        "type": "string",
                        "title": "Address Access",
                        "enum": [
                          "PRIVATE",
                          "PUBLIC"
                        ],
                        "example": "PRIVATE"
                      },
                      "type": {
                        "type": "string",
                        "title": "Address Type",
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ],
                        "example": "IPv4"
                      },
                      "address": {
                        "type": "string",
                        "title": "Address"
                      }
                    },
                    "title": "Replica Address Response",
                    "required": [
                      "access"
                    ]
                  },
                  "title": "Addresses"
                },
                "status": {
                  "type": "string",
                  "title": "Instance Status",
                  "enum": [
                    "CREATING",
                    "ERROR",
                    "STOPPED",
                    "REBOOT",
                    "PENDING",
                    "RESIZING",
                    "DELETED",
                    "ACTIVE",
                    "STARTING",
                    "STOPPING",
                    "BACKING_UP",
                    "DELETING",
                    "RESTORING",
                    "ERROR_DELETING",
                    "MAINTENANCE",
                    "MAINTENANCE_ERROR"
                  ],
                  "example": "ACTIVE"
                },
                "generation": {
                  "type": "string",
                  "title": "Instance Generation",
                  "enum": [
                    "G0B",
                    "G1B",
                    "G2B",
                    "G3B",
                    "G4B",
                    "G5B",
                    "G6B",
                    "G7B",
                    "G8B",
                    "G9B",
                    "G10B",
                    "G1"
                  ],
                  "description": "Current database instance generation",
                  "example": "G1B"
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Instance Parameters Name",
                        "enum": [
                          "LOWER_CASE_TABLE_NAMES"
                        ],
                        "description": "Database parameter name."
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "title": "Instance Parameters Value",
                        "description": "Database parameter value."
                      }
                    },
                    "title": "InstanceParametersResponse",
                    "required": [
                      "name",
                      "value"
                    ]
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Initial setup start date",
                  "format": "date-time"
                },
                "finished_at": {
                  "type": "string",
                  "title": "Initial setup finish date",
                  "format": "date-time"
                },
                "maintenance_scheduled_at": {
                  "type": "string",
                  "title": "Maintenance schedule date",
                  "format": "date-time"
                }
              },
              "title": "Replica Detail Response",
              "required": [
                "addresses",
                "created_at",
                "engine_id",
                "datastore_id",
                "flavor_id",
                "instance_type_id",
                "volume",
                "id",
                "name",
                "source_id",
                "status",
                "generation",
                "parameters"
              ]
            },
            "title": "Replicas"
          }
        },
        "title": "Instance Detail Response",
        "required": [
          "id",
          "name",
          "engine_id",
          "datastore_id",
          "flavor_id",
          "instance_type_id",
          "volume",
          "addresses",
          "status",
          "generation",
          "parameters",
          "created_at",
          "backup_start_at",
          "backup_retention_days"
        ]
      },
      "DatabaseInstanceUpdateRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "Instance Status Update",
            "enum": [
              "ACTIVE",
              "STOPPED"
            ],
            "example": "ACTIVE"
          },
          "backup_retention_days": {
            "type": "integer",
            "title": "Backup Retention Days",
            "description": "The number of days that a particular backup is kept until its deletion.",
            "example": 7
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time",
            "description": "Start time (UTC timezone) which is allowed to start the automated backup process.",
            "example": "04:00:00"
          }
        },
        "title": "Database Instance Update Request"
      },
      "EngineStatus": {
        "type": "string",
        "title": "EngineStatus",
        "enum": [
          "ACTIVE",
          "DEPRECATED"
        ],
        "description": "An enumeration."
      },
      "EnginesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "filters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "title": "Field",
                      "description": "The field name used to filter the response."
                    },
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "description": "The field value used to filter the response."
                    }
                  },
                  "title": "FieldValueResponse",
                  "required": [
                    "field",
                    "value"
                  ]
                },
                "title": "Filters",
                "description": "Data filters use in the current request pagination."
              },
              "page": {
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "title": "Offset",
                    "description": "The number of items to skip before starting to collect the result set."
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Limit",
                    "description": "The maximum number of items per page."
                  },
                  "count": {
                    "type": "integer",
                    "title": "Count",
                    "description": "The number of items on the current page."
                  },
                  "total": {
                    "type": "integer",
                    "title": "Total",
                    "description": "The total number of items available across all pages."
                  },
                  "max_limit": {
                    "type": "integer",
                    "title": "Max Limit",
                    "description": "The maximum allowable limit for the number of items per page."
                  }
                },
                "title": "PageResponse",
                "required": [
                  "limit",
                  "offset",
                  "count",
                  "total",
                  "max_limit"
                ]
              }
            },
            "title": "Meta Response",
            "required": [
              "page",
              "filters"
            ],
            "description": "Page details about the current request pagination."
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id",
                  "format": "uuid",
                  "description": "Engine unique identifier."
                },
                "engine": {
                  "type": "string",
                  "title": "Engine",
                  "description": "Database engine (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `name`. Please update your requests to use `name` for improved functionality and future compatibility.\n",
                  "example": "mysql",
                  "deprecated": true
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "Database name.",
                  "example": "mysql"
                },
                "version": {
                  "type": "string",
                  "title": "Version",
                  "description": "Database engine version.",
                  "example": "5.7"
                },
                "status": {
                  "type": "string",
                  "title": "EngineStatus",
                  "enum": [
                    "ACTIVE",
                    "DEPRECATED"
                  ],
                  "description": "An enumeration."
                }
              },
              "title": "Engine Response",
              "required": [
                "engine",
                "name",
                "id",
                "version",
                "status"
              ]
            },
            "title": "Results"
          }
        },
        "title": "Engines Response",
        "required": [
          "meta",
          "results"
        ]
      },
      "EngineResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid",
            "description": "Engine unique identifier."
          },
          "engine": {
            "type": "string",
            "title": "Engine",
            "description": "Database engine (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `name`. Please update your requests to use `name` for improved functionality and future compatibility.\n",
            "example": "mysql",
            "deprecated": true
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Database name.",
            "example": "mysql"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Database engine version.",
            "example": "5.7"
          },
          "status": {
            "type": "string",
            "title": "EngineStatus",
            "enum": [
              "ACTIVE",
              "DEPRECATED"
            ],
            "description": "An enumeration."
          }
        },
        "title": "Engine Response",
        "required": [
          "engine",
          "name",
          "id",
          "version",
          "status"
        ]
      },
      "InstanceTypeStatus": {
        "type": "string",
        "title": "Instance Type Status",
        "enum": [
          "ACTIVE",
          "DEPRECATED"
        ],
        "description": "An enumeration."
      },
      "InstanceExpand": {
        "type": "string",
        "title": "Instance Expand",
        "enum": [
          "replicas"
        ],
        "description": "An enumeration."
      },
      "VolumeType": {
        "type": "string",
        "title": "Volume Type",
        "enum": [
          "CLOUD_NVME_15K",
          "CLOUD_NVME",
          "CLOUD_HDD"
        ],
        "description": "The type of the volume."
      },
      "ReplicasResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "filters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "title": "Field",
                      "description": "The field name used to filter the response."
                    },
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "description": "The field value used to filter the response."
                    }
                  },
                  "title": "FieldValueResponse",
                  "required": [
                    "field",
                    "value"
                  ]
                },
                "title": "Filters",
                "description": "Data filters use in the current request pagination."
              },
              "page": {
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "title": "Offset",
                    "description": "The number of items to skip before starting to collect the result set."
                  },
                  "limit": {
                    "type": "integer",
                    "title": "Limit",
                    "description": "The maximum number of items per page."
                  },
                  "count": {
                    "type": "integer",
                    "title": "Count",
                    "description": "The number of items on the current page."
                  },
                  "total": {
                    "type": "integer",
                    "title": "Total",
                    "description": "The total number of items available across all pages."
                  },
                  "max_limit": {
                    "type": "integer",
                    "title": "Max Limit",
                    "description": "The maximum allowable limit for the number of items per page."
                  }
                },
                "title": "PageResponse",
                "required": [
                  "limit",
                  "offset",
                  "count",
                  "total",
                  "max_limit"
                ]
              }
            },
            "title": "Meta Response",
            "required": [
              "page",
              "filters"
            ],
            "description": "Page details about the current request pagination."
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id",
                  "format": "uuid"
                },
                "source_id": {
                  "type": "string",
                  "title": "Source Id",
                  "format": "uuid"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "engine_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Engine unique identifier."
                },
                "datastore_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Datastore unique identifier (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
                  "deprecated": true
                },
                "instance_type_id": {
                  "type": "string",
                  "title": "Instance Type Id",
                  "format": "uuid"
                },
                "flavor_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Instance Type Id (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
                  "deprecated": true
                },
                "volume": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "maximum": 50000,
                      "minimum": 10,
                      "description": "The size of the volume (in GiB).",
                      "example": 30
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CLOUD_NVME",
                        "CLOUD_HDD",
                        "CLOUD_NVME_15K"
                      ],
                      "description": "The type of the volume."
                    }
                  },
                  "required": [
                    "size",
                    "type"
                  ]
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "access": {
                        "type": "string",
                        "title": "Address Access",
                        "enum": [
                          "PRIVATE",
                          "PUBLIC"
                        ],
                        "example": "PRIVATE"
                      },
                      "type": {
                        "type": "string",
                        "title": "Address Type",
                        "enum": [
                          "IPv4",
                          "IPv6"
                        ],
                        "example": "IPv4"
                      },
                      "address": {
                        "type": "string",
                        "title": "Address"
                      }
                    },
                    "title": "Replica Address Response",
                    "required": [
                      "access"
                    ]
                  },
                  "title": "Addresses"
                },
                "status": {
                  "type": "string",
                  "title": "Instance Status",
                  "enum": [
                    "CREATING",
                    "ERROR",
                    "STOPPED",
                    "REBOOT",
                    "PENDING",
                    "RESIZING",
                    "DELETED",
                    "ACTIVE",
                    "STARTING",
                    "STOPPING",
                    "BACKING_UP",
                    "DELETING",
                    "RESTORING",
                    "ERROR_DELETING",
                    "MAINTENANCE",
                    "MAINTENANCE_ERROR"
                  ],
                  "example": "ACTIVE"
                },
                "generation": {
                  "type": "string",
                  "title": "Instance Generation",
                  "enum": [
                    "G0B",
                    "G1B",
                    "G2B",
                    "G3B",
                    "G4B",
                    "G5B",
                    "G6B",
                    "G7B",
                    "G8B",
                    "G9B",
                    "G10B",
                    "G1"
                  ],
                  "description": "Current database instance generation",
                  "example": "G1B"
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Instance Parameters Name",
                        "enum": [
                          "LOWER_CASE_TABLE_NAMES"
                        ],
                        "description": "Database parameter name."
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "title": "Instance Parameters Value",
                        "description": "Database parameter value."
                      }
                    },
                    "title": "InstanceParametersResponse",
                    "required": [
                      "name",
                      "value"
                    ]
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Initial setup start date",
                  "format": "date-time"
                },
                "finished_at": {
                  "type": "string",
                  "title": "Initial setup finish date",
                  "format": "date-time"
                },
                "maintenance_scheduled_at": {
                  "type": "string",
                  "title": "Maintenance schedule date",
                  "format": "date-time"
                }
              },
              "title": "Replica Detail Response",
              "required": [
                "addresses",
                "created_at",
                "engine_id",
                "datastore_id",
                "flavor_id",
                "instance_type_id",
                "volume",
                "id",
                "name",
                "source_id",
                "status",
                "generation",
                "parameters"
              ]
            },
            "title": "Results"
          }
        },
        "title": "Replicas Response",
        "required": [
          "meta",
          "results"
        ]
      },
      "ReplicaDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "source_id": {
            "type": "string",
            "title": "Source Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "engine_id": {
            "type": "string",
            "format": "uuid",
            "description": "Engine unique identifier."
          },
          "datastore_id": {
            "type": "string",
            "format": "uuid",
            "description": "Datastore unique identifier (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
            "deprecated": true
          },
          "instance_type_id": {
            "type": "string",
            "title": "Instance Type Id",
            "format": "uuid"
          },
          "flavor_id": {
            "type": "string",
            "format": "uuid",
            "description": "Instance Type Id (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.\n",
            "deprecated": true
          },
          "volume": {
            "type": "object",
            "properties": {
              "size": {
                "type": "integer",
                "maximum": 50000,
                "minimum": 10,
                "description": "The size of the volume (in GiB).",
                "example": 30
              },
              "type": {
                "type": "string",
                "enum": [
                  "CLOUD_NVME",
                  "CLOUD_HDD",
                  "CLOUD_NVME_15K"
                ],
                "description": "The type of the volume."
              }
            },
            "required": [
              "size",
              "type"
            ]
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "title": "Address Access",
                  "enum": [
                    "PRIVATE",
                    "PUBLIC"
                  ],
                  "example": "PRIVATE"
                },
                "type": {
                  "type": "string",
                  "title": "Address Type",
                  "enum": [
                    "IPv4",
                    "IPv6"
                  ],
                  "example": "IPv4"
                },
                "address": {
                  "type": "string",
                  "title": "Address"
                }
              },
              "title": "Replica Address Response",
              "required": [
                "access"
              ]
            },
            "title": "Addresses"
          },
          "status": {
            "type": "string",
            "title": "Instance Status",
            "enum": [
              "CREATING",
              "ERROR",
              "STOPPED",
              "REBOOT",
              "PENDING",
              "RESIZING",
              "DELETED",
              "ACTIVE",
              "STARTING",
              "STOPPING",
              "BACKING_UP",
              "DELETING",
              "RESTORING",
              "ERROR_DELETING",
              "MAINTENANCE",
              "MAINTENANCE_ERROR"
            ],
            "example": "ACTIVE"
          },
          "generation": {
            "type": "string",
            "title": "Instance Generation",
            "enum": [
              "G0B",
              "G1B",
              "G2B",
              "G3B",
              "G4B",
              "G5B",
              "G6B",
              "G7B",
              "G8B",
              "G9B",
              "G10B",
              "G1"
            ],
            "description": "Current database instance generation",
            "example": "G1B"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Instance Parameters Name",
                  "enum": [
                    "LOWER_CASE_TABLE_NAMES"
                  ],
                  "description": "Database parameter name."
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "title": "Instance Parameters Value",
                  "description": "Database parameter value."
                }
              },
              "title": "InstanceParametersResponse",
              "required": [
                "name",
                "value"
              ]
            }
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "title": "Initial setup start date",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Initial setup finish date",
            "format": "date-time"
          },
          "maintenance_scheduled_at": {
            "type": "string",
            "title": "Maintenance schedule date",
            "format": "date-time"
          }
        },
        "title": "Replica Detail Response",
        "required": [
          "addresses",
          "created_at",
          "engine_id",
          "datastore_id",
          "flavor_id",
          "instance_type_id",
          "volume",
          "id",
          "name",
          "source_id",
          "status",
          "generation",
          "parameters"
        ]
      },
      "ReplicaAddressResponse": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "title": "Address Access",
            "enum": [
              "PRIVATE",
              "PUBLIC"
            ],
            "example": "PRIVATE"
          },
          "type": {
            "type": "string",
            "title": "Address Type",
            "enum": [
              "IPv4",
              "IPv6"
            ],
            "example": "IPv4"
          },
          "address": {
            "type": "string",
            "title": "Address"
          }
        },
        "title": "Replica Address Response",
        "required": [
          "access"
        ]
      },
      "ReplicaCreateRequest": {
        "type": "object",
        "properties": {
          "source_id": {
            "type": "string",
            "title": "Source Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 255
          },
          "flavor_id": {
            "type": "string",
            "format": "uuid",
            "description": "Flavor Id (Deprecated).\n**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.          \n",
            "deprecated": true
          },
          "instance_type_id": {
            "type": "string",
            "title": "Instance Type Id",
            "format": "uuid"
          }
        },
        "title": "Replica Create Request",
        "required": [
          "name",
          "source_id"
        ]
      },
      "ReplicaResizeRequest": {
        "type": "object",
        "properties": {
          "instance_type_id": {
            "type": "string",
            "title": "Instance Type Id",
            "format": "uuid"
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid",
            "deprecated": true
          }
        },
        "title": "Replica Resize Request"
      },
      "ReplicaResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "Replica Response",
        "required": [
          "id"
        ]
      },
      "Volume": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "maximum": 50000,
            "minimum": 10,
            "description": "The size of the volume (in GiB).",
            "example": 30
          },
          "type": {
            "type": "string",
            "enum": [
              "CLOUD_NVME",
              "CLOUD_HDD",
              "CLOUD_NVME_15K"
            ],
            "description": "The type of the volume."
          }
        },
        "required": [
          "size",
          "type"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "title": "Access",
            "enum": [
              "PRIVATE",
              "PUBLIC"
            ],
            "description": "Determine if the IP can be accessed from the internet."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "enum": [
              "IPv4",
              "IPv6"
            ]
          },
          "address": {
            "type": "string",
            "title": "Address",
            "example": "172.53.10.82"
          }
        },
        "required": [
          "access"
        ]
      },
      "InstanceType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Instance Type unique identifier."
          },
          "name": {
            "type": "string",
            "description": "Instance Type name.",
            "example": "i0-c1-r4-d10"
          },
          "label": {
            "type": "string",
            "description": "Instance Type label.",
            "example": "cloud-dbaas-bs1.small"
          },
          "vcpu": {
            "type": "string",
            "description": "Number of vCPUs.",
            "example": "1"
          },
          "ram": {
            "type": "string",
            "description": "RAM Amount.",
            "example": "4 GB"
          },
          "family_description": {
            "type": "string",
            "description": "Instance Type Family Description.",
            "example": "Basic"
          },
          "family_slug": {
            "type": "string",
            "description": "Instance Type Family SLUG.",
            "example": "bs1"
          },
          "size": {
            "type": "string",
            "description": "Instance Type Size Description.",
            "example": "Small"
          },
          "sku_source": {
            "type": "string",
            "description": "SKU Database Instance Source.",
            "example": "BRNE10600101sm"
          },
          "sku_replica": {
            "type": "string",
            "description": "SKU Database Instance Replica.",
            "example": "BRNE10610101sm"
          }
        },
        "required": [
          "id",
          "name",
          "label",
          "vcpu",
          "ram",
          "family_description",
          "family_slug",
          "size",
          "sku_source",
          "sku_replica"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "bad_request"
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "details": {
            "type": "object"
          }
        },
        "title": "Error Response",
        "required": [
          "slug",
          "message"
        ]
      },
      "InstanceResizeRequest": {
        "type": "object",
        "properties": {
          "instance_type_id": {
            "type": "string",
            "title": "Instance Type Id",
            "format": "uuid"
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id (Deprecated)",
            "format": "uuid",
            "description": "**Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.\t\t\n",
            "deprecated": true
          },
          "volume": {
            "type": "object",
            "properties": {
              "size": {
                "type": "integer",
                "maximum": 50000,
                "minimum": 10,
                "description": "The size of the volume (in GiB).",
                "example": 30
              },
              "type": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VolumeType"
                  }
                ],
                "description": "The type of the volume.",
                "default": "CLOUD_NVME_15K"
              }
            },
            "title": "Instance Volume Request",
            "required": [
              "size"
            ]
          }
        },
        "title": "Instance Resize Request"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter the access token"
      },
      "OAuth2PreProd": {
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://idpa-api-preprod.luizalabs.com/oauth/authorize",
            "tokenUrl": "https://idpa-api-preprod.luizalabs.com/oauth/token",
            "scopes": {
              "dbaas.read": "Read DBaaS resources",
              "dbaas.write": "Write DBaaS resources"
            }
          }
        },
        "type": "oauth2",
        "description": "OAuth2 via IDPA"
      },
      "OAuth2Prod": {
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://autoseg-idp.luizalabs.com/oauth/authorize",
            "tokenUrl": "https://autoseg-idp.luizalabs.com/oauth/token",
            "scopes": {
              "dbaas.read": "Read DBaaS resources",
              "dbaas.write": "Write DBaaS resources"
            }
          }
        },
        "type": "oauth2",
        "description": "OAuth2 via IDPA."
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "bad_request",
              "message": "Bad request"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "not_found",
              "message": "Not Found"
            }
          }
        }
      },
      "RequiredField": {
        "description": "Required Field.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "bad_request",
              "message": "Bad request"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Access Unauthorized.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "unauthorized",
              "message": "Access unauthorized"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Access Forbidden.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "forbidden",
              "message": "Access Forbidden"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Entity.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "unprocessable_entity",
              "message": "Unprocessable entity"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "too_many_requests",
              "message": "Too Many Requests"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "slug": "internal_server_error",
              "message": "Internal server error"
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://{env}/{region}/dbaas",
      "variables": {
        "region": {
          "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
          ],
          "default": "br-se1",
          "description": "Region to reach the service",
          "x-mgc-transforms": [
            {
              "allowMissing": true,
              "translations": [
                {
                  "from": "br-mgl1",
                  "to": "br-se-1"
                }
              ],
              "type": "translate"
            }
          ]
        },
        "env": {
          "enum": [
            "api.magalu.cloud",
            "api.pre-prod.jaxyendy.com"
          ],
          "default": "api.magalu.cloud",
          "description": "Environment to use",
          "x-mgc-transforms": [
            {
              "translations": [
                {
                  "from": "prod",
                  "to": "api.magalu.cloud"
                },
                {
                  "from": "pre-prod",
                  "to": "api.pre-prod.jaxyendy.com"
                }
              ],
              "type": "translate"
            }
          ]
        }
      }
    }
  ]
}