{
  "components": {
    "schemas": {
      "AttachmentMachine": {
        "example": {
          "created_at": "2022-01-01T00:00:10Z",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "machine name",
          "state": "running",
          "status": "completed",
          "updated_at": "2022-01-01T00:00:10Z"
        },
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InstanceState"
              },
              {
                "type": "string"
              }
            ],
            "title": "State"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InstanceStatus"
              },
              {
                "type": "string"
              }
            ],
            "title": "Status"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "title": "Updated At"
          }
        },
        "required": [
          "id",
          "name",
          "status",
          "state",
          "created_at",
          "updated_at"
        ],
        "title": "AttachmentMachine",
        "type": "object"
      },
      "AttachmentResponseV1": {
        "example": {
          "attached_at": "2022-01-01T00:00:10Z",
          "device": "/dev/vdb",
          "instance": {
            "created_at": "2022-01-01T00:00:10Z",
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "machine name",
            "state": "running",
            "status": "completed",
            "updated_at": "2022-01-01T00:00:10Z"
          }
        },
        "properties": {
          "attached_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "title": "Attached At"
          },
          "device": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "nullable": true
              }
            ],
            "title": "Device"
          },
          "instance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttachmentMachine"
              },
              {
                "$ref": "#/components/schemas/IdRequest"
              }
            ],
            "title": "Instance"
          }
        },
        "required": [
          "instance",
          "attached_at"
        ],
        "title": "AttachmentResponseV1",
        "type": "object"
      },
      "CopyCrossRegionRequest": {
        "example": {
          "destination_region": "br-se1"
        },
        "properties": {
          "destination_region": {
            "$ref": "#/components/schemas/Regions"
          }
        },
        "required": [
          "destination_region"
        ],
        "title": "CopyCrossRegionRequest",
        "type": "object"
      },
      "CreateAttachmentRequest": {
        "example": {
          "device": "/dev/vdc",
          "instance": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "volume": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        "properties": {
          "device": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "nullable": true
              }
            ],
            "title": "Device"
          },
          "instance": {
            "$ref": "#/components/schemas/IdRequest"
          },
          "volume": {
            "$ref": "#/components/schemas/IdRequest"
          }
        },
        "required": [
          "volume",
          "instance"
        ],
        "title": "CreateAttachmentRequest",
        "type": "object"
      },
      "DiskType": {
        "enum": [
          "nvme",
          "hdd"
        ],
        "title": "DiskType",
        "type": "string"
      },
      "ErrorResponse": {
        "example": {
          "detail": {},
          "message": "Something went wrong",
          "slug": "generic"
        },
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "object"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          }
        },
        "required": [
          "slug",
          "message",
          "detail"
        ],
        "title": "ErrorResponse",
        "type": "object"
      },
      "ExpandSnapshots": {
        "enum": [
          "volume"
        ],
        "title": "ExpandSnapshots",
        "type": "string"
      },
      "GenericVolumeTypeList_VolumeTypeResponseWithAzs_": {
        "example": {
          "types": [
            {
              "allows_encryption": true,
              "availability_zones": [
                "a"
              ],
              "disk_type": "nvme",
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "iops": {
                "read": 1000,
                "total": 1000,
                "write": 1000
              },
              "name": "my_volume_type",
              "status": "active"
            }
          ]
        },
        "properties": {
          "types": {
            "items": {
              "$ref": "#/components/schemas/VolumeTypeResponseWithAzs"
            },
            "title": "Types",
            "type": "array"
          }
        },
        "required": [
          "types"
        ],
        "title": "GenericVolumeTypeList[VolumeTypeResponseWithAzs]",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "IdRequest": {
        "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "properties": {
          "id": {
            "minLength": 1,
            "title": "Id",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "IdRequest",
        "type": "object"
      },
      "IdResponse": {
        "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        },
        "properties": {
          "id": {
            "minLength": 1,
            "title": "Id",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "IdResponse",
        "type": "object"
      },
      "InstanceState": {
        "enum": [
          "new",
          "running",
          "stopped",
          "suspended",
          "deleted"
        ],
        "title": "InstanceState",
        "type": "string"
      },
      "InstanceStatus": {
        "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_error_quota",
          "completed",
          "retyping_pending",
          "retyping",
          "retyping_confirmed",
          "retyping_error",
          "retyping_error_quota",
          "stopping_pending",
          "stopping",
          "suspending_pending",
          "suspending",
          "rebooting_pending",
          "rebooting",
          "starting_pending",
          "starting",
          "deleting_pending",
          "deleting",
          "deleting_error",
          "deleted"
        ],
        "title": "InstanceStatus",
        "type": "string"
      },
      "Metadata": {
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "required": [
          "page"
        ],
        "title": "Metadata",
        "type": "object"
      },
      "Name": {
        "example": {
          "name": "some_resource_name"
        },
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "Name",
        "type": "object"
      },
      "PageMetadata": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          },
          "max_limit": {
            "title": "Max Limit",
            "type": "integer"
          },
          "offset": {
            "title": "Offset",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          }
        },
        "required": [
          "offset",
          "limit",
          "count",
          "total",
          "max_limit"
        ],
        "title": "PageMetadata",
        "type": "object"
      },
      "Regions": {
        "enum": [
          "br-se1",
          "br-mgl1",
          "br-ne1"
        ],
        "title": "Regions",
        "type": "string"
      },
      "RenameVolumeRequest": {
        "example": {
          "name": "volume-name"
        },
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 3,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "RenameVolumeRequest",
        "type": "object"
      },
      "SnapshotCreationRequest": {
        "example": {
          "description": "my-snapshot",
          "name": "snapshot-name",
          "source_snapshot": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "type": "instant",
          "volume": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "nullable": true
              }
            ],
            "title": "Description"
          },
          "name": {
            "maxLength": 50,
            "minLength": 3,
            "title": "Name",
            "type": "string"
          },
          "source_snapshot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdRequest"
              },
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "nullable": true
              }
            ],
            "title": "Source Snapshot"
          },
          "type": {
            "$ref": "#/components/schemas/SnapshotType",
            "default": "instant"
          },
          "volume": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdRequest"
              },
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "nullable": true
              }
            ],
            "title": "Volume"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "title": "SnapshotCreationRequest",
        "type": "object"
      },
      "SnapshotListResponse": {
        "example": {
          "meta": {
            "page": {
              "count": 0,
              "limit": 20,
              "max_limit": 100,
              "offset": 0,
              "total": 0
            }
          },
          "snapshots": [
            {
              "availability_zones": [
                "br-ne1-a"
              ],
              "created_at": "2022-01-01T00:00:10Z",
              "description": "my snapshot for testing",
              "encrypted": false,
              "error": {
                "message": "You have reached the limit of allowed snapshots. Please, remove unused snapshots or contact support to increase your quota.",
                "slug": "creating_error_quota"
              },
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "My snapshot",
              "size": 10,
              "state": "available",
              "status": "completed",
              "type": "object",
              "updated_at": "2022-01-01T00:00:10Z",
              "volume": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          ]
        },
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Metadata"
          },
          "snapshots": {
            "items": {
              "$ref": "#/components/schemas/SnapshotResponse"
            },
            "title": "Snapshots",
            "type": "array"
          }
        },
        "required": [
          "meta",
          "snapshots"
        ],
        "title": "SnapshotListResponse",
        "type": "object"
      },
      "SnapshotRenameRequest": {
        "example": {
          "name": "snapshot-name"
        },
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 3,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "SnapshotRenameRequest",
        "type": "object"
      },
      "SnapshotResponse": {
        "example": {
          "availability_zones": [
            "br-ne1-a"
          ],
          "created_at": "2022-01-01T00:00:10Z",
          "description": "my snapshot for testing",
          "encrypted": false,
          "error": {
            "message": "You have reached the limit of allowed snapshots. Please, remove unused snapshots or contact support to increase your quota.",
            "slug": "creating_error_quota"
          },
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "My snapshot",
          "size": 10,
          "state": "available",
          "status": "completed",
          "type": "object",
          "updated_at": "2022-01-01T00:00:10Z",
          "volume": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        "properties": {
          "availability_zones": {
            "items": {
              "type": "string"
            },
            "title": "Availability Zones",
            "type": "array"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "nullable": true
              }
            ],
            "title": "Description"
          },
          "encrypted": {
            "title": "Encrypted",
            "type": "boolean"
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SnapshotResponseError"
              },
              {
                "nullable": true
              }
            ]
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/SnapshotStateV1"
          },
          "status": {
            "$ref": "#/components/schemas/SnapshotStatusV1"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "volume": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdResponse"
              },
              {
                "$ref": "#/components/schemas/SnapshotVolume"
              },
              {
                "nullable": true
              }
            ],
            "title": "Volume"
          }
        },
        "required": [
          "id",
          "name",
          "size",
          "description",
          "state",
          "status",
          "created_at",
          "updated_at",
          "volume",
          "availability_zones",
          "type",
          "encrypted"
        ],
        "title": "SnapshotResponse",
        "type": "object"
      },
      "SnapshotResponseError": {
        "example": {
          "message": "You have reached the limit of allowed snapshots. Please, remove unused snapshots or contact support to increase your quota.",
          "slug": "creating_error_quota"
        },
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          }
        },
        "required": [
          "slug",
          "message"
        ],
        "title": "SnapshotResponseError",
        "type": "object"
      },
      "SnapshotStateV1": {
        "enum": [
          "new",
          "available",
          "deleted"
        ],
        "title": "SnapshotStateV1",
        "type": "string"
      },
      "SnapshotStatusV1": {
        "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_error_quota",
          "completed",
          "deleting",
          "deleted",
          "deleted_error",
          "replicating",
          "replicating_error",
          "replicating_error_quota",
          "restoring",
          "restoring_error",
          "reserved"
        ],
        "title": "SnapshotStatusV1",
        "type": "string"
      },
      "SnapshotType": {
        "enum": [
          "instant",
          "object"
        ],
        "title": "SnapshotType",
        "type": "string"
      },
      "SnapshotVolume": {
        "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "My volume",
          "size": 10,
          "type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            "name": "My volume type"
          }
        },
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/SnapshotVolumeType"
          }
        },
        "required": [
          "id",
          "name",
          "size",
          "type"
        ],
        "title": "SnapshotVolume",
        "type": "object"
      },
      "SnapshotVolumeType": {
        "example": {
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "My volume type"
        },
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "SnapshotVolumeType",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      },
      "VolumeCreateRequestV1": {
        "example": {
          "availability_zone": "br-se1-a",
          "encrypted": false,
          "name": "volume-name",
          "size": 10,
          "snapshot": {
            "name": "my_snapshot_name"
          },
          "type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        "properties": {
          "availability_zone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "nullable": true
              }
            ],
            "title": "Availability Zone"
          },
          "encrypted": {
            "default": false,
            "description": "Indicates if the volume is encrypted. Default is False.",
            "title": "Encrypted",
            "type": "boolean"
          },
          "name": {
            "maxLength": 50,
            "minLength": 3,
            "title": "Name",
            "type": "string"
          },
          "size": {
            "description": "Gibibytes (GiB)",
            "maximum": 2147483648,
            "minimum": 10,
            "title": "Size",
            "type": "integer"
          },
          "snapshot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdRequest"
              },
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "nullable": true
              }
            ],
            "title": "Snapshot"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdRequest"
              },
              {
                "$ref": "#/components/schemas/Name"
              }
            ],
            "title": "Type"
          }
        },
        "required": [
          "name",
          "size",
          "type"
        ],
        "title": "VolumeCreateRequestV1",
        "type": "object"
      },
      "VolumeExtendRequest": {
        "example": {
          "size": 20
        },
        "properties": {
          "size": {
            "description": "New volume size in GB",
            "exclusiveMinimum": false,
            "title": "Size",
            "type": "integer"
          }
        },
        "required": [
          "size"
        ],
        "title": "VolumeExtendRequest",
        "type": "object"
      },
      "VolumeResponseError": {
        "example": {
          "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
          "slug": "creating_error_quota"
        },
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          }
        },
        "required": [
          "slug",
          "message"
        ],
        "title": "VolumeResponseError",
        "type": "object"
      },
      "VolumeResponseV1": {
        "example": {
          "attachment": {
            "attached_at": "2022-01-01T00:00:10Z",
            "device": "/dev/vdb",
            "instance": {
              "created_at": "2022-01-01T00:00:10Z",
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "machine name",
              "state": "running",
              "status": "completed",
              "updated_at": "2022-01-01T00:00:10Z"
            }
          },
          "availability_zone": "br-ne1-a",
          "availability_zones": [
            "br-ne1-a"
          ],
          "created_at": "2022-01-01T00:00:10Z",
          "encrypted": false,
          "error": {
            "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
            "slug": "creating_error_quota"
          },
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "name": "volume name",
          "size": 10,
          "state": "in-use",
          "status": "completed",
          "type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "updated_at": "2022-01-01T00:00:10Z"
        },
        "properties": {
          "attachment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttachmentResponseV1"
              },
              {
                "nullable": true
              }
            ]
          },
          "availability_zone": {
            "title": "Availability Zone",
            "type": "string"
          },
          "availability_zones": {
            "items": {
              "type": "string"
            },
            "title": "Availability Zones",
            "type": "array"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "encrypted": {
            "default": false,
            "title": "Encrypted",
            "type": "boolean"
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VolumeResponseError"
              },
              {
                "nullable": true
              }
            ]
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/VolumeStateV1"
          },
          "status": {
            "$ref": "#/components/schemas/VolumeStatusV1"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdRequest"
              },
              {
                "$ref": "#/components/schemas/VolumeTypeResponse"
              }
            ],
            "title": "Type"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "title": "Updated At"
          }
        },
        "required": [
          "id",
          "name",
          "size",
          "status",
          "state",
          "created_at",
          "updated_at",
          "type",
          "availability_zone",
          "availability_zones"
        ],
        "title": "VolumeResponseV1",
        "type": "object"
      },
      "VolumeRetypeRequest": {
        "example": {
          "new_type": {
            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        "properties": {
          "new_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdRequest"
              },
              {
                "$ref": "#/components/schemas/Name"
              }
            ],
            "title": "New Type"
          }
        },
        "required": [
          "new_type"
        ],
        "title": "VolumeRetypeRequest",
        "type": "object"
      },
      "VolumeStateV1": {
        "enum": [
          "new",
          "available",
          "in-use",
          "deleted",
          "legacy"
        ],
        "title": "VolumeStateV1",
        "type": "string"
      },
      "VolumeStatusV1": {
        "enum": [
          "provisioning",
          "creating",
          "creating_error",
          "creating_error_quota",
          "completed",
          "extend_pending",
          "extending",
          "extend_error",
          "extend_error_quota",
          "attaching_pending",
          "attaching_error",
          "attaching",
          "detaching_pending",
          "detaching_error",
          "detaching",
          "retype_pending",
          "retyping",
          "retype_error",
          "retype_error_quota",
          "deleting_pending",
          "deleting",
          "deleted",
          "deleted_error"
        ],
        "title": "VolumeStatusV1",
        "type": "string"
      },
      "VolumeTypeResponse": {
        "example": {
          "disk_type": "nvme",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "iops": {
            "read": 1000,
            "total": 1000,
            "write": 1000
          },
          "name": "my_volume_type",
          "status": "active"
        },
        "properties": {
          "disk_type": {
            "$ref": "#/components/schemas/DiskType"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "iops": {
            "$ref": "#/components/schemas/VolumeTypeSpec"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/VolumeTypeStatus"
          }
        },
        "required": [
          "iops",
          "id",
          "name",
          "disk_type",
          "status"
        ],
        "title": "VolumeTypeResponse",
        "type": "object"
      },
      "VolumeTypeResponseWithAzs": {
        "example": {
          "allows_encryption": true,
          "availability_zones": [
            "a"
          ],
          "disk_type": "nvme",
          "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "iops": {
            "read": 1000,
            "total": 1000,
            "write": 1000
          },
          "name": "my_volume_type",
          "status": "active"
        },
        "properties": {
          "allows_encryption": {
            "default": false,
            "title": "Allows Encryption",
            "type": "boolean"
          },
          "availability_zones": {
            "items": {
              "type": "string"
            },
            "title": "Availability Zones",
            "type": "array"
          },
          "disk_type": {
            "$ref": "#/components/schemas/DiskType"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "iops": {
            "$ref": "#/components/schemas/VolumeTypeSpec"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/VolumeTypeStatus"
          }
        },
        "required": [
          "iops",
          "id",
          "name",
          "disk_type",
          "status",
          "availability_zones"
        ],
        "title": "VolumeTypeResponseWithAzs",
        "type": "object"
      },
      "VolumeTypeSpec": {
        "example": {
          "read": 1000,
          "total": 1000,
          "write": 1000
        },
        "properties": {
          "read": {
            "title": "Read",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "write": {
            "title": "Write",
            "type": "integer"
          }
        },
        "required": [
          "read",
          "write",
          "total"
        ],
        "title": "VolumeTypeSpec",
        "type": "object"
      },
      "VolumeTypeStatus": {
        "enum": [
          "active",
          "deprecated",
          "deleted"
        ],
        "title": "VolumeTypeStatus",
        "type": "string"
      },
      "VolumesResponseV1": {
        "example": {
          "meta": {
            "page": {
              "count": 0,
              "limit": 20,
              "max_limit": 100,
              "offset": 0,
              "total": 0
            }
          },
          "volumes": [
            {
              "attachment": {
                "attached_at": "2022-01-01T00:00:10Z",
                "device": "/dev/vdb",
                "instance": {
                  "created_at": "2022-01-01T00:00:10Z",
                  "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "name": "machine name",
                  "state": "running",
                  "status": "completed",
                  "updated_at": "2022-01-01T00:00:10Z"
                }
              },
              "availability_zone": "br-ne1-a",
              "availability_zones": [
                "br-ne1-a"
              ],
              "created_at": "2022-01-01T00:00:10Z",
              "encrypted": false,
              "error": {
                "message": "You have reached the limit of allowed disks. Please, remove unused disks or contact support to increase your quota.",
                "slug": "creating_error_quota"
              },
              "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "name": "volume name",
              "size": 10,
              "state": "in-use",
              "status": "completed",
              "type": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              },
              "updated_at": "2022-01-01T00:00:10Z"
            }
          ]
        },
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Metadata"
          },
          "volumes": {
            "items": {
              "$ref": "#/components/schemas/VolumeResponseV1"
            },
            "title": "Volumes",
            "type": "array"
          }
        },
        "required": [
          "meta",
          "volumes"
        ],
        "title": "VolumesResponseV1",
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "kassio.junqueira@luizalabs.com",
      "name": "IaaS Products",
      "url": "https://github.com/luizalabs"
    },
    "description": "Block Storage API Product",
    "title": "Block Storage API Product - v1",
    "version": "v1"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/attachments": {
      "post": {
        "description": "Attach a Volume to a Virtual Machine instance for the currently\n authenticated tenant.\n\nThe Volume attachment will be completed when the Volume status returns to\n\"completed\", and the state becomes \"in-use\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"available\".\n- The Virtual Machine's state must be \"stopped\" or \"running\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n**virtual-machine instances get --id [uuid]** command\".",
        "operationId": "create_attachment_v1_v1_attachments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttachmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Create Attachment V1 V1 Attachments Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Create Attachment V1 V1 Attachments Post",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Create Attachment V1 V1 Attachments Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Attach a volume to an instance.",
        "tags": [
          "attachments"
        ],
        "x-permission-name": "bs_volume_attach",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/attachments/{id}": {
      "delete": {
        "description": "Detach a Volume from a Virtual Machine instance for the\n currently authenticated tenant.\n\nThe Volume detachment will be completed when the Volume state returns to\n \"available,\" and the status becomes \"completed\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"in-use\".\n- The Virtual Machine's state must be \"stopped\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n **virtual-machine instances get --id [uuid]** command.\n- Ensure that any file systems on the device within your operating system are\n unmounted before detaching the Volume.\n\n#### Troubleshooting\n- A failure during detachment can result in the Volume becoming stuck in the\n busy state. If this occurs, detachment may be delayed indefinitely until you\n unmount the Volume, force detachment, reboot the instance, or perform all\n three.",
        "operationId": "delete_attachment_v1_v1_attachments__id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Delete Attachment V1 V1 Attachments  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Delete Attachment V1 V1 Attachments  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Delete Attachment V1 V1 Attachments  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Delete an attachment.",
        "tags": [
          "attachments"
        ],
        "x-permission-name": "bs_volume_detach",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/snapshots": {
      "get": {
        "description": "Retrieve a list of Snapshots for the currently authenticated tenant.\n\n#### Notes\n- Use the expand argument to obtain additional details about the Volume used to\n create each Snapshot.",
        "operationId": "list_snapshot_v1_snapshots_get",
        "parameters": [
          {
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "$ref": "#/components/schemas/ExpandSnapshots"
              },
              "title": "Expand",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "_limit",
            "required": false,
            "schema": {
              "default": 50,
              "exclusiveMinimum": false,
              "title": " Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "_offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": " Offset",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "_sort",
            "required": false,
            "schema": {
              "default": "created_at:asc",
              "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
              "title": " Sort",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "nullable": true
                }
              ],
              "title": "Name"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SnapshotType"
                },
                {
                  "nullable": true
                }
              ],
              "title": "Type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotListResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 List Snapshot V1 Snapshots Get",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 List Snapshot V1 Snapshots Get",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 List Snapshot V1 Snapshots Get",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "List all snapshots.",
        "tags": [
          "snapshots"
        ],
        "x-permission-name": "bs_snapshot_list",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Create a Snapshot for the currently authenticated tenant.\n\nThe Snapshot can be used when it reaches the \"available\" state and the\n \"completed\" status.\n\n#### Rules\n- The Snapshot name must be unique; otherwise, the creation will be disallowed.\n- Creating Snapshots from restored Volumes may lead to future conflicts as\n you can't delete a Volume with an Snapshot and can't delete a Snapshot with a\n restored Volume, so we recommend avoiding it.\n\n#### Notes\n- Use the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume that will be used to create the\n Snapshot.",
        "operationId": "create_snapshot_v1_snapshots_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Create Snapshot V1 Snapshots Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Create Snapshot V1 Snapshots Post",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Create Snapshot V1 Snapshots Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Create a snapshot.",
        "tags": [
          "snapshots"
        ],
        "x-permission-name": "bs_snapshot_create",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/snapshots/{id}": {
      "delete": {
        "description": "Delete a Snapshot for the currently authenticated tenant.\n\n#### Rules\n- The Snapshot's status must be \"completed\".\n- The Snapshot's state must be \"available\".\n- Deleting a Snapshot that has been restored is not possible. If necessary,\n delete the restored Volume first and then proceed to delete the Snapshot.\n\n#### Notes\n- Utilize the **block-storage snapshots** list command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot you wish to delete.\n- If needed, you can use the **block-storage volume list** command to retrieve\n a list of all Volumes and obtain the ID of the restored Volume.",
        "operationId": "delete_snapshot_v1_snapshots__id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Delete Snapshot V1 Snapshots  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Delete Snapshot V1 Snapshots  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Delete Snapshot V1 Snapshots  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Delete a snapshot.",
        "tags": [
          "snapshots"
        ],
        "x-permission-name": "bs_snapshot_delete",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      },
      "get": {
        "description": "Retrieve details of a Snapshot for the currently authenticated tenant.\n\n#### Notes\n- Use the **expand** argument to obtain additional details about the Volume\n used to create the Snapshot.\n- Utilize the **block-storage snapshots list** command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot for which you want to retrieve\n details.",
        "operationId": "get_snapshot_v1_snapshots__id__get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "$ref": "#/components/schemas/ExpandSnapshots"
              },
              "title": "Expand",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Get Snapshot V1 Snapshots  Id  Get",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Get Snapshot V1 Snapshots  Id  Get",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Get Snapshot V1 Snapshots  Id  Get",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Retrieve the details of a specific snapshot.",
        "tags": [
          "snapshots"
        ],
        "x-permission-name": "bs_snapshot_get",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.read"
            ]
          }
        ]
      }
    },
    "/v1/snapshots/{id}/copy": {
      "post": {
        "description": "Copy a object snapshot cross region for the currently authenticated tenant.\n\n#### Rules\n- The copy only be accepted when the destiny region is different from origin region.\n- The copy only be accepted if the snapshot name in destiny region is different from input name.\n- The copy only be accepted if the user has access to destiny region.\n\n#### Notes\n- Utilize the **block-storage snapshots list** command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot you wish to copy across different region.",
        "operationId": "copy_snapshot_cross_region_v1_snapshots__id__copy_post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyCrossRegionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Copy Snapshot Cross Region V1 Snapshots  Id  Copy Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Copy Snapshot Cross Region V1 Snapshots  Id  Copy Post",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Copy Snapshot Cross Region V1 Snapshots  Id  Copy Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Copy a object snapshot to another region.",
        "tags": [
          "snapshots"
        ],
        "x-permission-name": "bs_snapshot_copy",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/snapshots/{id}/rename": {
      "patch": {
        "description": "Rename a Snapshot for the currently authenticated tenant.\n\n#### Rules\n- The Snapshot name must be unique; otherwise, renaming will not be allowed.\n\n#### Notes\n- Utilize the **block-storage snapshots list** command to retrieve a list of\n all Snapshots and obtain the ID of the Snapshot you wish to rename.",
        "operationId": "rename_snapshot_v1_snapshots__id__rename_patch",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRenameRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Rename Snapshot V1 Snapshots  Id  Rename Patch",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Rename Snapshot V1 Snapshots  Id  Rename Patch",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Rename Snapshot V1 Snapshots  Id  Rename Patch",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Rename a snapshot.",
        "tags": [
          "snapshots"
        ],
        "x-permission-name": "bs_snapshot_rename",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/volume-types": {
      "get": {
        "description": "List Volume Types allowed in the current region.\n\n#### Notes\n\n- Volume types are managed internally. If you wish to use a Volume Type that\n is not yet available, please contact our support team for assistance.",
        "operationId": "list_volume_types_v1_v1_volume_types_get",
        "parameters": [
          {
            "in": "query",
            "name": "availability-zone",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "nullable": true
                }
              ],
              "title": "Availability-Zone"
            }
          },
          {
            "in": "query",
            "name": "allows-encryption",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "nullable": true
                }
              ],
              "title": "Allows-Encryption"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "nullable": true
                }
              ],
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericVolumeTypeList_VolumeTypeResponseWithAzs_"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "List all volume types.",
        "tags": [
          "volume-types"
        ],
        "x-permission-name": "bs_volume_type_list",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.read"
            ]
          }
        ]
      }
    },
    "/v1/volumes": {
      "get": {
        "description": "Retrieve a list of Volumes for the currently authenticated tenant.\n\n#### Notes\n- Use the expand argument to obtain additional details about the Volume Type.",
        "operationId": "list_volume_v1_v1_volumes_get",
        "parameters": [
          {
            "description": "You can get more detailed info about: ['volume_type', 'attachment']",
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "default": [],
              "description": "You can get more detailed info about: ['volume_type', 'attachment']",
              "items": {
                "type": "string"
              },
              "title": "Expand",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "_limit",
            "required": false,
            "schema": {
              "default": 50,
              "exclusiveMinimum": false,
              "title": " Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "_offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": " Offset",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "_sort",
            "required": false,
            "schema": {
              "default": "created_at:asc",
              "pattern": "^(^[\\w-]+:(asc|desc)(,[\\w-]+:(asc|desc))*)?$",
              "title": " Sort",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "nullable": true
                }
              ],
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumesResponseV1"
                }
              }
            },
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 List Volume V1 V1 Volumes Get",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 List Volume V1 V1 Volumes Get",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "List all volumes.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_list",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.read"
            ]
          }
        ]
      },
      "post": {
        "description": "Create a Volume for the currently authenticated tenant.\n\nThe Volume can be used when it reaches the \"available\" state and \"completed\"\n status.\n\n#### Rules\n- The Volume name must be unique; otherwise, the creation will be disallowed.\n- The Volume type must be available to use.\n\n#### Notes\n- Utilize the **block-storage volume-types list** command to retrieve a list\n of all available Volume Types.\n- Verify the state and status of your Volume using the\n**block-storage volume get --id [uuid]** command\".",
        "operationId": "create_volume_v1_v1_volumes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VolumeCreateRequestV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Create Volume V1 V1 Volumes Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Create Volume V1 V1 Volumes Post",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Create Volume V1 V1 Volumes Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Create a new volume.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_create",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/volumes/{id}": {
      "delete": {
        "description": "Delete a Volume for the currently authenticated tenant.\n\n#### Rules\n- The Volume cannot be attached to a Virtual Machine, i.e., its state cannot\n be \"in-use\". If necessary, detach the Volume from the Virtual Machine before\n proceeding with deletion.\n- The Volume must not have any snapshots. If necessary, delete the Volume's\n  snapshots before proceeding with deletion.\n- The Volume must have the status \"completed\", i.e., must not have any\n  actions in progress.\n\n\n#### Notes\n- Check the state and status of your Volume using the\n**block-storage volume get --id [uuid]** command\".",
        "operationId": "delete_volume_v1_v1_volumes__id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Delete Volume V1 V1 Volumes  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Delete Volume V1 V1 Volumes  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Delete Volume V1 V1 Volumes  Id  Delete",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Delete a volume.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_delete",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      },
      "get": {
        "description": "Retrieve details of a Volume for the currently authenticated tenant.\n\n#### Notes\n- Use the **expand** argument to obtain additional details about the Volume\n Type.\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume for which you want to retrieve\n details.",
        "operationId": "get_volume_v1_v1_volumes__id__get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          },
          {
            "description": "You can get more detailed info about: ['volume_type', 'attachment']",
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "default": [],
              "description": "You can get more detailed info about: ['volume_type', 'attachment']",
              "items": {
                "type": "string"
              },
              "title": "Expand",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResponseV1"
                }
              }
            },
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Get Volume V1 V1 Volumes  Id  Get",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Get Volume V1 V1 Volumes  Id  Get",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Retrieve the details of a specific volume.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_get",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.read"
            ]
          }
        ]
      }
    },
    "/v1/volumes/{id}/attach/{virtual_machine_id}": {
      "post": {
        "description": "Attach a Volume to a Virtual Machine instance for the currently\n authenticated tenant.\n\nThe Volume attachment will be completed when the Volume status returns to\n\"completed\", and the state becomes \"in-use\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"available\".\n- The Virtual Machine's state must be \"stopped\" or \"running\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n**virtual-machine instances get --id [uuid]** command\".",
        "operationId": "attach_volume_v1_v1_volumes__id__attach__virtual_machine_id__post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "virtual_machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Virtual Machine Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Attach Volume V1 V1 Volumes  Id  Attach  Virtual Machine Id  Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Attach Volume V1 V1 Volumes  Id  Attach  Virtual Machine Id  Post",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Attach Volume V1 V1 Volumes  Id  Attach  Virtual Machine Id  Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Attach the volume to an instance.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_attach",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/volumes/{id}/detach": {
      "post": {
        "description": "Detach a Volume from a Virtual Machine instance for the\n currently authenticated tenant.\n\nThe Volume detachment will be completed when the Volume state returns to\n \"available,\" and the status becomes \"completed\".\n\n#### Rules\n- The Volume and the Virtual Machine must belong to the same tenant.\n- Both the Volume and Virtual Machine must have the status \"completed\".\n- The Volume's state must be \"in-use\".\n- The Virtual Machine's state must be \"stopped\".\n\n#### Notes\n- Verify the state and status of your Volume using the\n **block-storage volume get --id [uuid]** command.\n- Verify the state and status of your Virtual Machine using the\n **virtual-machine instances get --id [uuid]** command.\n- Ensure that any file systems on the device within your operating system are\n unmounted before detaching the Volume.\n\n#### Troubleshooting\n- A failure during detachment can result in the Volume becoming stuck in the\n busy state. If this occurs, detachment may be delayed indefinitely until you\n unmount the Volume, force detachment, reboot the instance, or perform all\n three.",
        "operationId": "detach_volume_v1_v1_volumes__id__detach_post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Detach Volume V1 V1 Volumes  Id  Detach Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Detach Volume V1 V1 Volumes  Id  Detach Post",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Detach Volume V1 V1 Volumes  Id  Detach Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Detach the volume from an instance.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_detach",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/volumes/{id}/extend": {
      "post": {
        "description": "Extend the size of an existing Volume for the currently\n authenticated tenant.\n\nThe Volume extension will be completed when the Volume status returns to\n \"completed\".\n\n#### Rules\n- The Volume state must be \"available\".\n- The Volume status must be \"completed\" or \"extend_error\".\n- The new Volume size must be larger than the current size.\n\n#### Notes\n- Utilize the block-storage volume list command to retrieve a list of all\n Volumes and obtain the ID of the Volume you want to extend.\n- Storage quotas are managed internally. If the operation fails due to quota\n restrictions, please contact our support team for assistance.",
        "operationId": "extend_volume_v1_volumes__id__extend_post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VolumeExtendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Extend Volume V1 Volumes  Id  Extend Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Extend Volume V1 Volumes  Id  Extend Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Extend the size of a volume.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_extend",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/volumes/{id}/rename": {
      "patch": {
        "description": "Rename a Volume for the currently authenticated tenant.\n\n#### Rules\n- The Volume name must be unique; otherwise, renaming will not be allowed.\n\n#### Notes\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume you wish to rename.",
        "operationId": "rename_volume_v1_v1_volumes__id__rename_patch",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameVolumeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Rename Volume V1 V1 Volumes  Id  Rename Patch",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 409 Rename Volume V1 V1 Volumes  Id  Rename Patch",
                  "type": "array"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Rename Volume V1 V1 Volumes  Id  Rename Patch",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Rename a volume.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_rename",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    },
    "/v1/volumes/{id}/retype": {
      "post": {
        "description": "Change the Volume Type of an existing Volume for the currently\n authenticated tenant.\n\nThe Volume retype will be completed when the Volume status returns to\n \"completed\".\n\n#### Rules\n- The Volume state must be \"available\".\n- The Volume status must be \"completed\" or \"retype_error\".\n- The new Volume Type must belong to the same region as the Volume.\n\n#### Notes\n- Utilize the **block-storage volume list** command to retrieve a list of all\n Volumes and obtain the ID of the Volume you want to retype.\n- Utilize the **block-storage volume-types list** command to retrieve a list of\n all Volume Types and obtain the ID of the Volume Type you want to use.",
        "operationId": "retype_volume_v1_volumes__id__retype_post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VolumeRetypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 404 Retype Volume V1 Volumes  Id  Retype Post",
                  "type": "array"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "title": "Response 422 Retype Volume V1 Volumes  Id  Retype Post",
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Change the type of a volume.",
        "tags": [
          "volumes"
        ],
        "x-permission-name": "bs_volume_retype",
        "x-viveiro": true,
        "security": [
          {
            "OAuth2": [
              "block-storage.write"
            ]
          }
        ]
      }
    }
  },
  "tags": [
    {
      "description": "Operations with volumes, including create, delete, extend, retype, list and other actions.",
      "name": "volumes"
    },
    {
      "description": "Operations with volume types for volumes.",
      "name": "volume-types"
    },
    {
      "description": "Operations with snapshots for volumes.",
      "name": "snapshots"
    }
  ],
  "servers": [
    {
      "url": "https://{env}/{region}/block-storage",
      "variables": {
        "region": {
          "enum": [
            "br-ne1",
            "br-se1",
            "br-mgl1"
          ],
          "default": "br-se1",
          "description": "Region to reach the service",
          "x-mgc-transforms": [
            {
              "allowMissing": true,
              "translations": [
                {
                  "from": "br-mgl1",
                  "to": "br-se-1"
                }
              ],
              "type": "translate"
            }
          ]
        },
        "env": {
          "enum": [
            "api.magalu.cloud",
            "api.pre-prod.jaxyendy.com"
          ],
          "default": "api.magalu.cloud",
          "description": "Environment to use",
          "x-mgc-transforms": [
            {
              "translations": [
                {
                  "from": "prod",
                  "to": "api.magalu.cloud"
                },
                {
                  "from": "pre-prod",
                  "to": "api.pre-prod.jaxyendy.com"
                }
              ],
              "type": "translate"
            }
          ]
        }
      }
    }
  ]
}