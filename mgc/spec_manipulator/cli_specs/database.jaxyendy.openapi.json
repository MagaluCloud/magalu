{
  "openapi": "3.0.2",
  "info": {
    "title": "DBaaS API Product",
    "description": "DBaaS API Product.",
    "contact": {
      "name": "Tribo IAAS Cloud",
      "url": "https://gitlab.luizalabs.com/cloud/dbaas/docs",
      "email": "cloud-iaas-dbaas@luizalabs.com"
    },
    "version": "1.20.0"
  },
  "servers": [
    {
      "url": "http://dbaas-api-product.dbaas-api-product.svc.cluster.local"
    },
    {
      "url": "http://localhost:8000"
    }
  ],
  "paths": {
    "/v1/healthcheck": {
      "get": {
        "tags": [
          "healthcheck"
        ],
        "summary": "Health Check",
        "operationId": "healthcheck_v1_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/admin/instances": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Deletes all databases by tenant id.",
        "description": "Deletes all databases by tenant id.",
        "operationId": "admin_instances_v1_delete_all",
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllDatabasesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/backups": {
      "get": {
        "tags": [
          "backups"
        ],
        "summary": "Backups List.",
        "description": "List all backups.",
        "operationId": "backups_list_v1_backups_get",
        "parameters": [
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": " Limit",
              "maximum": 50,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BackupType"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BackupMode"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BackupStatusResponse"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/backups/{backup_id}": {
      "get": {
        "tags": [
          "backups"
        ],
        "summary": "Backup Detail.",
        "description": "Get a backup detail.",
        "operationId": "backup_detail_v1_backups__backup_id__get",
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Backup Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "backups"
        ],
        "summary": "Delete Backup.",
        "description": "Deletes a database backup.",
        "operationId": "delete_backup_v1_backups__backup_id__delete",
        "parameters": [
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Backup Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/engines": {
      "get": {
        "tags": [
          "engines"
        ],
        "summary": "List available engines.",
        "description": "Returns a list of available engines.",
        "operationId": "engines_v1_get_all",
        "parameters": [
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "maximum": 50,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Value referring to engine status.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EngineStatus"
                }
              ],
              "description": "Value referring to engine status."
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnginesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastores": {
      "get": {
        "tags": [
          "datastores"
        ],
        "summary": "List available engines.",
        "description": "Returns a list of available datastore.",
        "operationId": "datastores_v1_get_all",
        "parameters": [
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "maximum": 50,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Value referring to engine status.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EngineStatus"
                }
              ],
              "description": "Value referring to engine status."
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnginesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/v1/engines/{engine_id}": {
      "get": {
        "tags": [
          "engines"
        ],
        "summary": "Engine detail.",
        "description": "Returns a engine detail.",
        "operationId": "engines_v1_get_by_id",
        "parameters": [
          {
            "name": "engine_id",
            "in": "path",
            "description": "Value referring to Engine Id.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Engine Id",
              "format": "uuid",
              "description": "Value referring to Engine Id."
            },
            "example": "7a11cfc5-f9f8-4fa2-a418-94a423f6a51f"
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastores/{engine_id}": {
      "get": {
        "tags": [
          "datastores"
        ],
        "summary": "Engine detail.",
        "description": "Returns a engine detail.",
        "operationId": "datastores_v1_get_by_id",
        "parameters": [
          {
            "name": "engine_id",
            "in": "path",
            "description": "Value referring to Engine Id.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Engine Id",
              "format": "uuid",
              "description": "Value referring to Engine Id."
            },
            "example": "7a11cfc5-f9f8-4fa2-a418-94a423f6a51f"
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/v1/flavors": {
      "get": {
        "tags": [
          "flavors"
        ],
        "summary": "List available flavors.",
        "description": "Returns a list of available flavors. A flavor is a hardware template that defines the size of RAM and vcpu.",
        "operationId": "flavors_v1_get_all",
        "parameters": [
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": " Limit",
              "maximum": 50,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlavorStatus"
                }
              ],
              "default": "ACTIVE"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlavorsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flavors/{flavor_id}": {
      "get": {
        "tags": [
          "flavors"
        ],
        "summary": "Flavor detail.",
        "description": "Returns a flavor detail.",
        "operationId": "flavors_v1_get_by_id",
        "parameters": [
          {
            "name": "flavor_id",
            "in": "path",
            "description": "Flavor Unique Id.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flavor Id",
              "format": "uuid",
              "description": "Flavor Unique Id."
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlavorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances": {
      "get": {
        "tags": [
          "instances"
        ],
        "summary": "List all database instances.",
        "description": "Returns a list of database instances for a x-tenant-id.",
        "operationId": "instances_list_v1_instances_get",
        "parameters": [
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": " Limit",
              "maximum": 25,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "_expand",
            "in": "query",
            "description": "\nInstance extra attributes or relations to show with the main query. When available, more than one value\ncan be informed using commas. e.g: `_expand=value1,value2`",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/InstanceExpand"
                }
              ],
              "description": "\nInstance extra attributes or relations to show with the main query. When available, more than one value\ncan be informed using commas. e.g: `_expand=value1,value2`"
            },
            "example": "replicas"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InstanceStatusResponse"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstancesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Creates a new database instance.",
        "description": "Creates a new database instance asynchronously for a tenant.",
        "operationId": "instances_v1_post",
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances/{instance_id}": {
      "get": {
        "tags": [
          "instances"
        ],
        "summary": "Database instance details.",
        "description": "Returns a database instance detail.",
        "operationId": "instances_v1_get_by_id",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "description": "Database Instance Unique Id.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid",
              "description": "Database Instance Unique Id."
            }
          },
          {
            "name": "_expand",
            "in": "query",
            "description": "\nInstance extra attributes or relations to show with the main query. When available, more than one value\ncan be informed using commas. e.g: `_expand=value1,value2`",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/InstanceExpand"
                }
              ],
              "description": "\nInstance extra attributes or relations to show with the main query. When available, more than one value\ncan be informed using commas. e.g: `_expand=value1,value2`"
            },
            "example": "replicas"
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "summary": "Deletes a database instance.",
        "description": "Deletes a database instance.",
        "operationId": "instances_v1_delete",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "instances"
        ],
        "summary": "Database instance update.",
        "description": "Updates a database instance.",
        "operationId": "instances_v1_patch",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances/{instance_id}/resize": {
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Resizes a database instance.",
        "description": "Resizes a database instance.",
        "operationId": "instances_v1_resize",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceResizeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances/{instance_id}/start": {
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Starts a database instance.",
        "description": "Starts a database instance.",
        "operationId": "instances_v1_start",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances/{instance_id}/stop": {
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Stops a database instance.",
        "description": "Stops a database instance.",
        "operationId": "instances_v1_stop",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances/{instance_id}/backups": {
      "get": {
        "tags": [
          "instances"
        ],
        "summary": "Backups List.",
        "description": "List all backups.",
        "operationId": "backups_list_v1_instances__instance_id__backups_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": " Limit",
              "maximum": 50,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BackupType"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BackupMode"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BackupStatusResponse"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Backup Create.",
        "description": "Creates a new backup asynchronously.",
        "operationId": "backup_create_v1_instances__instance_id__backups_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances/{instance_id}/backups/{backup_id}": {
      "get": {
        "tags": [
          "instances"
        ],
        "summary": "Backup Detail.",
        "description": "Get a backup detail.",
        "operationId": "backup_detail_v1_instances__instance_id__backups__backup_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Backup Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "instances"
        ],
        "summary": "Delete Backup.",
        "description": "Deletes a database backup.",
        "operationId": "delete_backup_v1_instances__instance_id__backups__backup_id__delete",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Backup Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/instances/{instance_id}/restores": {
      "post": {
        "tags": [
          "instances"
        ],
        "summary": "Backup restore.",
        "description": "Restores a backup for an instance asynchronously.",
        "operationId": "instances_v1_restore",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/internal/instances": {
      "get": {
        "tags": [
          "internal-instances"
        ],
        "summary": "List all database instances.",
        "description": "Returns a list of database instances for a x-tenant-id.",
        "operationId": "internal_v1_instances_get_all",
        "parameters": [
          {
            "name": "tenant.id",
            "in": "query",
            "description": "Tenant unique identifier.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Tenant.Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": " Limit",
              "maximum": 25,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InstanceStatus"
            }
          },
          {
            "name": "generation",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InstanceGeneration"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalInstancesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/internal/instances/{instance_id}": {
      "get": {
        "tags": [
          "internal-instances"
        ],
        "summary": "Database instance details.",
        "description": "Returns a database instance detail.",
        "operationId": "internal_v1_instances_get_by_id",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "description": "Database Instance Unique Id.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid",
              "description": "Database Instance Unique Id."
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalInstanceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/internal/instances/{instance_id}/upgrades": {
      "get": {
        "tags": [
          "internal-instances"
        ],
        "summary": "Upgrades List.",
        "description": "List all upgrades.",
        "operationId": "internal_v1_instances_upgrades_get_all",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "tenant.id",
            "in": "query",
            "description": "Tenant unique identifier.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Tenant.Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": " Limit",
              "maximum": 25,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UpgradeStatus"
            }
          },
          {
            "name": "generation",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InstanceGeneration"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpgradesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "internal-instances"
        ],
        "summary": "Upgrades a database instance.",
        "description": "Upgrade database instance generation asynchronously for a tenant.",
        "operationId": "internal_v1_instances_upgrades_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpgradeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/internal/instances/{instance_id}/upgrades/{upgrade_id}": {
      "get": {
        "tags": [
          "internal-instances"
        ],
        "summary": "Upgrade Detail.",
        "description": "Get an upgrade detail.",
        "operationId": "internal_v1_instances_upgrades_get_by_id",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id",
              "format": "uuid"
            }
          },
          {
            "name": "upgrade_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Upgrade Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpgradeDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/replicas": {
      "get": {
        "tags": [
          "replicas"
        ],
        "summary": "Replicas List.",
        "description": "List all replicas for a given instance.",
        "operationId": "replicas_list_v1_replicas_get",
        "parameters": [
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Source Id",
              "format": "uuid"
            }
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Offset",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": " Limit",
              "maximum": 50,
              "minimum": 1,
              "default": 10
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicasResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Create.",
        "description": "Creates a new replica for an instance asynchronously.",
        "operationId": "replica_create_v1_replicas_post",
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplicaCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/replicas/{replica_id}": {
      "get": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Detail.",
        "description": "Get an instance replica detail.",
        "operationId": "replica_detail_v1_replicas__replica_id__get",
        "parameters": [
          {
            "name": "replica_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Replica Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "replicas"
        ],
        "summary": "Deletes a replica instance.",
        "description": "Deletes a replica instance.",
        "operationId": "replica_v1_delete",
        "parameters": [
          {
            "name": "replica_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Replica Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/replicas/{replica_id}/resize": {
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Resize.",
        "description": "Resize an instance replica.",
        "operationId": "replica_resize_v1_replicas_post",
        "parameters": [
          {
            "name": "replica_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Replica Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplicaResizeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/replicas/{replica_id}/start": {
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Start.",
        "description": "Start an instance replica.",
        "operationId": "replica_start_v1_replicas__replica_id__start_post",
        "parameters": [
          {
            "name": "replica_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Replica Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/replicas/{replica_id}/stop": {
      "post": {
        "tags": [
          "replicas"
        ],
        "summary": "Replica Stop.",
        "description": "Stop an instance replica.",
        "operationId": "replica_stop_v1_replicas__replica_id__stop_post",
        "parameters": [
          {
            "name": "replica_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Replica Id",
              "format": "uuid"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Exchange",
              "default": "dbaas-internal"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant unique identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id",
              "maxLength": 36,
              "description": "Tenant unique identifier."
            },
            "example": "889da663-a1dd-4aed-b53a-03a7e919c335"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressAccess": {
        "title": "AddressAccess",
        "enum": [
          "PRIVATE",
          "PUBLIC"
        ],
        "description": "An enumeration."
      },
      "AddressType": {
        "title": "AddressType",
        "enum": [
          "IPv4",
          "IPv6"
        ],
        "description": "An enumeration."
      },
      "AllDatabasesResponse": {
        "type": "object",
        "properties": {
          "all_instances_and_backups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllDeleting"
            },
            "title": "All Instances And Backups"
          }
        },
        "title": "AllDatabasesResponse",
        "required": [
          "all_instances_and_backups"
        ]
      },
      "AllDeleting": {
        "type": "object",
        "properties": {
          "instance_id_deleting": {
            "type": "string",
            "title": "Instance Id Deleting",
            "format": "uuid"
          },
          "backups_ids_deleting": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "Backups Ids Deleting"
          }
        },
        "title": "AllDeleting",
        "required": [
          "instance_id_deleting",
          "backups_ids_deleting"
        ]
      },
      "BackupCreateRequest": {
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/BackupModeRequest"
          }
        },
        "title": "BackupCreateRequest",
        "required": [
          "mode"
        ]
      },
      "BackupDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "instance_id": {
            "type": "string",
            "title": "Instance Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "type": {
            "$ref": "#/components/schemas/BackupType"
          },
          "status": {
            "$ref": "#/components/schemas/BackupStatusResponse"
          },
          "mode": {
            "$ref": "#/components/schemas/BackupMode"
          },
          "db_size": {
            "exclusiveMinimum": false,
            "type": "integer",
            "title": "Db Size"
          },
          "size": {
            "exclusiveMinimum": false,
            "type": "integer",
            "title": "Size"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Finished At",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "format": "date-time"
          }
        },
        "title": "BackupDetailResponse",
        "required": [
          "id",
          "instance_id",
          "type",
          "status",
          "mode",
          "created_at"
        ]
      },
      "BackupMode": {
        "title": "BackupMode",
        "enum": [
          "FULL",
          "INCREMENTAL"
        ],
        "description": "An enumeration."
      },
      "BackupModeRequest": {
        "title": "BackupModeRequest",
        "enum": [
          "FULL"
        ],
        "description": "An enumeration."
      },
      "BackupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "BackupResponse",
        "required": [
          "id"
        ]
      },
      "BackupStatusResponse": {
        "title": "BackupStatusResponse",
        "enum": [
          "PENDING",
          "CREATING",
          "CREATED",
          "ERROR",
          "DELETING",
          "DELETED",
          "ERROR_DELETING"
        ],
        "description": "An enumeration."
      },
      "BackupType": {
        "title": "BackupType",
        "enum": [
          "ON_DEMAND",
          "AUTOMATED"
        ],
        "description": "An enumeration."
      },
      "BackupsResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupDetailResponse"
            },
            "title": "Results"
          }
        },
        "title": "BackupsResponse",
        "required": [
          "meta",
          "results"
        ]
      },
      "EngineResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "engine": {
            "type": "string",
            "title": "Engine",
            "deprecated": true
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "status": {
            "$ref": "#/components/schemas/EngineStatus"
          }
        },
        "title": "EngineResponse",
        "required": [
          "id",
          "name",
          "engine",
          "version",
          "status"
        ]
      },
      "EngineStatus": {
        "title": "EngineStatus",
        "enum": [
          "ACTIVE",
          "DEPRECATED"
        ],
        "description": "An enumeration."
      },
      "EnginesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineResponse"
            },
            "title": "Results"
          }
        },
        "title": "EnginesResponse",
        "required": [
          "meta",
          "results"
        ]
      },
      "FlavorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "family_description": {
            "type": "string",
            "title": "Family Description"
          },
          "family_slug": {
            "type": "string",
            "title": "Family Slug"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "sku_source": {
            "type": "string",
            "title": "Sku Source"
          },
          "sku_replica": {
            "type": "string",
            "title": "Sku Replica"
          },
          "vcpu": {
            "type": "string",
            "title": "Vcpu"
          },
          "ram": {
            "type": "string",
            "title": "Ram"
          }
        },
        "title": "FlavorResponse",
        "required": [
          "id",
          "name",
          "label",
          "family_description",
          "family_slug",
          "size",
          "sku_source",
          "sku_replica",
          "vcpu",
          "ram"
        ]
      },
      "FlavorStatus": {
        "title": "FlavorStatus",
        "enum": [
          "ACTIVE",
          "DEPRECATED"
        ],
        "description": "An enumeration."
      },
      "FlavorsResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlavorResponse"
            },
            "title": "Results"
          }
        },
        "title": "FlavorsResponse",
        "required": [
          "meta",
          "results"
        ]
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail"
          }
        },
        "title": "HTTPValidationError"
      },
      "InstanceAddressResponse": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/AddressAccess"
          },
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "address": {
            "type": "string",
            "title": "Address"
          }
        },
        "title": "InstanceAddressResponse",
        "required": [
          "access"
        ]
      },
      "InstanceCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100
          },
          "datastore_id": {
            "type": "string",
            "title": "Datastore Id",
            "format": "uuid",
            "deprecated": true
          },
          "engine_id": {
            "type": "string",
            "title": "Engine Id",
            "format": "uuid"
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "title": "User",
            "maxLength": 25
          },
          "password": {
            "type": "string",
            "title": "Password",
            "maxLength": 50
          },
          "volume": {
            "$ref": "#/components/schemas/InstanceVolumeRequest"
          },
          "backup_retention_days": {
            "exclusiveMinimum": false,
            "type": "integer",
            "title": "Backup Retention Days",
            "default": 7
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time",
            "default": "04:00:00"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceParametersRequest"
            },
            "title": "Parameters",
            "default": []
          }
        },
        "title": "InstanceCreateRequest",
        "required": [
          "name",
          "flavor_id",
          "user",
          "password",
          "volume"
        ]
      },
      "InstanceDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100
          },
          "engine_id": {
            "type": "string",
            "title": "Engine Id",
            "format": "uuid"
          },
          "datastore_id": {
            "type": "string",
            "title": "Datastore Id",
            "format": "uuid",
            "deprecated": true
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid"
          },
          "volume": {
            "$ref": "#/components/schemas/InstanceVolumeResponse"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceAddressResponse"
            },
            "title": "Addresses"
          },
          "status": {
            "$ref": "#/components/schemas/InstanceStatusResponse"
          },
          "generation": {
            "$ref": "#/components/schemas/InstanceGeneration"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Finished At",
            "format": "date-time"
          },
          "backup_retention_days": {
            "exclusiveMinimum": false,
            "type": "integer",
            "title": "Backup Retention Days"
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceParametersResponse"
            },
            "title": "Parameters"
          },
          "replicas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplicaDetailResponse"
            },
            "title": "Replicas"
          }
        },
        "title": "InstanceDetailResponse",
        "required": [
          "id",
          "name",
          "engine_id",
          "datastore_id",
          "flavor_id",
          "volume",
          "addresses",
          "status",
          "generation",
          "created_at",
          "backup_retention_days",
          "backup_start_at",
          "parameters"
        ]
      },
      "InstanceExpand": {
        "type": "string",
        "title": "InstanceExpand",
        "enum": [
          "replicas"
        ],
        "description": "An enumeration."
      },
      "InstanceGeneration": {
        "title": "InstanceGeneration",
        "enum": [
          "G0B",
          "G1B",
          "G2B",
          "G3B",
          "G4B"
        ],
        "description": "An enumeration."
      },
      "InstanceParametersNames": {
        "title": "InstanceParametersNames",
        "enum": [
          "LOWER_CASE_TABLE_NAMES"
        ],
        "description": "An enumeration."
      },
      "InstanceParametersRequest": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/InstanceParametersNames"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ],
            "title": "Value"
          }
        },
        "title": "InstanceParametersRequest",
        "required": [
          "name",
          "value"
        ]
      },
      "InstanceParametersResponse": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/InstanceParametersNames"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ],
            "title": "Value"
          }
        },
        "title": "InstanceParametersResponse",
        "required": [
          "name",
          "value"
        ]
      },
      "InstanceResizeRequest": {
        "type": "object",
        "properties": {
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid"
          },
          "volume": {
            "$ref": "#/components/schemas/InstanceVolumeRequest"
          }
        },
        "title": "InstanceResizeRequest"
      },
      "InstanceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "InstanceResponse",
        "required": [
          "id"
        ]
      },
      "InstanceStatus": {
        "title": "InstanceStatus",
        "enum": [
          "ERROR",
          "PENDING",
          "ACTIVE",
          "BUILD",
          "BUILDING",
          "DELETED",
          "HARD_REBOOT",
          "PASSWORD",
          "PAUSED",
          "REBUILD",
          "RESCUE",
          "RESCUED",
          "RESIZED",
          "RESIZING",
          "REVERT_SIZE",
          "REVERT_RESIZE",
          "SOFT_DELETED",
          "STOPPED",
          "SUSPENDED",
          "UNKNOWN",
          "VERIFY_RESIZE",
          "CREATING",
          "CREATING_BACKUP",
          "CREATING_MACHINE",
          "CREATING_NETWORK",
          "CREATING_PROJECT",
          "CREATING_VOLUME",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_RESTORING",
          "ERROR_DELETING",
          "REBOOT",
          "UPGRADING",
          "ERROR_UPGRADING",
          "ERROR_RESIZING",
          "ERROR_STARTING",
          "ERROR_STOPPING"
        ],
        "description": "An enumeration."
      },
      "InstanceStatusResponse": {
        "title": "InstanceStatusResponse",
        "enum": [
          "CREATING",
          "ERROR",
          "STOPPED",
          "REBOOT",
          "PENDING",
          "RESIZING",
          "DELETED",
          "ACTIVE",
          "STARTING",
          "STOPPING",
          "BACKING_UP",
          "DELETING",
          "RESTORING",
          "ERROR_DELETING",
          "MAINTENANCE"
        ],
        "description": "An enumeration."
      },
      "InstanceUpdateRequest": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/InstanceUpdateStatus"
          },
          "backup_retention_days": {
            "exclusiveMinimum": false,
            "type": "integer",
            "title": "Backup Retention Days"
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time"
          }
        },
        "title": "InstanceUpdateRequest"
      },
      "InstanceUpdateStatus": {
        "title": "InstanceUpdateStatus",
        "enum": [
          "ACTIVE",
          "STOPPED"
        ],
        "description": "An enumeration."
      },
      "InstanceVolumeRequest": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "title": "Size",
            "maximum": 50000,
            "minimum": 10
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VolumeType"
              }
            ],
            "default": "CLOUD_NVME_15K"
          }
        },
        "title": "InstanceVolumeRequest",
        "required": [
          "size"
        ]
      },
      "InstanceVolumeResponse": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "title": "Size",
            "maximum": 50000,
            "minimum": 10
          },
          "type": {
            "$ref": "#/components/schemas/VolumeType"
          }
        },
        "title": "InstanceVolumeResponse",
        "required": [
          "size",
          "type"
        ]
      },
      "InstancesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceDetailResponse"
            },
            "title": "Results"
          }
        },
        "title": "InstancesResponse",
        "required": [
          "meta",
          "results"
        ]
      },
      "InternalInstanceDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 100
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "format": "uuid"
          },
          "engine_id": {
            "type": "string",
            "title": "Engine Id",
            "format": "uuid"
          },
          "datastore_id": {
            "type": "string",
            "title": "Datastore Id",
            "format": "uuid",
            "deprecated": true
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid"
          },
          "volume": {
            "$ref": "#/components/schemas/InstanceVolumeResponse"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceAddressResponse"
            },
            "title": "Addresses"
          },
          "status": {
            "$ref": "#/components/schemas/InstanceStatus"
          },
          "generation": {
            "$ref": "#/components/schemas/InstanceGeneration"
          },
          "generation_hold": {
            "$ref": "#/components/schemas/InstanceGeneration"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Finished At",
            "format": "date-time"
          },
          "backup_retention_days": {
            "exclusiveMinimum": false,
            "type": "integer",
            "title": "Backup Retention Days"
          },
          "backup_start_at": {
            "type": "string",
            "title": "Backup Start At",
            "format": "time"
          }
        },
        "title": "InternalInstanceDetailResponse",
        "required": [
          "id",
          "name",
          "tenant_id",
          "engine_id",
          "datastore_id",
          "flavor_id",
          "volume",
          "addresses",
          "status",
          "generation",
          "created_at",
          "backup_retention_days",
          "backup_start_at"
        ]
      },
      "InternalInstancesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalInstanceDetailResponse"
            },
            "title": "Results"
          }
        },
        "title": "InternalInstancesResponse",
        "required": [
          "meta",
          "results"
        ]
      },
      "MetaResponse": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageResponse"
          }
        },
        "title": "MetaResponse",
        "required": [
          "page"
        ]
      },
      "PageResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "title": "Offset",
            "description": "The number of items to skip before starting to collect the result set."
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "The maximum number of items per page."
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "description": "The number of items on the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "The total number of items available across all pages."
          },
          "max_limit": {
            "type": "integer",
            "title": "Max Limit",
            "description": "The maximum allowable limit for the number of items per page."
          }
        },
        "title": "PageResponse",
        "required": [
          "offset",
          "limit",
          "count",
          "total",
          "max_limit"
        ]
      },
      "ReplicaAddressResponse": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/AddressAccess"
          },
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "address": {
            "type": "string",
            "title": "Address"
          }
        },
        "title": "ReplicaAddressResponse",
        "required": [
          "access"
        ]
      },
      "ReplicaCreateRequest": {
        "type": "object",
        "properties": {
          "source_id": {
            "type": "string",
            "title": "Source Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "maxLength": 255
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid"
          }
        },
        "title": "ReplicaCreateRequest",
        "required": [
          "source_id",
          "name"
        ]
      },
      "ReplicaDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "source_id": {
            "type": "string",
            "title": "Source Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "engine_id": {
            "type": "string",
            "title": "Engine Id",
            "format": "uuid"
          },
          "datastore_id": {
            "type": "string",
            "title": "Datastore Id",
            "format": "uuid",
            "deprecated": true
          },
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid"
          },
          "volume": {
            "$ref": "#/components/schemas/ReplicaVolumeResponse"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplicaAddressResponse"
            },
            "title": "Addresses"
          },
          "status": {
            "$ref": "#/components/schemas/InstanceStatusResponse"
          },
          "generation": {
            "$ref": "#/components/schemas/InstanceGeneration"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Finished At",
            "format": "date-time"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceParametersResponse"
            },
            "title": "Parameters"
          }
        },
        "title": "ReplicaDetailResponse",
        "required": [
          "id",
          "source_id",
          "name",
          "engine_id",
          "datastore_id",
          "flavor_id",
          "volume",
          "addresses",
          "status",
          "generation",
          "created_at",
          "parameters"
        ]
      },
      "ReplicaResizeRequest": {
        "type": "object",
        "properties": {
          "flavor_id": {
            "type": "string",
            "title": "Flavor Id",
            "format": "uuid"
          }
        },
        "title": "ReplicaResizeRequest",
        "required": [
          "flavor_id"
        ]
      },
      "ReplicaResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "ReplicaResponse",
        "required": [
          "id"
        ]
      },
      "ReplicaVolumeResponse": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "title": "Size",
            "maximum": 50000,
            "minimum": 10
          },
          "type": {
            "$ref": "#/components/schemas/VolumeType"
          }
        },
        "title": "ReplicaVolumeResponse",
        "required": [
          "size",
          "type"
        ]
      },
      "ReplicasResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplicaDetailResponse"
            },
            "title": "Results"
          }
        },
        "title": "ReplicasResponse",
        "required": [
          "meta",
          "results"
        ]
      },
      "RestoreCreateRequest": {
        "type": "object",
        "properties": {
          "backup_id": {
            "type": "string",
            "title": "Backup Id",
            "format": "uuid"
          }
        },
        "title": "RestoreCreateRequest",
        "required": [
          "backup_id"
        ]
      },
      "RestoreResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "RestoreResponse",
        "required": [
          "id"
        ]
      },
      "UpgradeDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          },
          "instance_id": {
            "type": "string",
            "title": "Instance Id",
            "format": "uuid"
          },
          "generation": {
            "$ref": "#/components/schemas/InstanceGeneration"
          },
          "status": {
            "$ref": "#/components/schemas/UpgradeStatus"
          },
          "started_at": {
            "type": "string",
            "title": "Started At",
            "format": "date-time"
          },
          "finished_at": {
            "type": "string",
            "title": "Finished At",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "format": "date-time"
          }
        },
        "title": "UpgradeDetailResponse",
        "required": [
          "id",
          "instance_id",
          "generation",
          "status",
          "created_at"
        ]
      },
      "UpgradeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "format": "uuid"
          }
        },
        "title": "UpgradeResponse",
        "required": [
          "id"
        ]
      },
      "UpgradeStatus": {
        "title": "UpgradeStatus",
        "enum": [
          "PENDING",
          "UPGRADING",
          "UPGRADED",
          "ERROR"
        ],
        "description": "An enumeration."
      },
      "UpgradesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpgradeDetailResponse"
            },
            "title": "Results"
          }
        },
        "title": "UpgradesResponse",
        "required": [
          "meta",
          "results"
        ]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ]
      },
      "VolumeType": {
        "title": "VolumeType",
        "enum": [
          "CLOUD_NVME",
          "CLOUD_HDD",
          "CLOUD_NVME_15K"
        ],
        "description": "An enumeration."
      }
    }
  },
  "tags": [
    {
      "name": "healthcheck",
      "description": "Health check."
    },
    {
      "name": "backups",
      "description": "Database backups management."
    },
    {
      "name": "datastores",
      "description": "Datastores available for database instances."
    },
    {
      "name": "engines",
      "description": "Engines available for database instances."
    },
    {
      "name": "instances",
      "description": "Database instances management."
    },
    {
      "name": "flavors",
      "description": "Flavors available for database instances."
    },
    {
      "name": "replicas",
      "description": "Database replicas management."
    }
  ]
}