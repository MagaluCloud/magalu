openapi: 3.0.2
info:
  title: DBaaS API Product
  description: DBaaS API Product.
  contact:
    name: Tribo IAAS Cloud
    url: https://gitlab.luizalabs.com/cloud/dbaas/docs
    email: cloud-iaas-dbaas@luizalabs.com
  version: 1.40.1
tags:
  - name: engines
    description: Engines available for database instances.
  - name: instance_types
    description: Instance Types available for database instances.
  - name: instances
    description: Database instances management.
  - name: replicas
    description: Database replicas management.
  - name: snapshots
    description: Snapshots management.
paths:
  /v1/engines:
    get:
      operationId: engines_v1_get_all
      tags:
        - engines
      summary: List available engines.
      description: Returns a list of available engines.
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
        - $ref: "#/components/parameters/engine_status"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnginesResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v1/engines/{engine_id}:
    get:
      operationId: engines_v1_get_by_id
      tags:
        - engines
      summary: Engine detail.
      description: Returns a engine detail.
      parameters:
        - $ref: "#/components/parameters/engine_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EngineResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read

  /v1/instance-types:
    get:
      operationId: instance_types_v1_get_all
      tags:
        - instance_types
      summary: List available instance types.
      description: Returns a list of available instance types. An instance type is a hardware template that defines the size of RAM and vCPU.
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
        - $ref: "#/components/parameters/instance_type_status"
        - in: query
          name: engine_id
          required: false
          description: Engine Id unique identifier
          schema:
            format: uuid
            title: Engine Id
            type: string
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceTypesResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v1/instance-types/{instance_type_id}:
    get:
      operationId: instance_types_v1_get_by_id
      tags:
        - instance_types
      summary: Instance Type detail.
      description: Returns an instance type detail.
      parameters:
        - required: true
          schema:
            title: Instance Type Id
            type: string
            format: uuid
          name: instance_type_id
          in: path
          description: Instance Type Unique Id.
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceType"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
  /v1/instances:
    get:
      operationId: instances_v1_get_all
      tags:
        - instances
      summary: List all database instances.
      description: Returns a list of database instances for a x-tenant-id.
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_small"
        - $ref: "#/components/parameters/instance_status"
        - $ref: "#/components/parameters/instance_expand"
        - $ref: "#/components/parameters/engine_id_query"
        - $ref: "#/components/parameters/volume_size_query"
        - $ref: "#/components/parameters/volume_size_gt"
        - $ref: "#/components/parameters/volume_size_gte"
        - $ref: "#/components/parameters/volume_size_lt"
        - $ref: "#/components/parameters/volume_size_lte"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstancesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      operationId: instances_v1_post
      tags:
        - instances
      summary: Creates a new database instance.
      description: Creates a new database instance asynchronously for a tenant.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceCreateRequest"
        required: true
      responses:
        "202":
          description: Accepted - Database instance creation in progress.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/instances/{instance_id}:
    get:
      operationId: instances_v1_get_by_id
      tags:
        - instances
      summary: Database instance details.
      description: Returns a database instance detail.
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/instance_expand"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    patch:
      operationId: instances_v1_patch
      tags:
        - instances
      summary: Database instance update.
      description: Updates a database instance.
      parameters:
        - $ref: "#/components/parameters/instance_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseInstanceUpdateRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    delete:
      operationId: instances_v1_delete
      tags:
        - instances
      summary: Deletes a database instance.
      description: Deletes a database instance.
      parameters:
        - $ref: "#/components/parameters/instance_id"
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Accepted - Database instance deletion in progress.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/instances/{instance_id}/resize:
    post:
      tags:
        - instances
      summary: Resizes a database instance.
      description: Resizes a database instance.
      operationId: instances_v1_resize
      parameters:
        - $ref: "#/components/parameters/instance_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InstanceResizeRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/instances/{instance_id}/start:
    post:
      tags:
        - instances
      summary: Starts a database instance.
      description: Starts a database instance.
      operationId: instances_v1_start
      parameters:
        - $ref: "#/components/parameters/instance_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/instances/{instance_id}/stop:
    post:
      tags:
        - instances
      summary: Stops a database instance.
      description: Stops a database instance.
      operationId: instances_v1_stop
      parameters:
        - $ref: "#/components/parameters/instance_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/replicas:
    get:
      tags:
        - replicas
      summary: Replicas List.
      description: List all replicas for a given instance.
      operationId: replicas_v1_get_all
      parameters:
        - $ref: "#/components/parameters/source_id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicasResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      tags:
        - replicas
      summary: Replica Create.
      description: Creates a new replica for an instance asynchronously.
      operationId: replicas_v1_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplicaCreateRequest"
        required: true
      responses:
        "202":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/replicas/{replica_id}:
    get:
      tags:
        - replicas
      summary: Replica Detail.
      description: Get an instance replica detail.
      operationId: replicas_v1_get_by_id
      parameters:
        - $ref: "#/components/parameters/replica_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    delete:
      operationId: replicas_v1_delete
      tags:
        - replicas
      summary: Deletes a replica instance.
      description: Deletes a replica instance.
      parameters:
        - required: true
          schema:
            title: Database Replica Id
            type: string
            format: uuid
          name: replica_id
          in: path
          description: Database Replica Unique Id
      responses:
        "202":
          description: Accepted - Database replica deletion in progress.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/replicas/{replica_id}/resize:
    post:
      tags:
        - replicas
      summary: Replica Resize.
      description: Resize an instance replica.
      operationId: replicas_v1_resize
      parameters:
        - $ref: "#/components/parameters/replica_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplicaResizeRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/replicas/{replica_id}/start:
    post:
      tags:
        - replicas
      summary: Replica Start.
      description: Start an instance replica.
      operationId: replicas_v1_start
      parameters:
        - $ref: "#/components/parameters/replica_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/replicas/{replica_id}/stop:
    post:
      tags:
        - replicas
      summary: Replica Stop.
      description: Stop an instance replica.
      operationId: replicas_v1_stop
      parameters:
        - $ref: "#/components/parameters/replica_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicaDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/instances/{instance_id}/snapshots:
    get:
      tags:
        - instances
      summary: Snapshots List.
      description: List all snapshots.
      operationId: instances_v1_snapshots_get_all
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit_medium"
        - $ref: "#/components/parameters/snapshot_type"
        - $ref: "#/components/parameters/snapshot_status"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotsResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    post:
      tags:
        - instances
      summary: Snapshot Create.
      description: Creates a new snapshot asynchronously.
      operationId: instances_v1_snapshots_post
      parameters:
        - $ref: "#/components/parameters/instance_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotCreateRequest"
        required: true
      responses:
        "202":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/instances/{instance_id}/snapshots/{snapshot_id}:
    get:
      tags:
        - instances
      summary: Snapshot Detail.
      description: Get a snapshot detail.
      operationId: instances_v1_snapshot_get_by_id
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.read
        - OAuth2PreProd:
            - dbaas.read
        - OAuth2Prod:
            - dbaas.read
    patch:
      tags:
        - instances
      summary: Snapshot Update.
      description: Updates a snapshot.
      operationId: instances_v1_snapshots_patch
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/snapshot_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotUpdateRequest"
        required: true
      responses:
        "200":
          description: Successful Response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotDetailResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
    delete:
      tags:
        - instances
      summary: Delete Snapshot.
      description: Deletes a database snapshot.
      operationId: instances_v1_snapshots_delete
      parameters:
        - $ref: "#/components/parameters/instance_id"
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Successful Response.
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write
  /v1/snapshots/{snapshot_id}/restores:
    post:
      operationId: restores_instance_from_snapshot_v1__snapshot_id__post
      parameters:
        - $ref: "#/components/parameters/snapshot_id"
      tags:
        - snapshots
      summary: Create a new instance from snapshot asynchronously.
      description: Create a new instance from snapshot.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreSnapshotRequest"
        required: true
      responses:
        "202":
          description: Accepted - Snapshot restore instance in progress.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceResponse"
        "400":
          $ref: "#/components/responses/RequiredField"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - bearerAuth:
            - dbaas.write
        - OAuth2PreProd:
            - dbaas.write
        - OAuth2Prod:
            - dbaas.write

components:
  parameters:
    replica_id:
      name: replica_id
      in: path
      required: true
      schema:
        title: Replica Id
        type: string
        format: uuid
      example: 2218ad95-6ba2-4fef-8302-a31cb1062412
      description: Value referring to replica Id.
    source_id:
      name: source_id
      in: query
      required: false
      schema:
        title: Source Id
        type: string
        format: uuid
      example: 9959ee7a-0710-4faa-9f10-6845819e8ac0
      description: Value referring to source Id.
    backup_id:
      name: backup_id
      in: path
      required: true
      schema:
        title: Backup Id
        type: string
        format: uuid
      example: 1b65c0e4-94a1-4385-aedb-c1b34f6e8935
      description: Value referring to backup Id.
    snapshot_id:
      name: snapshot_id
      in: path
      required: true
      schema:
        title: Snapshot Id
        type: string
        format: uuid
      example: c1b34f6e-94a1-4385-aedb-1b65c0e48935
      description: Value referring to snapshot Id.
    instance_id:
      name: instance_id
      in: path
      required: true
      schema:
        title: Instance Id
        type: string
        format: uuid
      example: f21999cb-302f-48f7-b584-6a84748e112c
      description: Value referring to instance Id.
    instance_id_query:
      name: instance_id
      in: query
      required: false
      schema:
        title: Instance Id
        type: string
        format: uuid
      example: f21999cb-302f-48f7-b584-6a84748e112c
      description: Value referring to instance Id.
    engine_id:
      name: engine_id
      in: path
      required: true
      schema:
        title: Datastore Id (Deprecated)
        type: string
        format: uuid
        description: |
          **Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.
      example: 7a11cfc5-f9f8-4fa2-a418-94a423f6a51f
      description: Value referring to datastore Id.
    instance_type_id:
      name: instance_type_id
      in: path
      required: true
      schema:
        title: Flavor Id (Deprecated)
        type: string
        format: uuid
        description: |
          **Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.
      example: 7a11cfc5-f9f8-4fa2-a418-94a423f6a51f
      description: Value referring to instance type Id.
    engine_id_query:
      name: engine_id
      in: query
      required: false
      schema:
        format: uuid
        title: Engine Id
        type: string
      description: Value referring to engine Id.
    volume_size_query:
      name: volume.size
      in: query
      required: false
      schema:
        title: Volume.Size
        type: integer
      description: Value referring to volume size.
    volume_size_gt:
      name: volume.size__gt
      in: query
      required: false
      schema:
        title: Volume.Size Gt
        type: integer
      description: Value referring to volume size greater than.
    volume_size_gte:
      name: volume.size__gte
      in: query
      required: false
      schema:
        title: Volume.Size Gte
        type: integer
      description: Value referring to volume size greater than or equal to.
    volume_size_lt:
      name: volume.size__lt
      in: query
      required: false
      schema:
        title: Volume.Size Lt
        type: integer
      description: Value referring to volume size less than.
    volume_size_lte:
      name: volume.size__lte
      in: query
      required: false
      schema:
        title: Volume.Size Lte
        type: integer
      description: Value referring to volume size less than or equal to.
    instance_expand:
      name: _expand
      in: query
      required: false
      schema:
        allOf:
          - $ref: "#/components/schemas/InstanceExpand"
      description: "Instance extra attributes or relations to show with the main query. When available, more than one value can be informed using commas. e.g: `_expand=value1,value2`"
    offset:
      name: _offset
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      description: The number of items to skip before starting to collect the result set.
    limit_small:
      name: _limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 25
        default: 10
      description: The maximum number of items per page.
    limit_medium:
      name: _limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 10
      description: The maximum number of items per page.
    engine_status:
      name: status
      in: query
      schema:
        $ref: "#/components/schemas/EngineStatus"
      description: Value referring to engine status.
    instance_type_status:
      name: status
      in: query
      schema:
        allOf:
          - $ref: "#/components/schemas/InstanceTypeStatus"
        default: ACTIVE
      description: An enumeration.
    snapshot_type:
      name: type
      in: query
      schema:
        $ref: "#/components/schemas/SnapshotType"
      description: Value referring to snapshot type.
    snapshot_status:
      name: status
      in: query
      schema:
        $ref: "#/components/schemas/SnapshotStatus"
      description: Value referring to snapshot status.
    instance_status:
      name: status
      in: query
      schema:
        $ref: "#/components/schemas/InstanceStatus"
      description: Value referring to instance status.
  schemas:
    MetaResponse:
      properties:
        filters:
          items:
            $ref: '#/components/schemas/FieldValueResponse'
          title: Filters
          type: array
          description: Data filters use in the current request pagination.
        page:
          $ref: '#/components/schemas/PageResponse'
      required:
        - page
        - filters
      title: Meta Response
      type: object
      description: Page details about the current request pagination.
    FieldValueResponse:
      properties:
        field:
          title: Field
          type: string
          description: The field name used to filter the response.
        value:
          title: Value
          type: string
          description: The field value used to filter the response.
      required:
        - field
        - value
      title: FieldValueResponse
      type: object
    PageResponse:
      properties:
        offset:
          title: Offset
          type: integer
          description: The number of items to skip before starting to collect the result set.
        limit:
          title: Limit
          type: integer
          description: The maximum number of items per page.
        count:
          title: Count
          type: integer
          description: The number of items on the current page.
        total:
          title: Total
          type: integer
          description: The total number of items available across all pages.
        max_limit:
          title: Max Limit
          type: integer
          description: The maximum allowable limit for the number of items per page.
      required:
        - limit
        - offset
        - count
        - total
        - max_limit
      title: PageResponse
      type: object
    SnapshotDetailResponse:
      title: Snapshot Detail Response
      required:
        - id
        - instance
        - allocated_size
        - name
        - description
        - type
        - status
        - created_at
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        instance:
          $ref: "#/components/schemas/SnapshotInstanceDetailResponse"
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        type:
          $ref: "#/components/schemas/SnapshotType"
        status:
          $ref: "#/components/schemas/SnapshotStatus"
        allocated_size:
          title: Allocated Size
          type: integer
          description: Allocated size in gibibytes.
        created_at:
          title: Created At
          type: string
          format: date-time
        started_at:
          title: Started At
          type: string
          format: date-time
        finished_at:
          title: Finished At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
    SnapshotStatus:
      title: Snapshot Status
      description: An enumeration.
      type: string
      enum:
        - PENDING
        - CREATING
        - AVAILABLE
        - RESTORING
        - ERROR
        - DELETING
        - DELETED
    SnapshotType:
      title: Backup Type
      description: An enumeration.
      type: string
      enum:
        - ON_DEMAND
        - AUTOMATED
    SnapshotsResponse:
      title: Snapshots Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/MetaResponse'
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/SnapshotDetailResponse"
    SnapshotInstanceDetailResponse:
      title: Instance Detail Response
      description: >
        This response object provides details about a database instance associated with a snapshot.
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          description: Database instance unique identifier.
          type: string
          format: uuid
        name:
          title: Name
          description: Database instance unique name.
          type: string
          maxLength: 100
          example: "mydbinstance"
    SnapshotCreateRequest:
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          description: Snapshot unique name.
          type: string
          maxLength: 100
          example: "my-snapshot"
        description:
          title: Description
          description: Snapshot description.
          type: string
          maxLength: 255
          example: "my-description"
    SnapshotUpdateRequest:
      type: object
      properties:
        name:
          title: Name
          description: Snapshot unique name.
          type: string
          maxLength: 100
          example: "my-snapshot-updated"
        description:
          title: Description
          description: Snapshot description.
          type: string
          maxLength: 255
          example: "my-description-updated"
    SnapshotResponse:
      title: Snapshot Response
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
    RestoreSnapshotRequest:
      title: Restore Snapshot Instance Request
      required:
        - name
        - instance_type_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        volume:
          $ref: "#/components/schemas/InstanceVolumeRequest"
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          default: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          default: "04:00:00"
    InstanceTypesResponse:
      title: InstanceTypes Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
            $ref: '#/components/schemas/MetaResponse'
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
    AddressAccess:
      title: Address Access
      type: string
      enum:
        - PRIVATE
        - PUBLIC
      example: PRIVATE
    AddressType:
      title: Address Type
      type: string
      enum:
        - IPv4
        - IPv6
      example: IPv4
    InstanceStatusUpdate:
      title: Instance Status Update
      type: string
      enum:
        - ACTIVE
        - STOPPED
      example: ACTIVE
    InstancesResponse:
      title: Instances Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/MetaResponse'
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/InstanceDetailResponse"
    InstanceStatus:
      title: Instance Status
      type: string
      enum:
        - CREATING
        - ERROR
        - STOPPED
        - REBOOT
        - PENDING
        - RESIZING
        - DELETED
        - ACTIVE
        - STARTING
        - STOPPING
        - BACKING_UP
        - DELETING
        - RESTORING
        - ERROR_DELETING
        - MAINTENANCE
        - MAINTENANCE_ERROR
      example: ACTIVE
    InstanceGeneration:
      title: Instance Generation
      description: Current database instance generation
      type: string
      enum:
        - G0B
        - G1B
        - G2B
        - G3B
        - G4B
        - G5B
        - G6B
        - G7B
        - G8B
        - G9B
        - G10B
        - G1
      example: G1B
    InstanceParametersNames:
      title: Instance Parameters Name
      description: Database parameter name.
      type: string
      enum:
        - LOWER_CASE_TABLE_NAMES
    InstanceParametersRequest:
      properties:
        name:
          $ref: '#/components/schemas/InstanceParametersNames'
        value:
          title: Instance Parameters Value
          description: Database parameter value.
          anyOf:
            - type: number
            - type: integer
            - type: boolean
            - type: string
      required:
        - name
        - value
      title: InstanceParametersRequest
      type: object
    InstanceParametersResponse:
      properties:
        name:
          $ref: '#/components/schemas/InstanceParametersNames'
        value:
          title: Instance Parameters Value
          description: Database parameter value.
          anyOf:
            - type: number
            - type: integer
            - type: boolean
            - type: string
      required:
        - name
        - value
      title: InstanceParametersResponse
      type: object
    InstanceCreateRequest:
      title: Instance Create Request
      required:
        - name
        - password
        - user
        - volume
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        engine_id:
          title: Engine Id
          type: string
          format: uuid
        datastore_id:
          deprecated: true
          title: Datastore Id (Deprecated)
          type: string
          format: uuid
          description: |
            **Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.
        flavor_id:
          deprecated: true
          title: Flavor Id (Deprecated)
          type: string
          format: uuid
          description: |
            **Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        user:
          title: User
          maxLength: 25
          type: string
        password:
          title: Password
          maxLength: 50
          type: string
        volume:
          $ref: "#/components/schemas/InstanceVolumeRequest"
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/InstanceParametersRequest"
          default: []
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          default: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          default: "04:00:00"
    InstanceVolumeRequest:
      title: Instance Volume Request
      required:
        - size
      type: object
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 10
          maximum: 50000
          example: 30
        type:
          description: The type of the volume.
          allOf:
            - $ref: "#/components/schemas/VolumeType"
          default: CLOUD_NVME_15K
    InstanceVolumeResizeRequest:
      title: Instance Volume Request
      type: object
      required:
        - size
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 10
          maximum: 50000
          example: 30
        type:
          description: The type of the volume.
          allOf:
            - $ref: "#/components/schemas/VolumeType"
          default: CLOUD_NVME_15K
    InstanceResponse:
      title: Instance Response
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
    InstanceDetailResponse:
      title: Instance Detail Response
      required:
        - id
        - name
        - engine_id
        - datastore_id
        - flavor_id
        - instance_type_id
        - volume
        - addresses
        - status
        - generation
        - parameters
        - created_at
        - backup_start_at
        - backup_retention_days
      type: object
      properties:
        id:
          title: Id
          description: Database instance unique identifier.
          type: string
          format: uuid
        name:
          title: Name
          description: Database instance unique name.
          type: string
          maxLength: 100
          example: "my-db-instance"
        engine_id:
          description: Engine unique identifier.
          type: string
          format: uuid
        datastore_id:
          deprecated: true
          description: |
            Datastore unique identifier (Deprecated).
            **Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.
          type: string
          format: uuid
        flavor_id:
          deprecated: true
          description: |
            Flavor unique identifier. Instance size  (Deprecated).
            **Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.
          type: string
          format: uuid
        instance_type_id:
          description: Instance Type unique identifier. Instance size.
          type: string
          format: uuid
        volume:
          $ref: "#/components/schemas/Volume"
        addresses:
          title: Addresses
          type: array
          items:
            $ref: "#/components/schemas/Address"
        status:
          $ref: "#/components/schemas/InstanceStatus"
        generation:
          $ref: "#/components/schemas/InstanceGeneration"
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/InstanceParametersResponse"
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          example: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          example: "04:00:00"
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Last updated date
          type: string
          format: date-time
        started_at:
          title: Initial setup start date
          type: string
          format: date-time
        finished_at:
          title: Initial setup finish date
          type: string
          format: date-time
        maintenance_scheduled_at:
          title: Maintenance schedule date
          type: string
          format: date-time
        replicas:
          title: Replicas
          type: array
          items:
            $ref: "#/components/schemas/ReplicaDetailResponse"
    DatabaseInstanceUpdateRequest:
      title: Database Instance Update Request
      type: object
      properties:
        status:
          $ref: "#/components/schemas/InstanceStatusUpdate"
        backup_retention_days:
          title: Backup Retention Days
          type: integer
          example: 7
          description: The number of days that a particular backup is kept until its deletion.
        backup_start_at:
          title: Backup Start At
          description: Start time (UTC timezone) which is allowed to start the automated backup process.
          type: string
          format: time
          example: "04:00:00"
    EngineStatus:
      title: EngineStatus
      description: An enumeration.
      type: string
      enum:
        - ACTIVE
        - DEPRECATED
    EnginesResponse:
      title: Engines Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
            $ref: '#/components/schemas/MetaResponse'
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/EngineResponse"
    EngineResponse:
      title: Engine Response
      required:
        - engine
        - name
        - id
        - version
        - status
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          description: Engine unique identifier.
        engine:
          deprecated: true
          title: Engine
          type: string
          example: mysql
          description: |
            Database engine (Deprecated).
            **Deprecated**: This property is being deprecated in favor of `name`. Please update your requests to use `name` for improved functionality and future compatibility.
        name:
          title: Name
          type: string
          example: mysql
          description: Database name.
        version:
          title: Version
          type: string
          description: Database engine version.
          example: "5.7"
        status:
          $ref: "#/components/schemas/EngineStatus"
    InstanceTypeStatus:
      title: Instance Type Status
      description: An enumeration.
      type: string
      enum:
        - ACTIVE
        - DEPRECATED
    InstanceExpand:
      title: Instance Expand
      description: An enumeration.
      type: string
      enum:
        - replicas
    VolumeType:
      title: Volume Type
      description: The type of the volume.
      type: string
      enum:
        - CLOUD_NVME_15K
        - CLOUD_NVME
        - CLOUD_HDD
    ReplicasResponse:
      title: Replicas Response
      required:
        - meta
        - results
      type: object
      properties:
        meta:
            $ref: '#/components/schemas/MetaResponse'
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/ReplicaDetailResponse"
    ReplicaDetailResponse:
      title: Replica Detail Response
      required:
        - addresses
        - created_at
        - engine_id
        - datastore_id
        - flavor_id
        - instance_type_id
        - volume
        - id
        - name
        - source_id
        - status
        - generation
        - parameters
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        source_id:
          title: Source Id
          type: string
          format: uuid
        name:
          title: Name
          type: string
        engine_id:
          description: Engine unique identifier.
          type: string
          format: uuid
        datastore_id:
          deprecated: true
          description: |
            Datastore unique identifier (Deprecated).
            **Deprecated**: This property is being deprecated in favor of `engine_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.
          type: string
          format: uuid
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        flavor_id:
          deprecated: true
          description: |
            Instance Type Id (Deprecated).
            **Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `engine_id` for improved functionality and future compatibility.
          type: string
          format: uuid
        
        volume:
          $ref: "#/components/schemas/Volume"
        addresses:
          title: Addresses
          type: array
          items:
            $ref: "#/components/schemas/ReplicaAddressResponse"
        status:
          $ref: "#/components/schemas/InstanceStatus"
        generation:
          $ref: "#/components/schemas/InstanceGeneration"
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/InstanceParametersResponse"
        created_at:
          title: Created At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
        started_at:
          title: Initial setup start date
          type: string
          format: date-time
        finished_at:
          title: Initial setup finish date
          type: string
          format: date-time
        maintenance_scheduled_at:
          title: Maintenance schedule date
          type: string
          format: date-time
    ReplicaAddressResponse:
      title: Replica Address Response
      required:
        - access
      type: object
      properties:
        access:
          $ref: "#/components/schemas/AddressAccess"
        type:
          $ref: "#/components/schemas/AddressType"
        address:
          title: Address
          type: string
    ReplicaCreateRequest:
      title: Replica Create Request
      required:
        - name
        - source_id
      type: object
      properties:
        source_id:
          title: Source Id
          type: string
          format: uuid
        name:
          title: Name
          maxLength: 255
          type: string
        flavor_id:
          deprecated: true
          description: |
            Flavor Id (Deprecated).
            **Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.          
          type: string
          format: uuid
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
    ReplicaResizeRequest:
      title: Replica Resize Request
      type: object
      properties:
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        flavor_id:
          deprecated: true
          format: uuid
          title: Flavor Id
          type: string
    ReplicaResponse:
      title: Replica Response
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
    Volume:
      type: object
      properties:
        size:
          description: The size of the volume (in GiB).
          type: integer
          minimum: 10
          maximum: 50000
          example: 30
        type:
          description: The type of the volume.
          type: string
          enum:
            - CLOUD_NVME
            - CLOUD_HDD
            - CLOUD_NVME_15K
      required:
        - size
        - type
    Address:
      required:
        - access
      type: object
      properties:
        access:
          title: Access
          description: Determine if the IP can be accessed from the internet.
          type: string
          enum:
            - PRIVATE
            - PUBLIC
        type:
          title: Type
          type: string
          enum:
            - IPv4
            - IPv6
        address:
          title: Address
          type: string
          example: "172.53.10.82"
    InstanceType:
      type: object
      required:
        - id
        - name
        - label
        - vcpu
        - ram
        - family_description
        - family_slug
        - size
        - sku_source
        - sku_replica
      properties:
        id:
          description: Instance Type unique identifier.
          type: string
          format: uuid
        name:
          description: Instance Type name.
          type: string
          example: i0-c1-r4-d10
        label:
          description: Instance Type label.
          type: string
          example: cloud-dbaas-bs1.small
        vcpu:
          description: Number of vCPUs.
          type: string
          example: "1"
        ram:
          description: RAM Amount.
          type: string
          example: "4 GB"
        family_description:
          description: Instance Type Family Description.
          type: string
          example: Basic
        family_slug:
          description: Instance Type Family SLUG.
          type: string
          example: bs1
        size:
          description: Instance Type Size Description.
          type: string
          example: Small
        sku_source:
          description: SKU Database Instance Source.
          type: string
          example: BRNE10600101sm
        sku_replica:
          description: SKU Database Instance Replica.
          type: string
          example: BRNE10610101sm
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        slug:
          type: string
          example: "bad_request"
        message:
          type: string
          example: "Bad Request"
        details:
          type: object
      required:
        - slug
        - message
    InstanceResizeRequest:
      title: Instance Resize Request
      type: object
      properties:
        instance_type_id:
          title: Instance Type Id
          type: string
          format: uuid
        flavor_id:
          deprecated: true
          title: Flavor Id (Deprecated)
          type: string
          format: uuid
          description: |
            **Deprecated**: This property is being deprecated in favor of `instance_type_id`. Please update your requests to use `instance_type_id` for improved functionality and future compatibility.		
        volume:
          $ref: "#/components/schemas/InstanceVolumeResizeRequest"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Enter the access token"
    OAuth2PreProd:
      flows:
        authorizationCode:
          authorizationUrl: https://idpa-api-preprod.luizalabs.com/oauth/authorize
          tokenUrl: https://idpa-api-preprod.luizalabs.com/oauth/token
          scopes:
            dbaas.read: Read DBaaS resources
            dbaas.write: Write DBaaS resources
      type: oauth2
      description: OAuth2 via IDPA
    OAuth2Prod:
      flows:
        authorizationCode:
          authorizationUrl: https://autoseg-idp.luizalabs.com/oauth/authorize
          tokenUrl: https://autoseg-idp.luizalabs.com/oauth/token
          scopes:
            dbaas.read: Read DBaaS resources
            dbaas.write: Write DBaaS resources
      type: oauth2
      description: OAuth2 via IDPA.
  responses:
    BadRequest:
      description: Bad Request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "bad_request"
            message: "Bad request"
    NotFound:
      description: Not Found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "not_found"
            message: "Not Found"
    RequiredField:
      description: Required Field.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "bad_request"
            message: "Bad request"
    Unauthorized:
      description: Access Unauthorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "unauthorized"
            message: "Access unauthorized"
    Forbidden:
      description: Access Forbidden.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "forbidden"
            message: "Access Forbidden"
    UnprocessableEntity:
      description: Unprocessable Entity.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "unprocessable_entity"
            message: "Unprocessable entity"
    TooManyRequests:
      description: Too Many Requests.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "too_many_requests"
            message: "Too Many Requests"
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            slug: "internal_server_error"
            message: "Internal server error"
servers:
  - url: https://api-dbaas.dev-qa.br-se-1.jaxyendy.com
  - url: https://api-dbaas.team-integration.br-se-1.jaxyendy.com
  - url: https://api-dbaas.pre-prod.br-se-1.jaxyendy.com
  - url: https://api-dbaas.br-se-1.jaxyendy.com
  - url: https://api-dbaas.dev-qa.br-ne-1.jaxyendy.com
  - url: https://api-dbaas.team-integration.br-ne-1.jaxyendy.com
  - url: https://api-dbaas.pre-prod.br-ne-1.jaxyendy.com
  - url: https://api.magalu.cloud/br-ne-1/database
  - url: https://dbaas.dev-qa.se1.br.jaxyendy.com
  - url: https://dbaas.team-integration.se1.br.jaxyendy.com
  - url: https://dbaas.pre-prod.se1.br.jaxyendy.com
  - url: https://api.magalu.cloud/br-se1/database