{
    "openapi": "3.0.3",
    "info": {
        "title": "vpc-api-product",
        "description": "APIs referentes ao produto de VPC",
        "contact": {
            "name": "Tribo IAAS Cloud",
            "url": "https://github.com/luizalabs",
            "email": "thullyo.cunha@luizalabs.com"
        },
        "version": "1.124.1"
    },
    "paths": {
        "/v0/healthcheck": {
            "get": {
                "tags": [
                    "healthcheck"
                ],
                "summary": "Healthcheck",
                "description": "Check api status",
                "operationId": "healthcheck_v0_healthcheck_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Healthcheck"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/networks": {
            "get": {
                "tags": [
                    "xaas_network"
                ],
                "summary": "List network by VPC",
                "description": "Returns a list of networks inside a specific VPC",
                "operationId": "getNetworksByVPC",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC ID",
                            "description": "Id of the VPC"
                        },
                        "description": "Id of the VPC"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list Networks"
                        },
                        "description": "Project type to list Networks"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListNetworkApiResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/ports": {
            "post": {
                "tags": [
                    "port"
                ],
                "summary": "Create Port VPC Default",
                "description": "Create a Port on the default VPC. Uses VPC default in the provided x-tenant-id. You can provide a list of security_groups_id or subnets.",
                "operationId": "createPortVpcDefault",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "X-Zone",
                            "nullable": true
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PortCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "get": {
                "tags": [
                    "port"
                ],
                "summary": "Details of a Port list",
                "description": "Return a detailed list of ports from the provided tenant_id",
                "operationId": "portsDetailedList",
                "parameters": [
                    {
                        "name": "port_id_list",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {},
                            "default": [],
                            "title": "Port Id List"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PortResponse"
                                    },
                                    "title": "Response Portsdetailedlist"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/vpcs/{vpc_id}/ports": {
            "post": {
                "tags": [
                    "port"
                ],
                "summary": "Create Port",
                "description": "Create a Port with provided vpc_id and x-tenant-id. You can provide a list of security_groups_id or subnets",
                "operationId": "createPort",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "vpc_id",
                            "description": "ID of the VPC to create port"
                        },
                        "description": "ID of the VPC to create port"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "X-Zone",
                            "nullable": true
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PortCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "get": {
                "tags": [
                    "port"
                ],
                "summary": "List Ports",
                "description": "Returns a list of ports for a provided vpc_id and x-tenant-id. The list will be paginated, it means you can easily find what you need just setting the page number(_offset) and the quantity of items per page(_limit). The level of detail can also be set",
                "operationId": "listPorts",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "vpc_id",
                            "description": "ID of VPC to list ports"
                        },
                        "description": "ID of VPC to list ports"
                    },
                    {
                        "name": "detailed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Detailed",
                            "default": true
                        }
                    },
                    {
                        "name": "_offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Page Number",
                            "description": "Page Number",
                            "default": 1
                        },
                        "description": "Page Number"
                    },
                    {
                        "name": "_limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Items Per Page",
                            "description": "Items Per Page",
                            "default": 10
                        },
                        "description": "Items Per Page"
                    },
                    {
                        "name": "port_id_list",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {},
                            "default": [],
                            "title": "Port Id List"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/PortsListSimplified"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PortsList"
                                        }
                                    ],
                                    "title": "Response Listports"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/ports/{port_id}": {
            "get": {
                "tags": [
                    "port"
                ],
                "summary": "Port Details",
                "description": "Return a port details from the provided tenant_id",
                "operationId": "portDetails",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Port Id"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "delete": {
                "tags": [
                    "port"
                ],
                "summary": "Delete Port",
                "description": "Delete a port from the provided tenant_id",
                "operationId": "deletePort",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "port_id",
                            "description": "ID of the Port to delete"
                        },
                        "description": "ID of the Port to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/ports/all": {
            "delete": {
                "tags": [
                    "port"
                ],
                "summary": "Delete Port All",
                "description": "Delete a all ports from the provided tenant_id",
                "operationId": "deleteAllPorts",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortDeletedAllResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/ports/{port_id}/attach/{security_group_id}": {
            "post": {
                "tags": [
                    "port"
                ],
                "summary": "Attach Security Group",
                "description": "Attach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
                "operationId": "attachSecurityGroup",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "port_id",
                            "description": "ID of the Port to attach security group"
                        },
                        "description": "ID of the Port to attach security group"
                    },
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "security_group_id",
                            "description": "ID of the Security Group to attach"
                        },
                        "description": "ID of the Security Group to attach"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/ports/{port_id}/detach/{security_group_id}": {
            "post": {
                "tags": [
                    "port"
                ],
                "summary": "Detach Security Group",
                "description": "Detach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
                "operationId": "detachSecurityGroup",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "port_id",
                            "description": "ID of the Port to detach security group"
                        },
                        "description": "ID of the Port to detach security group"
                    },
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "security_group_id",
                            "description": "ID of the Security Group to detach"
                        },
                        "description": "ID of the Security Group to detach"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/ports/all": {
            "delete": {
                "tags": [
                    "xaas_port"
                ],
                "summary": "Delete Port Xaas All",
                "description": "Delete all ports of VPCs for a provided tenant_id of an project type",
                "operationId": "deleteAllXaasPorts",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete all ports"
                        },
                        "description": "Project type to delete all ports"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortDeletedAllResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/ports": {
            "post": {
                "tags": [
                    "xaas_port"
                ],
                "summary": "Create Port Xaas",
                "description": "Create a Port on an xaas project with provided vpc_id and x-tenant-id. You can provide a list of security_groups_id or subnets",
                "operationId": "createPortXaas",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "vpc_id",
                            "description": "ID of the VPC to create port"
                        },
                        "description": "ID of the VPC to create port"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create port"
                        },
                        "description": "Project type to create port"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "X-Zone",
                            "nullable": true
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PortCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/ports/{port_id}/attach/{security_group_id}": {
            "post": {
                "tags": [
                    "xaas_port"
                ],
                "summary": "Attach XAAS Security Group",
                "description": "XAAS attach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
                "operationId": "attachXaasSecurityGroup",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "port_id",
                            "description": "ID of the Port to attach security group"
                        },
                        "description": "ID of the Port to attach security group"
                    },
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "security_group_id",
                            "description": "ID of the Security Group to attach"
                        },
                        "description": "ID of the Security Group to attach"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to attach security group"
                        },
                        "description": "Project type to attach security group"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/ports/{port_id}/detach/{security_group_id}": {
            "post": {
                "tags": [
                    "xaas_port"
                ],
                "summary": "Detach XAAS Security Group",
                "description": "XAAS detach a Security Group to a Port with provided port_id, security_group_id, x-tenant-id of an specific project type",
                "operationId": "detachXaasSecurityGroup",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "port_id",
                            "description": "ID of the Port to detach security group"
                        },
                        "description": "ID of the Port to detach security group"
                    },
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "security_group_id",
                            "description": "ID of the Security Group to detach"
                        },
                        "description": "ID of the Security Group to detach"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to detach security group"
                        },
                        "description": "Project type to detach security group"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/ports/{port_id}": {
            "get": {
                "tags": [
                    "xaas_port"
                ],
                "summary": "XaaS Port Details",
                "description": "Return a port details from the provided tenant_id from a xaas project",
                "operationId": "xaasPortDetails",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "port_id",
                            "description": "ID of the Port to detail"
                        },
                        "description": "ID of the Port to detail"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to detail port"
                        },
                        "description": "Project type to detail port"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "delete": {
                "tags": [
                    "xaas_port"
                ],
                "summary": "Delete Port Xaas",
                "description": "Delete a port from the provided tenant_id from an xaas project",
                "operationId": "deletePortXaas",
                "parameters": [
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "port_id",
                            "description": "ID of the Port to delete"
                        },
                        "description": "ID of the Port to delete"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete port"
                        },
                        "description": "Project type to delete port"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/vpcs/{vpc_id}/public_ips": {
            "post": {
                "tags": [
                    "public_ip"
                ],
                "summary": "Create Public IP",
                "description": "Create async Public IP in a VPC with provided vpc_id and x_tenant_id",
                "operationId": "createPublicIp",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc ID",
                            "description": "Id of the VPC to create the Public IP in"
                        },
                        "description": "Id of the VPC to create the Public IP in"
                    },
                    {
                        "name": "validate_quota",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "validateQuota",
                            "description": "Validate the quota before creating the Public IP",
                            "default": true
                        },
                        "description": "Validate the quota before creating the Public IP"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "default": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "nullable": true
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicIpCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "get": {
                "tags": [
                    "public_ip"
                ],
                "summary": "List Public IPs",
                "description": "Returns a list of Public IPs for a provided vpc_id",
                "operationId": "ListPublicIps",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc ID",
                            "description": "Id of the VPC to list the Public IPs in"
                        },
                        "description": "Id of the VPC to list the Public IPs in"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpsList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/public_ips/{public_ip_id}": {
            "get": {
                "tags": [
                    "public_ip"
                ],
                "summary": "Public IP Details",
                "description": "Return a Public IP details",
                "operationId": "publicIpDetails",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to retrieve"
                        },
                        "description": "Id of the Public IP to retrieve"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpDb"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "delete": {
                "tags": [
                    "public_ip"
                ],
                "summary": "Delete Public IP",
                "description": "Delete a Public IP from the provided tenant_id",
                "operationId": "deletePublicIp",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to delete"
                        },
                        "description": "Id of the Public IP to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/public_ips/{public_ip_id}/attach/{port_id}": {
            "post": {
                "tags": [
                    "public_ip"
                ],
                "summary": "Attach Public IP",
                "description": "Attach a Public IP to a Port",
                "operationId": "attachPublicIp",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to attach port to"
                        },
                        "description": "Id of the Public IP to attach port to"
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Port ID",
                            "description": "Id of the Port to attach the Public IP"
                        },
                        "description": "Id of the Port to attach the Public IP"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/public_ips/{public_ip_id}/detach/{port_id}": {
            "post": {
                "tags": [
                    "public_ip"
                ],
                "summary": "Detach Public IP",
                "description": "Detach a Public IP to a Port",
                "operationId": "detachPublicIp",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to detach port to"
                        },
                        "description": "Id of the Public IP to detach port to"
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Port ID",
                            "description": "Id of the Port to detach the Public IP"
                        },
                        "description": "Id of the Port to detach the Public IP"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/public_ips": {
            "get": {
                "tags": [
                    "public_ip"
                ],
                "summary": "Tenant's public IP list",
                "description": "Return a tenant's public ip list",
                "operationId": "tenantPublicIpList",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpsList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/public_ips": {
            "post": {
                "tags": [
                    "xaas_public_ip"
                ],
                "summary": "Create Public IP XaaS",
                "description": "Create async Public IP in a VPC with provided vpc_id and x_tenant_id for XaaS",
                "operationId": "createXaaSPublicIp",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc ID",
                            "description": "Id of the VPC to create the Public IP in"
                        },
                        "description": "Id of the VPC to create the Public IP in"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list public ip"
                        },
                        "description": "Project type to list public ip"
                    },
                    {
                        "name": "validate_quota",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "validateQuota",
                            "description": "Validate the quota before creating the Public IP",
                            "default": true
                        },
                        "description": "Validate the quota before creating the Public IP"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "default": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "nullable": true
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicIpCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "get": {
                "tags": [
                    "xaas_public_ip"
                ],
                "summary": "List Public IPs XaaS",
                "description": "Returns a list of Public IPs for a provided vpc_id",
                "operationId": "XaasListPublicIps",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc ID",
                            "description": "Id of the VPC to list the Public IPs in"
                        },
                        "description": "Id of the VPC to list the Public IPs in"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list public ip"
                        },
                        "description": "Project type to list public ip"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpsList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/public_ips": {
            "get": {
                "tags": [
                    "xaas_public_ip"
                ],
                "summary": "Tenant's public IP list XaaS",
                "description": "Return a tenant's public ip list",
                "operationId": "tenantXaasListPublicIps",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list tenant's public ip"
                        },
                        "description": "Project type to list tenant's public ip"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpsList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/public_ips/{public_ip_id}": {
            "get": {
                "tags": [
                    "xaas_public_ip"
                ],
                "summary": "Public IP Details XaaS",
                "description": "Return a Public IP XaaS details",
                "operationId": "publicIpXaaSDetails",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to retrieve"
                        },
                        "description": "Id of the Public IP to retrieve"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete tenant's public ip"
                        },
                        "description": "Project type to delete tenant's public ip"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpDb"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "delete": {
                "tags": [
                    "xaas_public_ip"
                ],
                "summary": "Delete Public IP XaaS",
                "description": "Delete a Public IP from the provided tenant_id for xaas",
                "operationId": "deleteXaaSPublicIp",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to delete"
                        },
                        "description": "Id of the Public IP to delete"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete tenant's public ip"
                        },
                        "description": "Project type to delete tenant's public ip"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/public_ips/{public_ip_id}/attach/{port_id}": {
            "post": {
                "tags": [
                    "xaas_public_ip"
                ],
                "summary": "Attach Public IP XaaS",
                "description": "Attach a Public IP to a Port",
                "operationId": "attachXaaSPublicIp",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to attach port to"
                        },
                        "description": "Id of the Public IP to attach port to"
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Port ID",
                            "description": "Id of the Port to attach the Public IP"
                        },
                        "description": "Id of the Port to attach the Public IP"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete tenant's public ip"
                        },
                        "description": "Project type to delete tenant's public ip"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/public_ips/{public_ip_id}/detach/{port_id}": {
            "post": {
                "tags": [
                    "xaas_public_ip"
                ],
                "summary": "Detach Public IP",
                "description": "Detach a Public IP to a Port",
                "operationId": "detachXaaSPublicIp",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public IP ID",
                            "description": "Id of the Public IP to detach port to"
                        },
                        "description": "Id of the Public IP to detach port to"
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Port ID",
                            "description": "Id of the Port to detach the Public IP"
                        },
                        "description": "Id of the Port to detach the Public IP"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete tenant's public ip"
                        },
                        "description": "Project type to delete tenant's public ip"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/usage": {
            "get": {
                "tags": [
                    "quotas"
                ],
                "summary": "List usage quotas",
                "description": "Return a list of selected usage quotas from a provided tenant",
                "operationId": "usageQuotasList",
                "parameters": [
                    {
                        "name": "quota_slug",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SlugQuotas"
                                }
                            ],
                            "title": "quota_slug",
                            "description": "Service to check quota usage"
                        },
                        "description": "Service to check quota usage"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotaResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/security_groups/{security_group_id}/rules": {
            "post": {
                "tags": [
                    "rule"
                ],
                "summary": "Create Rule",
                "description": "Create a Rule async, returning its ID. To monitor the creation progress, please check the status in the service message or implement polling.Either a remote_ip_prefix or a remote_group_id can be specified.With remote_ip_prefix, all IPs that match the criteria will be allowed.With remote_group_id, only the specified security group is allowed to communicatefollowing the specified protocol, direction and port_range_min/max",
                "operationId": "createRule",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Security Group ID",
                            "description": "Id of the Security Group"
                        },
                        "description": "Id of the Security Group"
                    },
                    {
                        "name": "validate_quota",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "validateQuota",
                            "description": "Validate the quota before creating Rule",
                            "default": true
                        },
                        "description": "Validate the quota before creating Rule"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "nullable": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "nullable": true
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RuleCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "get": {
                "tags": [
                    "rule"
                ],
                "summary": "List Rules",
                "description": "Returns a list of rules for a provided security_group_id",
                "operationId": "listRules",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Security Group ID",
                            "description": "Id of the Security Group"
                        },
                        "description": "Id of the Security Group"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RulesList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/rules/{rule_id}": {
            "get": {
                "tags": [
                    "rule"
                ],
                "summary": "Rule Details",
                "description": "Return a rule details",
                "operationId": "ruleDetails",
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Rule ID",
                            "description": "Id of the Rule"
                        },
                        "description": "Id of the Rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "delete": {
                "tags": [
                    "rule"
                ],
                "summary": "Delete a Rule",
                "description": "Delete a rule from the provided tenant_id",
                "operationId": "deleteRule",
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Rule ID",
                            "description": "Id of the Rule"
                        },
                        "description": "Id of the Rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/security_groups/{security_group_id}/rules": {
            "post": {
                "tags": [
                    "xaas_rule"
                ],
                "summary": "Create Rule",
                "description": "Create a Rule async, returning its ID. To monitor the creation progress, please check the status in the service message or implement polling.Either a remote_ip_prefix or a remote_group_id can be specified.With remote_ip_prefix, all IPs that match the criteria will be allowed.With remote_group_id, only the specified security group is allowed to communicatefollowing the specified protocol, direction and port_range_min/max",
                "operationId": "createRuleXaas",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Security Group ID",
                            "description": "Id of the Security Group"
                        },
                        "description": "Id of the Security Group"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create rule"
                        },
                        "description": "Project type to create rule"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "nullable": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "nullable": true
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RuleCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "get": {
                "tags": [
                    "xaas_rule"
                ],
                "summary": "List Rules",
                "description": "Returns a list of rules for a provided security_group_id",
                "operationId": "listRulesXaas",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Security Group ID",
                            "description": "Id of the Security Group"
                        },
                        "description": "Id of the Security Group"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create rule"
                        },
                        "description": "Project type to create rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RulesList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/rules/{rule_id}": {
            "get": {
                "tags": [
                    "xaas_rule"
                ],
                "summary": "Rule Details",
                "description": "Return a rule details",
                "operationId": "ruleDetailsXaas",
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Rule ID",
                            "description": "Id of the Rule"
                        },
                        "description": "Id of the Rule"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create rule"
                        },
                        "description": "Project type to create rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "delete": {
                "tags": [
                    "xaas_rule"
                ],
                "summary": "Delete a Rule",
                "description": "Delete a rule from the provided tenant_id",
                "operationId": "deleteRuleXaas",
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Rule ID",
                            "description": "Id of the Rule"
                        },
                        "description": "Id of the Rule"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create rule"
                        },
                        "description": "Project type to create rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "patch": {
                "tags": [
                    "xaas_rule"
                ],
                "summary": "Update Async Rule",
                "description": "Update async creation of Rule",
                "operationId": "updateAsyncRule",
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Rule ID",
                            "description": "Id of the Rule"
                        },
                        "description": "Id of the Rule"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create rule"
                        },
                        "description": "Project type to create rule"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-request-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Request id of Rule to update",
                            "title": "X-Request-Id"
                        },
                        "description": "Request id of Rule to update"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RuleDefaultStatusEvent"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/security_groups/default": {
            "post": {
                "tags": [
                    "security_group"
                ],
                "summary": "Create Security Group Default",
                "description": "Create a Security Group Default",
                "operationId": "createSecurityGroupDefault",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/security_groups": {
            "get": {
                "tags": [
                    "security_group"
                ],
                "summary": "List Security Groups by Tenant",
                "description": "Returns a list of security groups for a provided tenant_id",
                "operationId": "listSecurityGroupByTenant",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupListEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "post": {
                "tags": [
                    "security_group"
                ],
                "summary": "Create Security Group",
                "description": "Create a Security Group",
                "operationId": "createSecurityGroup",
                "parameters": [
                    {
                        "name": "validate_quota",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "validateQuota",
                            "description": "Validate the quota before creating Security Group",
                            "default": true
                        },
                        "description": "Validate the quota before creating Security Group"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "default": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "default": 120
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroupCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/vpcs/{vpc_id}/security_groups": {
            "post": {
                "tags": [
                    "security_group"
                ],
                "summary": "Create Security Group",
                "description": "Create a Security Group",
                "operationId": "createSecurityGroupDeprecated",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "VPC Id",
                            "description": "Id of the vpc to create the security group in",
                            "nullable": true
                        },
                        "description": "Id of the vpc to create the security group in"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "nullable": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "nullable": true
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroupCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": true
            },
            "get": {
                "tags": [
                    "security_group"
                ],
                "summary": "List Security Groups",
                "description": "Returns a list of security groups for a provided vpc_id",
                "operationId": "listSecurityGroup",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc ID",
                            "description": "Id of the VPC to create the Security Group in"
                        },
                        "description": "Id of the VPC to create the Security Group in"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupListEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true,
                "x-mgc-hidden": true
            }
        },
        "/v0/security_groups/{security_group_id}": {
            "get": {
                "tags": [
                    "security_group"
                ],
                "summary": "Security Group Details",
                "description": "Return a security group details",
                "operationId": "securityGroupDetails",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Security Group ID",
                            "description": "Id of the security group to detail"
                        },
                        "description": "Id of the security group to detail"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupDetailEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "delete": {
                "tags": [
                    "security_group"
                ],
                "summary": "Delete a security group",
                "description": "Delete a security group from the provided tenant_id",
                "operationId": "deleteSecurityGroup",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Security Group ID",
                            "description": "Id of the security group to delete"
                        },
                        "description": "Id of the security group to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/security_groups_all": {
            "delete": {
                "tags": [
                    "security_group"
                ],
                "summary": "Delete all security groups",
                "description": "Delete all security groups from the provided tenant_id",
                "operationId": "deleteAllSecurityGroups",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupDeletedAllResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/security_groups/default": {
            "post": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "Create Security Group Default",
                "description": "Create a Security Group Default",
                "operationId": "createSecurityGroupDefaultXaas",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProjectType"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/security_groups": {
            "post": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "Create Security Group",
                "description": "Create a Security Group async, returning its ID. To monitor the creation progress, please check the status in the service message or implement polling.",
                "operationId": "createSecurityGroupXaas",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create Security Group"
                        },
                        "description": "Project type to create Security Group"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroupCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "get": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "List Security Groups",
                "description": "Returns a list of security groups for a provided tenant_id",
                "operationId": "listSecurityGroupXaas",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list Security Groups"
                        },
                        "description": "Project type to list Security Groups"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "X-Zone",
                            "nullable": true
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/XaasSecurityGroupListEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/security_groups": {
            "post": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "Create Security Group",
                "description": "Create a Security Group",
                "operationId": "createSecurityGroupXaasDeprecated",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "VPC Id",
                            "description": "Id of the vpc to create the security group in",
                            "nullable": true
                        },
                        "description": "Id of the vpc to create the security group in"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create Security Group"
                        },
                        "description": "Project type to create Security Group"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "boolean",
                            "title": "wait",
                            "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter",
                            "nullable": true
                        },
                        "description": "The request will be asynchronous. The wait parameter tells the API that you want the request to simulate synchronous behavior (to maintain endpoint compatibility). You can set an approximate timeout with the waitTimeout parameter"
                    },
                    {
                        "name": "wait_timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "waitTimeout",
                            "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)",
                            "nullable": true
                        },
                        "description": "the approximate time in seconds you want to wait when simulating the request as synchronous (only works with wait=true)"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroupCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "get": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "List Security Groups",
                "description": "Returns a list of security groups for a provided vpc_id",
                "operationId": "listSecurityGroupXaasDeprecated",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list Security Groups"
                        },
                        "description": "Project type to list Security Groups"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "X-Zone",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/XaasSecurityGroupListEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/security_groups/{security_group_id}": {
            "get": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "Security Group Details",
                "description": "Return a security group details",
                "operationId": "securityGroupDetailsXaas",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "securityGroupId",
                            "description": "Id of the Security Group to detail"
                        },
                        "description": "Id of the Security Group to detail"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to detail Security Group"
                        },
                        "description": "Project type to detail Security Group"
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "X-Zone",
                            "nullable": true
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupDetailEvent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "delete": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "Delete a security group",
                "description": "Delete a security group from the provided tenant_id",
                "operationId": "deleteSecurityGroupXaas",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "securityGroupId",
                            "description": "Id of the Security Group to delete"
                        },
                        "description": "Id of the Security Group to delete"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete Security Group"
                        },
                        "description": "Project type to delete Security Group"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "patch": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "Update Async Security Group",
                "description": "Update async creation of Security Group",
                "operationId": "updateAsyncSecurityGroup",
                "parameters": [
                    {
                        "name": "security_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "securityGroupId",
                            "description": "Id of the async Security Group to update"
                        },
                        "description": "Id of the async Security Group to update"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to update Security Group"
                        },
                        "description": "Project type to update Security Group"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    },
                    {
                        "name": "x-request-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "title": "X-Request-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecurityGroupStatusEvent"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/security_groups_all": {
            "delete": {
                "tags": [
                    "xaas_security_group"
                ],
                "summary": "Delete all security groups xaas",
                "description": "Delete all security groups from the provided tenant_id xaas",
                "operationId": "deleteAllSecurityGroupsXaas",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete all Security Groups"
                        },
                        "description": "Project type to delete all Security Groups"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityGroupDeletedAllResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/subnetpools": {
            "post": {
                "tags": [
                    "xaas_subnetpools"
                ],
                "summary": "Create a Subnet Pool in a VPC",
                "description": "Create a Subnet Pool",
                "operationId": "createSubnetPoolInVPC",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "Id of the VPC to create the Subnet Pool"
                        },
                        "description": "Id of the VPC to create the Subnet Pool"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create Subnet Pool"
                        },
                        "description": "Project type to create Subnet Pool"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubnetPoolRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetPoolResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "get": {
                "tags": [
                    "xaas_subnetpools"
                ],
                "summary": "List Subnet Pools by VPC",
                "description": "Returns a list of subnet pools inside a specific VPC",
                "operationId": "getSubnetPoolsByVPC",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc Id",
                            "description": "Id of the VPC to list the Subnet Pools"
                        },
                        "description": "Id of the VPC to list the Subnet Pools"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list Subnet Pools by VPC"
                        },
                        "description": "Project type to list Subnet Pools by VPC"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetPoolsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/subnetpools": {
            "get": {
                "tags": [
                    "xaas_subnetpools"
                ],
                "summary": "List Subnet Pools by Tenant",
                "description": "Returns a list of Subnet Pools for the current tenant's project",
                "operationId": "listSubnetPoolsByTenant",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list Subnet Pools"
                        },
                        "description": "Project type to list Subnet Pools"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetPoolsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/subnetpools/{subnetpool_id}": {
            "get": {
                "tags": [
                    "xaas_subnetpools"
                ],
                "summary": "Get Subnet Pool by ID",
                "description": "Get details of a specific Subnet Pool",
                "operationId": "getDetailedSubnetPool",
                "parameters": [
                    {
                        "name": "subnetpool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "subnetpoolId",
                            "description": "Id of the Subnet Pool to get details"
                        },
                        "description": "Id of the Subnet Pool to get details"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to detail Subnet Pool"
                        },
                        "description": "Project type to detail Subnet Pool"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetPoolDetailsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "delete": {
                "tags": [
                    "xaas_subnetpools"
                ],
                "summary": "Delete Subnet Pool by ID",
                "description": "Delete one Subnet Pool by ID",
                "operationId": "deleteSubnetPoolByID",
                "parameters": [
                    {
                        "name": "subnetpool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "subnetpoolId",
                            "description": "Id of the Subnet Pool to delete"
                        },
                        "description": "Id of the Subnet Pool to delete"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete Subnet Pool"
                        },
                        "description": "Project type to delete Subnet Pool"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/vpcs/{vpc_id}/subnets": {
            "get": {
                "tags": [
                    "subnets"
                ],
                "summary": "List Subnets",
                "description": "Returns a list of subnets for a provided vpc_id",
                "operationId": "listSubnets",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc Id",
                            "description": "Id of the VPC to list Subnets"
                        },
                        "description": "Id of the VPC to list Subnets"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "post": {
                "tags": [
                    "subnets"
                ],
                "summary": "Create Subnet",
                "description": "Create a Subnet",
                "operationId": "createSubnet",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc Id",
                            "description": "Id of the VPC to create Subnet"
                        },
                        "description": "Id of the VPC to create Subnet"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    },
                    {
                        "name": "x-zone",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "exclusiveMaximum": false,
                            "exclusiveMinimum": false,
                            "type": "string",
                            "title": "X-Zone",
                            "nullable": true
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubnetCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/subnets/{subnet_id}": {
            "delete": {
                "tags": [
                    "subnets"
                ],
                "summary": "Delete a Subnet",
                "description": "Delete a subnet from the provided tenant_id",
                "operationId": "deleteSubnet",
                "parameters": [
                    {
                        "name": "subnet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Subnet Id",
                            "description": "Id of the Subnet to delete"
                        },
                        "description": "Id of the Subnet to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "get": {
                "tags": [
                    "subnets"
                ],
                "summary": "Subnet Details",
                "description": "Returns a subnet details",
                "operationId": "subnetDetails",
                "parameters": [
                    {
                        "name": "subnet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Subnet Id",
                            "description": "Id of the Subnet to detail"
                        },
                        "description": "Id of the Subnet to detail"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetResponseDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "patch": {
                "tags": [
                    "subnets"
                ],
                "summary": "Update Subnet",
                "description": "Update a subnet from the provided tenant_id",
                "operationId": "updateSubnet",
                "parameters": [
                    {
                        "name": "subnet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Subnet Id"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubnetPatchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetResponseId"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/subnets": {
            "get": {
                "tags": [
                    "xaas_subnets"
                ],
                "summary": "List XAAS Subnets",
                "description": "Returns a list of XAAS subnets from the provided vpc_id",
                "operationId": "listXAASSubnets",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "Id of the VPC to list Subnets"
                        },
                        "description": "Id of the VPC to list Subnets"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list Subnets"
                        },
                        "description": "Project type to list Subnets"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubnetsResponseXAAS"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/vpcs/default": {
            "post": {
                "tags": [
                    "vpc"
                ],
                "summary": "Create Vpc Default",
                "operationId": "create_vpc_default_v0_vpcs_default_post",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/vpcs": {
            "post": {
                "tags": [
                    "vpc"
                ],
                "summary": "Create VPC",
                "description": "Create a VPC",
                "operationId": "createVpc",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VpcCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "get": {
                "tags": [
                    "vpc"
                ],
                "summary": "List VPC",
                "description": "Returns a list of VPCs for a provided tenant_id",
                "operationId": "listVpcs",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResponseList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/vpcs/{vpc_id}": {
            "get": {
                "tags": [
                    "vpc"
                ],
                "summary": "VPC Details",
                "description": "Return a VPC details",
                "operationId": "vpcDetails",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "ID of the VPC to detail"
                        },
                        "description": "ID of the VPC to detail"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            },
            "delete": {
                "tags": [
                    "vpc"
                ],
                "summary": "Delete VPC",
                "description": "Delete a VPC from the provided tenant_id",
                "operationId": "deleteVpc",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "ID of the VPC to delete"
                        },
                        "description": "ID of the VPC to delete"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": true
            }
        },
        "/v0/vpcs/all": {
            "delete": {
                "tags": [
                    "vpc"
                ],
                "summary": "Delete all VPCs",
                "description": "Delete all VPCs from the provided tenant_id",
                "operationId": "deleteAllVpcs",
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcDeletedAllResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs": {
            "post": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "Create Vpc Xaas",
                "description": "Create a VPC for a provided tenant_id of an project type",
                "operationId": "create_vpc_xaas_v0_xaas_vpcs_post",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create VPC"
                        },
                        "description": "Project type to create VPC"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/XVpcCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            },
            "get": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "List VPC with project type",
                "description": "Returns a list of VPCs for a provided tenant_id of an project type",
                "operationId": "listVpcsProjectType",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list VPCs"
                        },
                        "description": "Project type to list VPCs"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResponseList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}": {
            "get": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "VPC with project type details",
                "description": "Return a VPC details",
                "operationId": "vpcProjectTypeDetails",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Vpc Id"
                        }
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProjectType"
                        }
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcDetailsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/all": {
            "delete": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "Delete Vpc Xaas All",
                "description": "Delete all of VPCs for a provided tenant_id of an project type",
                "operationId": "deleteAllVpcsXaas",
                "parameters": [
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete all VPCs"
                        },
                        "description": "Project type to delete all VPCs"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcDeletedAllResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/add_route": {
            "post": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "Add Route on VPCs Primary Router",
                "description": "Create a static route for VPCs Primary Router",
                "operationId": "addVpcPrimaryRouterRoute",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "Id of the VPC to create route"
                        },
                        "description": "Id of the VPC to create route"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to create route"
                        },
                        "description": "Project type to create route"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/delete_route": {
            "post": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "Delete Route on VPCs primary Router",
                "description": "Delete a static route for VPCs primary Router",
                "operationId": "delVpcsPrimaryRouterRoute",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "Id of the VPC to delete route"
                        },
                        "description": "Id of the VPC to delete route"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete route"
                        },
                        "description": "Project type to delete route"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/add_interface": {
            "post": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "Add Router interface on VPCs primary router",
                "description": "Create a Router interface on VPCs primary router",
                "operationId": "addVpcsPrimaryRouterInterface",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "Id of the VPC to add interface"
                        },
                        "description": "Id of the VPC to add interface"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to add interface"
                        },
                        "description": "Project type to add interface"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddInterfaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RouterInterfaceResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/delete_interface/{interface_id}": {
            "delete": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "Delete router interface on VPCs primary router",
                "description": "Delete a router interface on VPCs primary router",
                "operationId": "delVpcsPrimaryRouterInterface",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "Id of the VPC to delete interface"
                        },
                        "description": "Id of the VPC to delete interface"
                    },
                    {
                        "name": "interface_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Interface Id",
                            "description": "Id of the interface to delete"
                        },
                        "description": "Id of the interface to delete"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to delete interface"
                        },
                        "description": "Project type to delete interface"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/xaas/vpcs/{vpc_id}/interfaces": {
            "get": {
                "tags": [
                    "xaas_vpc"
                ],
                "summary": "List Router interfaces from a VPCs primary Router",
                "description": "Returns a Router Interface's list from a VPCs primary Router",
                "operationId": "listVpcsPrimaryRouterInterfaces",
                "parameters": [
                    {
                        "name": "vpc_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "VPC Id",
                            "description": "Id of the VPC to list interfaces"
                        },
                        "description": "Id of the VPC to list interfaces"
                    },
                    {
                        "name": "project_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectType"
                                }
                            ],
                            "title": "project_type",
                            "description": "Project type to list interfaces"
                        },
                        "description": "Project type to list interfaces"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RouterInterfaceResponseList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        },
        "/v0/worker/public_ips/{public_ip_id}": {
            "patch": {
                "tags": [
                    "worker_public_ips"
                ],
                "summary": "Update Public Ip",
                "description": "Update a public ip from the provided tenant_id",
                "operationId": "updatePublicIpWorker",
                "parameters": [
                    {
                        "name": "public_ip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "title": "Public Ip Id",
                            "description": "Id of the public ip to update"
                        },
                        "description": "Id of the public ip to update"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "description": "Tenant id of the project",
                            "title": "X-Tenant-Id"
                        },
                        "description": "Tenant id of the project"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicIpUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicIpResponseId"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "x-viveiro": false,
                "x-mgc-hidden": true
            }
        }
    },
    "components": {
        "schemas": {
            "AddInterfaceRequest": {
                "properties": {
                    "nic_vpc_id": {
                        "type": "string",
                        "title": "Nic Vpc Id"
                    }
                },
                "type": "object",
                "required": [
                    "nic_vpc_id"
                ],
                "title": "AddInterfaceRequest",
                "example": {
                    "nic_vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "DhcpPoolStr": {
                "properties": {
                    "start": {
                        "type": "string",
                        "title": "Start"
                    },
                    "end": {
                        "type": "string",
                        "title": "End"
                    }
                },
                "type": "object",
                "required": [
                    "start",
                    "end"
                ],
                "title": "DhcpPoolStr"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Healthcheck": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "Healthcheck",
                "example": {
                    "status": "OK"
                }
            },
            "IpAddress": {
                "properties": {
                    "ip_address": {
                        "type": "string",
                        "title": "Ip Address"
                    },
                    "subnet_id": {
                        "type": "string",
                        "title": "Subnet Id"
                    }
                },
                "type": "object",
                "required": [
                    "ip_address",
                    "subnet_id"
                ],
                "title": "IpAddress",
                "example": {
                    "ip_address": "172.20.0.2",
                    "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "ListNetworkApiResponse": {
                "properties": {
                    "networks": {
                        "items": {
                            "$ref": "#/components/schemas/NetworkApiResponse"
                        },
                        "type": "array",
                        "title": "Networks"
                    }
                },
                "type": "object",
                "required": [
                    "networks"
                ],
                "title": "ListNetworkApiResponse",
                "example": {
                    "networks": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "error": "null",
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "vpc_name",
                            "status": "created",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "a"
                        }
                    ]
                }
            },
            "NetworkApiResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "is_default": {
                        "type": "boolean",
                        "title": "Is Default"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "vpc_id",
                    "name",
                    "is_default",
                    "status",
                    "zone"
                ],
                "title": "NetworkApiResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "error": "null",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "vpc_name",
                    "status": "created",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "NetworkResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 5,
                        "title": "Name"
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "status": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Status",
                        "nullable": true
                    },
                    "mtu": {
                        "type": "integer",
                        "title": "Mtu",
                        "nullable": true
                    },
                    "subnets": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "title": "Subnets",
                        "nullable": true
                    },
                    "shared": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Shared",
                        "nullable": true
                    },
                    "tags": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "title": "Tags",
                        "nullable": true
                    },
                    "port_security_enabled": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Port Security Enabled",
                        "nullable": true
                    },
                    "router_external": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Router External",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated At",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "NetworkResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "network description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_port_security_enabled": true,
                    "is_router_external": false,
                    "is_shared": false,
                    "mtu": "1500",
                    "name": "network_name",
                    "status": "ACTIVE",
                    "subnet_ids": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "tags": [
                        "network_tag"
                    ],
                    "updated_at": "2022-01-01 00:00:00"
                }
            },
            "PortCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 5,
                        "title": "Name"
                    },
                    "has_pip": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Has Pip",
                        "nullable": true
                    },
                    "has_sg": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Has Sg",
                        "nullable": true
                    },
                    "subnets": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "title": "Subnets",
                        "nullable": true
                    },
                    "security_groups_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "title": "Security Groups Id",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "PortCreateRequest",
                "example": {
                    "has_pip": true,
                    "has_sg": true,
                    "name": "port_name",
                    "security_groups_id": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "subnets": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ]
                }
            },
            "PortCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "PortCreateResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PortDeletedAllResponse": {
                "properties": {
                    "deleted_ports": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Ports"
                    },
                    "deleted_public_ips": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Public Ips"
                    }
                },
                "type": "object",
                "required": [
                    "deleted_ports",
                    "deleted_public_ips"
                ],
                "title": "PortDeletedAllResponse",
                "example": {
                    "deleted_ports": [
                        {
                            "openstack": 0
                        },
                        {
                            "database": 0
                        }
                    ],
                    "deleted_public_ips": [
                        {
                            "openstack": 0
                        },
                        {
                            "database": 0
                        }
                    ]
                }
            },
            "PortResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "is_admin_state_up": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Is Admin State Up",
                        "nullable": true
                    },
                    "vpc_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Vpc Id",
                        "nullable": true
                    },
                    "is_port_security_enabled": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Is Port Security Enabled",
                        "nullable": true
                    },
                    "security_groups": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Security Groups",
                        "default": []
                    },
                    "public_ip": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Public Ip",
                        "nullable": true
                    },
                    "ip_address": {
                        "items": {
                            "$ref": "#/components/schemas/IpAddress"
                        },
                        "type": "array",
                        "title": "Ip Address",
                        "default": []
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "PortResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "port description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_address": [
                        {
                            "ip_address": "172.20.0.2",
                            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ],
                    "is_admin_state_up": true,
                    "is_port_security_enabled": true,
                    "name": "port_name",
                    "public_ip": [
                        {
                            "public_ip": "100.94.5.31",
                            "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ],
                    "security_groups": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PortSimpleResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "ip_address": {
                        "items": {
                            "$ref": "#/components/schemas/IpAddress"
                        },
                        "type": "array",
                        "title": "Ip Address",
                        "default": []
                    }
                },
                "type": "object",
                "title": "PortSimpleResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_address": [
                        {
                            "ip_address": "172.20.0.2",
                            "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "PortsList": {
                "properties": {
                    "ports": {
                        "items": {
                            "$ref": "#/components/schemas/PortResponse"
                        },
                        "type": "array",
                        "title": "Ports"
                    }
                },
                "type": "object",
                "required": [
                    "ports"
                ],
                "title": "PortsList",
                "example": {
                    "ports": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "port description",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_address": [
                                {
                                    "ip_address": "172.20.0.2",
                                    "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                }
                            ],
                            "is_admin_state_up": true,
                            "is_port_security_enabled": true,
                            "name": "port_name",
                            "public_ip": [
                                {
                                    "public_ip": "100.94.5.31",
                                    "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                }
                            ],
                            "security_groups": [
                                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "PortsListSimplified": {
                "properties": {
                    "ports_simplified": {
                        "items": {
                            "$ref": "#/components/schemas/PortSimpleResponse"
                        },
                        "type": "array",
                        "title": "Ports Simplified"
                    }
                },
                "type": "object",
                "required": [
                    "ports_simplified"
                ],
                "title": "PortsListSimplified",
                "example": {
                    "ports_simplified": [
                        {
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_address": [
                                {
                                    "ip_address": "172.20.0.2",
                                    "subnet_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                }
                            ]
                        }
                    ]
                }
            },
            "ProjectType": {
                "type": "string",
                "enum": [
                    "dbaas",
                    "iamaas",
                    "k8saas",
                    "default",
                    "mngsvc"
                ],
                "title": "ProjectType"
            },
            "PublicIpCreateRequest": {
                "properties": {
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "PublicIpCreateRequest",
                "example": {
                    "description": "public_ip_description"
                }
            },
            "PublicIpCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "PublicIpCreateResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PublicIpDb": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "vpc_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Vpc Id",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "public_ip": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Public Ip",
                        "nullable": true
                    },
                    "port_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Port Id",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "status": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Status",
                        "nullable": true
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "PublicIpDb",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "port description",
                    "error": "error",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_ip": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "public_ip": "100.94.5.31",
                    "status": "created",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PublicIpResponseId": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "PublicIpResponseId",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PublicIpResponsePort": {
                "properties": {
                    "public_ip_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Public Ip Id",
                        "nullable": true
                    },
                    "public_ip": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Public Ip",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "PublicIpResponsePort",
                "example": {
                    "public_ip": "100.94.5.31",
                    "public_ip_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "PublicIpStatus": {
                "type": "string",
                "enum": [
                    "created",
                    "pending",
                    "error"
                ],
                "title": "PublicIpStatus"
            },
            "PublicIpUpdateRequest": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/PublicIpStatus"
                    },
                    "public_ip": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Public Ip",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "PublicIpUpdateRequest",
                "example": {
                    "error": "error",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "public_ip": "100.94.5.31",
                    "status": "created"
                }
            },
            "PublicIpsList": {
                "properties": {
                    "public_ips": {
                        "items": {
                            "$ref": "#/components/schemas/PublicIpDb"
                        },
                        "type": "array",
                        "title": "Public Ips"
                    }
                },
                "type": "object",
                "required": [
                    "public_ips"
                ],
                "title": "PublicIpsList",
                "example": {
                    "public_ips": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "port description",
                            "error": "error",
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "port_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "public_ip": "100.94.5.31",
                            "status": "created",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "QuotaModel": {
                "properties": {
                    "quota_slug": {
                        "type": "string",
                        "title": "Quota Slug"
                    },
                    "used": {
                        "type": "integer",
                        "title": "Used"
                    }
                },
                "type": "object",
                "required": [
                    "quota_slug",
                    "used"
                ],
                "title": "QuotaModel",
                "example": {
                    "quota_slug": "public_ips",
                    "used": 10
                }
            },
            "QuotaResult": {
                "properties": {
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/QuotaModel"
                        },
                        "type": "array",
                        "title": "Results"
                    }
                },
                "type": "object",
                "required": [
                    "results"
                ],
                "title": "QuotaResult",
                "example": {
                    "results": [
                        {
                            "quota_slug": "public_ips",
                            "used": 10
                        }
                    ]
                }
            },
            "RouteRequest": {
                "properties": {
                    "destination": {
                        "type": "string",
                        "title": "Destination"
                    },
                    "nexthop": {
                        "type": "string",
                        "title": "Nexthop"
                    }
                },
                "type": "object",
                "required": [
                    "destination",
                    "nexthop"
                ],
                "title": "RouteRequest",
                "example": {
                    "destination": "10.20.30.0/24",
                    "nexthop": "172.20.0.2"
                }
            },
            "RouterInterfaceResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "vpc_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Vpc Id",
                        "nullable": true
                    },
                    "router_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Router Id",
                        "nullable": true
                    },
                    "ip_address": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Ip Address",
                        "nullable": true
                    },
                    "nic_vpc_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Nic Vpc Id",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "RouterInterfaceResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_address": "172.20.0.2",
                    "nic_vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "RouterInterfaceResponseList": {
                "properties": {
                    "router_interfaces": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Router Interfaces",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "RouterInterfaceResponseList",
                "example": {
                    "router_interfaces": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_address": "172.20.0.2",
                            "nic_vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "RouterResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "external_network": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Network",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "is_default": {
                        "type": "boolean",
                        "title": "Is Default"
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "function": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Function",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "zone": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Zone",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "vpc_id",
                    "is_default",
                    "status"
                ],
                "title": "RouterResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "error": "null",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "function": "primary",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "vpc_name",
                    "status": "created",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "RuleCreateRequest": {
                "properties": {
                    "direction": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Direction",
                        "nullable": true
                    },
                    "port_range_min": {
                        "type": "integer",
                        "title": "Port Range Min",
                        "nullable": true
                    },
                    "port_range_max": {
                        "type": "integer",
                        "title": "Port Range Max",
                        "nullable": true
                    },
                    "protocol": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Protocol",
                        "nullable": true
                    },
                    "remote_ip_prefix": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Ip Prefix",
                        "nullable": true
                    },
                    "remote_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Group Id",
                        "nullable": true
                    },
                    "ethertype": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Ethertype",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "RuleCreateRequest",
                "example": {
                    "direction": "egress",
                    "ethertype": "IPv4",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "remote_ip_prefix": "100.94.0.0/24"
                }
            },
            "RuleCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "RuleCreateResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "RuleDefaultStatusEvent": {
                "properties": {
                    "security_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Security Group Id",
                        "nullable": true
                    },
                    "direction": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Direction",
                        "nullable": true
                    },
                    "port_range_min": {
                        "type": "integer",
                        "title": "Port Range Min",
                        "nullable": true
                    },
                    "port_range_max": {
                        "type": "integer",
                        "title": "Port Range Max",
                        "nullable": true
                    },
                    "protocol": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Protocol",
                        "nullable": true
                    },
                    "remote_ip_prefix": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Ip Prefix",
                        "nullable": true
                    },
                    "remote_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Group Id",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/RuleStatus"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "resource_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Resource Id",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "rules_zones": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Rules Zones",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "RuleDefaultStatusEvent",
                "example": {
                    "direction": "egress",
                    "error": "null",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "remote_ip_prefix": "100.94.0.0/24",
                    "resource_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "rules_zones": [
                        {
                            "resource_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "zone_name"
                        }
                    ],
                    "status": "created"
                }
            },
            "RuleResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "security_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Security Group Id",
                        "nullable": true
                    },
                    "direction": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Direction",
                        "nullable": true
                    },
                    "port_range_min": {
                        "type": "integer",
                        "title": "Port Range Min",
                        "nullable": true
                    },
                    "port_range_max": {
                        "type": "integer",
                        "title": "Port Range Max",
                        "nullable": true
                    },
                    "protocol": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Protocol",
                        "nullable": true
                    },
                    "remote_ip_prefix": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Ip Prefix",
                        "nullable": true
                    },
                    "remote_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Group Id",
                        "nullable": true
                    },
                    "ethertype": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Ethertype",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/RuleStatus"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "RuleResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "direction": "egress",
                    "ethertype": "IPv4",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "remote_ip_prefix": "100.94.0.0/24",
                    "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "created"
                }
            },
            "RuleResponseEvent": {
                "properties": {
                    "direction": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Direction",
                        "nullable": true
                    },
                    "port_range_min": {
                        "type": "integer",
                        "title": "Port Range Min",
                        "nullable": true
                    },
                    "port_range_max": {
                        "type": "integer",
                        "title": "Port Range Max",
                        "nullable": true
                    },
                    "protocol": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Protocol",
                        "nullable": true
                    },
                    "remote_ip_prefix": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Ip Prefix",
                        "nullable": true
                    },
                    "remote_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Group Id",
                        "nullable": true
                    },
                    "status": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "nullable": true
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "security_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Security Group Id",
                        "nullable": true
                    },
                    "ethertype": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Ethertype",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "RuleResponseEvent",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "direction": "egress",
                    "error": "null",
                    "ethertype": "IPv4",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "remote_ip_prefix": "100.94.0.0/24",
                    "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "created"
                }
            },
            "RuleStatus": {
                "type": "string",
                "enum": [
                    "created",
                    "pending",
                    "error"
                ],
                "title": "RuleStatus"
            },
            "RuleStatusEvent": {
                "properties": {
                    "direction": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Direction",
                        "nullable": true
                    },
                    "port_range_min": {
                        "type": "integer",
                        "title": "Port Range Min",
                        "nullable": true
                    },
                    "port_range_max": {
                        "type": "integer",
                        "title": "Port Range Max",
                        "nullable": true
                    },
                    "protocol": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Protocol",
                        "nullable": true
                    },
                    "remote_ip_prefix": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Ip Prefix",
                        "nullable": true
                    },
                    "remote_group_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Remote Group Id",
                        "nullable": true
                    },
                    "status": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "nullable": true
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "api_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Api Id",
                        "nullable": true
                    },
                    "rule_zones": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "object",
                        "oneOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/RuleZoneStatusEvent"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "type": "object"
                            }
                        ],
                        "title": "Rule Zones",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "RuleStatusEvent",
                "example": {
                    "api_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "direction": "egress",
                    "error": "null",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "port_range_max": 8028,
                    "port_range_min": 8028,
                    "protocol": "tcp",
                    "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "remote_ip_prefix": "100.94.0.0/24",
                    "rule_zones": [
                        {
                            "resource_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "zone_name"
                        }
                    ],
                    "status": "created"
                }
            },
            "RuleZoneCreateEvent": {
                "properties": {
                    "resource_id": {
                        "type": "string",
                        "title": "Resource Id"
                    },
                    "zone": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Zone",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "resource_id"
                ],
                "title": "RuleZoneCreateEvent",
                "example": {
                    "resource_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "zone_name"
                }
            },
            "RuleZoneStatusEvent": {
                "properties": {
                    "api_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Api Id",
                        "nullable": true
                    },
                    "zone": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Zone",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "status": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "nullable": true
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "RuleZoneStatusEvent",
                "example": {
                    "api_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "error": "error data, if any",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "created",
                    "zone": "zone_name"
                }
            },
            "RulesList": {
                "properties": {
                    "rules": {
                        "items": {
                            "$ref": "#/components/schemas/RuleResponse"
                        },
                        "type": "array",
                        "title": "Rules"
                    }
                },
                "type": "object",
                "required": [
                    "rules"
                ],
                "title": "RulesList",
                "example": {
                    "rules": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "direction": "egress",
                            "ethertype": "IPv4",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "port_range_max": 8028,
                            "port_range_min": 8028,
                            "protocol": "tcp",
                            "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "remote_ip_prefix": "100.94.0.0/24",
                            "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "status": "created"
                        }
                    ]
                }
            },
            "SecurityGroupCreateRequest": {
                "properties": {
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "SecurityGroupCreateRequest",
                "example": {
                    "description": "security group description",
                    "name": "security_group_name"
                }
            },
            "SecurityGroupCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "SecurityGroupCreateResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SecurityGroupDeletedAllResponse": {
                "properties": {
                    "deleted_security_groups": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Security Groups"
                    }
                },
                "type": "object",
                "required": [
                    "deleted_security_groups"
                ],
                "title": "SecurityGroupDeletedAllResponse",
                "example": {
                    "deleted_security_groups": [
                        {
                            "database": 0
                        },
                        {
                            "openstack": 0
                        }
                    ]
                }
            },
            "SecurityGroupDetailEvent": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "vpc_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Vpc Id",
                        "nullable": true
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/SecurityGroupStatus"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "tenant_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Tenant Id",
                        "nullable": true
                    },
                    "project_type": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Project Type",
                        "nullable": true
                    },
                    "is_default": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Is Default",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "rules": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Rules",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "SecurityGroupDetailEvent",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "security group description",
                    "error": "null",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "security_group_name",
                    "project_type": "default",
                    "rules": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "direction": "egress",
                            "error": "null",
                            "ethertype": "IPv4",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "port_range_max": 8028,
                            "port_range_min": 8028,
                            "protocol": "tcp",
                            "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "remote_ip_prefix": "100.94.0.0/24",
                            "security_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "status": "created"
                        }
                    ],
                    "status": "created",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SecurityGroupListEvent": {
                "properties": {
                    "security_groups": {
                        "items": {
                            "$ref": "#/components/schemas/SecurityGroupResponseEvent"
                        },
                        "type": "array",
                        "title": "Security Groups"
                    }
                },
                "type": "object",
                "required": [
                    "security_groups"
                ],
                "title": "SecurityGroupListEvent",
                "example": {
                    "security_groups": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "security group description",
                            "error": "null",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "security_group_name",
                            "project_type": "default",
                            "status": "created",
                            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "SecurityGroupResponseEvent": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "vpc_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Vpc Id",
                        "nullable": true
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/SecurityGroupStatus"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "tenant_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Tenant Id",
                        "nullable": true
                    },
                    "project_type": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Project Type",
                        "nullable": true
                    },
                    "is_default": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Is Default",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "SecurityGroupResponseEvent",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "security group description",
                    "error": "null",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "security_group_name",
                    "project_type": "default",
                    "status": "created",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SecurityGroupStatus": {
                "type": "string",
                "enum": [
                    "created",
                    "pending",
                    "error"
                ],
                "title": "SecurityGroupStatus"
            },
            "SecurityGroupStatusEvent": {
                "properties": {
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "api_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Api Id",
                        "nullable": true
                    },
                    "rules": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Rules",
                        "nullable": true
                    },
                    "security_group_zones": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "object",
                        "oneOf": [
                            {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/SecurityGroupZoneStatusEvent"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "type": "object"
                            }
                        ],
                        "title": "Security Group Zones",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "SecurityGroupStatusEvent",
                "example": {
                    "api_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "error": "null",
                    "rules": [
                        {
                            "api_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "direction": "egress",
                            "error": "null",
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "port_range_max": 8028,
                            "port_range_min": 8028,
                            "protocol": "tcp",
                            "remote_group_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "remote_ip_prefix": "100.94.0.0/24",
                            "rule_zones": [
                                {
                                    "api_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                                    "zone": "zone_name"
                                }
                            ],
                            "status": "created"
                        }
                    ],
                    "security_group_zones": [
                        {
                            "api_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "zone_name"
                        }
                    ],
                    "status": "created"
                }
            },
            "SecurityGroupZoneStatusEvent": {
                "properties": {
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "api_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Api Id",
                        "nullable": true
                    },
                    "zone": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Zone",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "SecurityGroupZoneStatusEvent",
                "example": {
                    "api_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "error": "error data, if any",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "created",
                    "zone": "zone_name"
                }
            },
            "SlugQuotas": {
                "type": "string",
                "enum": [
                    "public_ips",
                    "subnets",
                    "subnet_pools",
                    "security_groups",
                    "security_group_rules",
                    "vpcs",
                    "nics"
                ],
                "title": "SlugQuotas"
            },
            "SubnetCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "cidr_block": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Cidr Block",
                        "nullable": true
                    },
                    "ip_version": {
                        "type": "integer",
                        "title": "Ip Version"
                    },
                    "dns_nameservers": {
                        "items": {
                            "type": "string",
                            "format": "ipvanyaddress"
                        },
                        "type": "array",
                        "title": "Dns Nameservers",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "ip_version"
                ],
                "title": "SubnetCreateRequest",
                "example": {
                    "cidr_block": "172.50.0.0/24",
                    "description": "some_description",
                    "dns_nameservers": [
                        "8.8.8.8"
                    ],
                    "ip_version": 4,
                    "name": "subnet_name"
                }
            },
            "SubnetCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "SubnetCreateResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetPatchRequest": {
                "properties": {
                    "dns_nameservers": {
                        "items": {
                            "type": "string",
                            "format": "ipvanyaddress"
                        },
                        "type": "array",
                        "title": "Dns Nameservers",
                        "default": []
                    }
                },
                "type": "object",
                "title": "SubnetPatchRequest",
                "example": {
                    "dns_nameservers": [
                        "8.8.8.8"
                    ]
                }
            },
            "SubnetPoolDetailsResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "pool_prefix": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Pool Prefix"
                    },
                    "min_prefix_length": {
                        "type": "integer",
                        "title": "Min Prefix Length"
                    },
                    "max_prefix_length": {
                        "type": "integer",
                        "title": "Max Prefix Length"
                    },
                    "default_prefix_length": {
                        "type": "integer",
                        "title": "Default Prefix Length"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "tenant_id",
                    "vpc_id",
                    "name",
                    "pool_prefix",
                    "min_prefix_length",
                    "max_prefix_length",
                    "default_prefix_length",
                    "description"
                ],
                "title": "SubnetPoolDetailsResponse",
                "description": "A Pydantic model representing the request for creating one Subnet Pool.",
                "example": {
                    "default_prefix_length": 26,
                    "description": "some description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "max_prefix_length": 28,
                    "min_prefix_length": 24,
                    "name": "some_subnet_pool",
                    "pool_prefix": [
                        "172.26.0.0/16"
                    ],
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetPoolRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the subnet pool."
                    },
                    "pool_prefix": {
                        "type": "string",
                        "title": "Pool Prefix",
                        "description": "The CIDR notation prefix for the subnet pool.",
                        "default": "172.26.0.0/16"
                    },
                    "min_prefix_length": {
                        "type": "integer",
                        "title": "Min Prefix Length",
                        "description": "The minimum prefix length for a subnet in the pool.",
                        "default": 24
                    },
                    "max_prefix_length": {
                        "type": "integer",
                        "title": "Max Prefix Length",
                        "description": "The maximum prefix length for a subnet in the pool.",
                        "default": 28
                    },
                    "default_prefix_length": {
                        "type": "integer",
                        "title": "Default Prefix Length",
                        "description": "The default prefix length for a subnet in the pool.",
                        "default": 26
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description for the subnet pool"
                    },
                    "address_scope_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Address Scope Id",
                        "description": "The ID of the address scope for the subnet pool",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "title": "SubnetPoolRequest",
                "description": "A Pydantic model representing the request for creating one Subnet Pool.",
                "example": {
                    "address_scope_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "default_prefix_length": 26,
                    "description": "some description",
                    "max_prefix_length": 28,
                    "min_prefix_length": 24,
                    "name": "some_subnet_pool",
                    "pool_prefix": "172.26.0.0/16"
                }
            },
            "SubnetPoolResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "tenant_id",
                    "vpc_id",
                    "name",
                    "external_id"
                ],
                "title": "SubnetPoolResponse",
                "description": "A Pydantic model representing a response for Subnet Pool creation.\n\nAttributes:\n    id (str): The ID of the subnet pool.\n    tenant_id (str): The ID of the tenant that owns the subnet pool.\n    vpc_id (str): The ID of the VPC that the subnet pool belongs to.\n    name (str): The name of the subnet pool.\n    external_id (str): The ID of the subnet pool in OpenStack.",
                "example": {
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "name": "some_subnet_pool",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetPoolsResponse": {
                "properties": {
                    "subnetpools": {
                        "items": {
                            "$ref": "#/components/schemas/SubnetPoolResponse"
                        },
                        "type": "array",
                        "title": "Subnetpools",
                        "default": []
                    }
                },
                "type": "object",
                "title": "SubnetPoolsResponse",
                "description": "A Pydantic model representing a list of Subnet Pools.",
                "example": {
                    "subnetpools": [
                        {
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "name": "some_subnet_pool",
                            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "SubnetResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "cidr_block": {
                        "type": "string",
                        "title": "Cidr Block"
                    },
                    "ip_version": {
                        "type": "string",
                        "title": "Ip Version"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "vpc_id",
                    "cidr_block",
                    "ip_version",
                    "zone"
                ],
                "title": "SubnetResponse",
                "example": {
                    "cidr_block": "172.20.0.0/24",
                    "created_at": "2022-01-01 00:00:00",
                    "description": "vpc description",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_version": "4",
                    "name": "vpc_name",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "SubnetResponseDetail": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "cidr_block": {
                        "type": "string",
                        "title": "Cidr Block"
                    },
                    "ip_version": {
                        "type": "string",
                        "title": "Ip Version"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "gateway_ip": {
                        "type": "string",
                        "title": "Gateway Ip"
                    },
                    "dns_nameservers": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Dns Nameservers"
                    },
                    "dhcp_pools": {
                        "items": {
                            "$ref": "#/components/schemas/DhcpPoolStr"
                        },
                        "type": "array",
                        "title": "Dhcp Pools"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "vpc_id",
                    "cidr_block",
                    "ip_version",
                    "zone",
                    "gateway_ip",
                    "dns_nameservers",
                    "dhcp_pools"
                ],
                "title": "SubnetResponseDetail",
                "example": {
                    "cidr_block": "172.20.0.0/24",
                    "created_at": "2022-01-01 00:00:00",
                    "description": "vpc description",
                    "dhcp_pools": [
                        {
                            "end": "172.50.0.254",
                            "start": "172.50.0.2"
                        }
                    ],
                    "dns_nameservers": [
                        "8.8.8.8"
                    ],
                    "gateway_ip": "172.50.0.1",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_version": "4",
                    "name": "vpc_name",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "SubnetResponseId": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "SubnetResponseId",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "SubnetResponseXAAS": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "vpc_id": {
                        "type": "string",
                        "title": "Vpc Id"
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "cidr": {
                        "type": "string",
                        "title": "Cidr"
                    },
                    "ethertype": {
                        "type": "string",
                        "title": "Ethertype"
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "subnetpool_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Subnetpool Id",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    },
                    "cidr_block": {
                        "type": "string",
                        "title": "Cidr Block"
                    },
                    "ip_version": {
                        "type": "string",
                        "title": "Ip Version"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "vpc_id",
                    "cidr",
                    "ethertype",
                    "cidr_block",
                    "ip_version",
                    "zone"
                ],
                "title": "SubnetResponseXAAS",
                "example": {
                    "cidr": "172.20.0.0/24",
                    "cidr_block": "[ATENÇÃO] - Este campo futuramente substituirá 'cidr'",
                    "created_at": "2022-01-01 00:00:00",
                    "description": "vpc description",
                    "ethertype": "4",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ip_version": "[ATENÇÃO] - Este campo futuramente substituirá 'ethertype'",
                    "name": "vpc_name",
                    "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "zone": "a"
                }
            },
            "SubnetsResponse": {
                "properties": {
                    "subnets": {
                        "items": {
                            "$ref": "#/components/schemas/SubnetResponse"
                        },
                        "type": "array",
                        "title": "Subnets",
                        "default": []
                    }
                },
                "type": "object",
                "title": "SubnetsResponse",
                "example": {
                    "subnets": [
                        {
                            "cidr_block": "172.20.0.0/24",
                            "created_at": "2022-01-01 00:00:00",
                            "description": "vpc description",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_version": "4",
                            "name": "vpc_name",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "a"
                        }
                    ]
                }
            },
            "SubnetsResponseXAAS": {
                "properties": {
                    "subnets": {
                        "items": {
                            "$ref": "#/components/schemas/SubnetResponseXAAS"
                        },
                        "type": "array",
                        "title": "Subnets",
                        "default": []
                    }
                },
                "type": "object",
                "title": "SubnetsResponseXAAS",
                "example": {
                    "subnets": [
                        {
                            "cidr": "172.20.0.0/24",
                            "cidr_block": "[ATENÇÃO] - Este campo futuramente substituirá 'cidr'",
                            "created_at": "2022-01-01 00:00:00",
                            "description": "vpc description",
                            "ethertype": "4",
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "ip_version": "[ATENÇÃO] - Este campo futuramente substituirá 'ethertype'",
                            "name": "vpc_name",
                            "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "a"
                        }
                    ]
                }
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VpcCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "VpcCreateRequest",
                "example": {
                    "description": "DESCRIPTION",
                    "name": "vpc_name"
                }
            },
            "VpcCreateResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "VpcCreateResponse",
                "example": {
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "VpcDeletedAllResponse": {
                "properties": {
                    "deleted_vpcs": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Vpcs"
                    },
                    "deleted_subnet_pools": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Subnet Pools"
                    },
                    "deleted_routers": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Routers"
                    },
                    "deleted_networks": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Networks"
                    },
                    "deleted_security_groups": {
                        "items": {
                            "additionalProperties": {
                                "type": "integer"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Deleted Security Groups",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "deleted_vpcs",
                    "deleted_subnet_pools",
                    "deleted_routers",
                    "deleted_networks"
                ],
                "title": "VpcDeletedAllResponse",
                "example": {
                    "deleted_networks": [
                        {
                            "database": 0
                        },
                        {
                            "openstack": 0
                        }
                    ],
                    "deleted_routers": [
                        {
                            "database": 0
                        },
                        {
                            "openstack": 0
                        }
                    ],
                    "deleted_security_groups": [
                        {
                            "database": 0
                        },
                        {
                            "openstack": 0
                        }
                    ],
                    "deleted_subnet_pools": [
                        {
                            "database": 0
                        },
                        {
                            "openstack": 0
                        }
                    ],
                    "deleted_vpcs": [
                        {
                            "database": 0
                        },
                        {
                            "openstack": 0
                        }
                    ]
                }
            },
            "VpcDetailsResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "tenant_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Tenant Id",
                        "nullable": true
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "routers": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Routers",
                        "nullable": true
                    },
                    "networks": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Networks",
                        "nullable": true
                    },
                    "subnets": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "title": "Subnets",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "is_default": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Is Default",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "VpcDetailsResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "DESCRIPTION",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "vpc_name",
                    "networks": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "network description",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_port_security_enabled": true,
                            "is_router_external": false,
                            "is_shared": false,
                            "mtu": "1500",
                            "name": "network_name",
                            "status": "ACTIVE",
                            "subnet_ids": [
                                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "tags": [
                                "network_tag"
                            ],
                            "updated_at": "2022-01-01 00:00:00"
                        }
                    ],
                    "routers": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "error": "null",
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "function": "primary",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "vpc_name",
                            "status": "created",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "zone": "a"
                        }
                    ],
                    "subnets": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00"
                }
            },
            "VpcResponse": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "tenant_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Tenant Id",
                        "nullable": true
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "router_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Router Id",
                        "nullable": true
                    },
                    "external_network": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Network",
                        "nullable": true
                    },
                    "network_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Network Id",
                        "nullable": true
                    },
                    "subnets": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "title": "Subnets",
                        "nullable": true
                    },
                    "security_groups": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Security Groups",
                        "default": []
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "is_default": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Is Default",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "VpcResponse",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "DESCRIPTION",
                    "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "vpc_name",
                    "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "security_groups": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "subnets": [
                        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    ],
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00"
                }
            },
            "VpcResponseList": {
                "properties": {
                    "vpcs": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "nullable": true
                        },
                        "title": "Vpcs",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "VpcResponseList",
                "example": {
                    "vpcs": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "DESCRIPTION",
                            "external_network": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "vpc_name",
                            "network_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "router_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "security_groups": [
                                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "subnets": [
                                "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "updated": "2022-01-01 00:00:00"
                        }
                    ]
                }
            },
            "XVpcCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "subnetpool_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Subnetpool Id",
                        "description": "ID of SubnetPool             from which the VPC will get CIDRs.             Can be used instead of 'cidr' field.",
                        "nullable": true
                    },
                    "cidr": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Cidr",
                        "description": "CIDR from which VPC's subnets will get IPs            Can be used instead of 'subnetpool_id' field.",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "XVpcCreateRequest",
                "description": "XVpcCreateRequest is the equivalent of VpcCreateRequest\nfor XaaS routes.",
                "example": {
                    "cidr": "172.20.0.0/24",
                    "description": "vpc description",
                    "name": "vpc_name",
                    "subnetpool_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            },
            "XaasSecurityGroupListEvent": {
                "properties": {
                    "security_groups": {
                        "items": {
                            "$ref": "#/components/schemas/XaasSecurityGroupResponseEvent"
                        },
                        "type": "array",
                        "title": "Security Groups"
                    }
                },
                "type": "object",
                "required": [
                    "security_groups"
                ],
                "title": "XaasSecurityGroupListEvent",
                "example": {
                    "security_groups": [
                        {
                            "created_at": "2022-01-01 00:00:00",
                            "description": "security group description",
                            "error": "null",
                            "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "is_default": true,
                            "name": "security_group_name",
                            "project_type": "default",
                            "status": "created",
                            "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "updated": "2022-01-01 00:00:00",
                            "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                        }
                    ]
                }
            },
            "XaasSecurityGroupResponseEvent": {
                "properties": {
                    "id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Id",
                        "nullable": true
                    },
                    "vpc_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Vpc Id",
                        "nullable": true
                    },
                    "name": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Name",
                        "nullable": true
                    },
                    "description": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Description",
                        "nullable": true
                    },
                    "created_at": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Created At",
                        "nullable": true
                    },
                    "updated": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Updated",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/SecurityGroupStatus"
                    },
                    "error": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Error",
                        "nullable": true
                    },
                    "tenant_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Tenant Id",
                        "nullable": true
                    },
                    "project_type": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "Project Type",
                        "nullable": true
                    },
                    "is_default": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "boolean",
                        "title": "Is Default",
                        "nullable": true
                    },
                    "external_id": {
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "type": "string",
                        "title": "External Id",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "XaasSecurityGroupResponseEvent",
                "example": {
                    "created_at": "2022-01-01 00:00:00",
                    "description": "security group description",
                    "error": "null",
                    "external_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "is_default": true,
                    "name": "security_group_name",
                    "project_type": "default",
                    "status": "created",
                    "tenant_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "updated": "2022-01-01 00:00:00",
                    "vpc_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            }
        }
    }
}
