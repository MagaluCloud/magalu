name: MGC SDK CI

on:
  push:
    tags:
      - "v*.*.*"
    branches: [ main ]
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

concurrency:
  group: ci-check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.17.0'
          cache-dependency-path: "**/go.sum"
      - run: go version
      - name: Build CLI
        env:
          VERSION: CI
          CHECK_RELEASE: 0
        run: ./scripts/build_release.sh

  pre-commit:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: "Install go imports"
        run: go install golang.org/x/tools/cmd/goimports@latest
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.17.0'
          cache-dependency-path: "**/go.sum"
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --show-diff-on-failure --color=always --hook-stage push --all-files
  pre-release:
    needs: pre-commit
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - name: Check version.txt
        run: "bash ./scripts/check_release.sh"
#
#  cli-release:
#    needs: pre-release
#    runs-on: ubuntu-latest
#    if: github.ref_type == 'tag'
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          go-version: stable
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v5
#        with:
#          distribution: goreleaser
#          version: latest
#          args: release --clean --config="goreleaser_cli.yaml"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  terraform-release:
    needs: pre-release
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --config="goreleaser_terraform.yaml"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
