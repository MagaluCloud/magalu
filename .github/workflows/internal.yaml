name: Internal Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., v1.0.0)"
        required: true
        type: string

concurrency:
  group: ci-check-${{ github.ref }}
  
jobs:
  build:
    runs-on: ${{ vars.RUNNER_RUNS_ON }}
    env:
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.REPO_SNAPCRAFT_TOKEN }}    
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          token: ${{ secrets.GH_PAT2 }}
          fetch-depth: 1
      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v3          
      - name: Set up Go
        uses: actions/setup-go@v5.0.2
        with:
          cache-dependency-path: "**/go.sum"
          go-version: ${{ vars.GO_VERSION }} # settings > secrets and variables > variables > GO_VERSION
      - name: Run GoReleaser
        continue-on-error: true
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: 2
          args: release --clean --config="internal.yaml"
        env:
          VERSION: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT2 }}
          PRIVATE_KEY_PATH: ${{ secrets.SSH_ID_RSA_MAGALUCLI }}

snapcrafts:
  - name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    name: mgccli
    summary: Magalu Cloud command line interface
    description: |
      The **MGC CLI** (Command Line Interface) is a tool that allows users to interact with Magalu Cloud services through the command line.

      Through the CLI, you can manage, among other things:
        * Object Storage (buckets, objects, ACL, versions, signed URLs)
        * Virtual Machines (instances, snapshots)
        * DBaaS (instances, replications)
        * Block Storage (volumes, VM associations)
        * VPC (subnets, security rules, public IP)
        * Kubernetes Cluster (create, scale, monitor)
    grade: stable
    confinement: classic
    license: GPL-3.0-only
    base: core24
    apps:
      mgc:
        command: mgc
        aliases:
          - mgc
        plugs:
          # - home ## ??
          - desktop ## aprove automatically
          - browser-support ## aprove automatically
          - network ## aprove automatically
          - network-bind ## aprove automatically
    publish: true
    channel_templates:
      - edge  